{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/a11y.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/bidi.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/keycodes.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/observers.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/cdk/fesm2015/cdk.js","webpack:///node_modules/@angular/cdk/fesm2015/coercion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js","webpack:///node_modules/angular-user-idle/__ivy_ngcc__/fesm2015/angular-user-idle.js","webpack:///src/app/components/shared/dialog/dialog.component.html","webpack:///src/app/components/shared/dialog/dialog.component.ts","webpack:///src/app/modules/shared/dialog/dialog.module.ts","webpack:///src/app/pipes/time/decrease-minutes/decrease-minutes.pipe.ts","webpack:///src/app/services/authentication/user/user-session.service.ts","webpack:///src/app/services/utils/shared/shared-interface.service.ts","webpack:///src/app/utils/dialog-data.ts"],"names":["ID_DELIMINATOR","addAriaReferencedId","el","attr","id","ids","getAriaReferenceIds","some","existingId","trim","push","setAttribute","join","removeAriaReferencedId","filteredIds","filter","val","length","removeAttribute","getAttribute","match","RegisteredMessage","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","messageRegistry","Map","messagesContainer","AriaDescriber","_document","hostElement","message","_canBeDescribed","_setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","_isElementNode","_removeMessageReference","registeredMessage","get","_deleteMessageElement","childNodes","_deleteMessagesContainer","describedElements","querySelectorAll","i","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","appendChild","element","removeChild","preExistingContainer","getElementById","parentNode","style","display","body","originalReferenceIds","indexOf","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","ɵfac","AriaDescriber_Factory","t","ctorParameters","type","undefined","decorators","args","ɵprov","factory","token","providedIn","ListKeyManagerOption","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","EMPTY","_vertical","_allowedModifierKeys","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","changes","subscribe","newItems","itemArray","toArray","newIndex","predicate","shouldWrap","enabled","direction","_horizontal","keys","debounceInterval","getLabel","Error","unsubscribe","pipe","letter","inputString","items","_getItemsArray","index","toUpperCase","setActiveItem","previousIndex","updateActiveItem","next","event","keyCode","modifiers","isModifierAllowed","every","modifier","setNextItemActive","setPreviousItemActive","key","toLocaleUpperCase","String","fromCharCode","preventDefault","_setActiveItemByIndex","setFirstItemActive","_setActiveItemByDelta","setLastItemActive","activeItem","delta","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","Highlightable","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusableOption","FocusKeyManager","arguments","_origin","origin","focus","InteractivityChecker","_platform","hasAttribute","hasGeometry","getComputedStyle","visibility","isBrowser","frameElement","getFrameElement","getWindow","frameType","nodeName","toLowerCase","getTabIndexValue","BLINK","WEBKIT","isVisible","tabIndexValue","TRIDENT","FIREFOX","IOS","isPotentiallyTabbableIOS","tabIndex","isPotentiallyFocusable","isDisabled","InteractivityChecker_Factory","window","_a","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","isNaN","parseInt","inputType","node","ownerDocument","defaultView","FocusTrap","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","_enabled","attachAnchors","startAnchor","_startAnchor","endAnchor","_endAnchor","removeEventListener","runOutsideAngular","_createAnchor","addEventListener","insertBefore","nextSibling","Promise","resolve","_executeOnStable","focusInitialElement","bound","markers","console","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","isFocusable","_getRegionBoundary","root","isTabbable","children","tabbableChild","anchor","_toggleAnchorTabIndex","classList","add","isEnabled","fn","isStable","onStable","asObservable","value","FocusTrapFactory","deferCaptureElements","FocusTrapFactory_Factory","CdkTrapFocus","_elementRef","_focusTrapFactory","_previouslyFocusedElement","focusTrap","create","nativeElement","destroy","autoCapture","activeElement","focusInitialElementWhenReady","hasAttached","_autoCapture","CdkTrapFocus_Factory","ɵdir","selectors","inputs","exportAs","propDecorators","selector","ConfigurableFocusTrap","_focusTrapManager","_inertStrategy","config","defer","register","deregister","preventFocus","toggleAnchors","allowFocus","closest","Node","curr","Element","hasNativeClosest","polyfillClosest","matches","prototype","EventListenerFocusTrapInertStrategy","_listener","e","_trapFocus","target","focusTrapRoot","contains","setTimeout","ConfigurableFocusTrapConfig","FOCUS_TRAP_INERT_STRATEGY","FocusTrapInertStrategy","ManagedFocusTrap","FocusTrapManager","_focusTrapStack","ft","stack","_disable","_enable","splice","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LiveAnnouncerDefaultOptions","LIVE_ANNOUNCER_DEFAULT_OPTIONS","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","elementClass","previousElements","getElementsByClassName","liveEl","LiveAnnouncer_Factory","CdkAriaLive","_liveAnnouncer","_contentObserver","_politeness","_subscription","observe","elementText","_previousAnnouncedText","announce","CdkAriaLive_Factory","TOUCH_BUFFER_MS","FocusOptions","FocusMonitorDetectionMode","IMMEDIATE","EVENTUAL","FocusMonitorOptions","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","passive","capture","FocusMonitor","document","options","_windowFocused","_elementInfo","_monitoredElementCount","_documentKeydownListener","_lastTouchTarget","_setOriginForCurrentEventQueue","_documentMousedownListener","_documentTouchstartListener","_touchTimeoutId","composedPath","_windowFocusListener","_windowFocusTimeoutId","_detectionMode","detectionMode","checkChildren","cachedInfo","subject","info","unlisten","_incrementMonitoredElementCount","focusListener","_onFocus","blurListener","_onBlur","elementInfo","complete","_setClasses","_decrementMonitoredElementCount","forEach","_info","stopMonitoring","doc","_getDocument","className","shouldSet","remove","_toggleClass","_originTimeoutId","focusTarget","_lastFocusOrigin","_wasCausedByTouch","_emitOrigin","relatedTarget","run","_getWindow","FocusMonitor_Factory","CdkMonitorFocus","_focusMonitor","cdkFocusChange","_monitorSubscription","monitor","emit","CdkMonitorFocus_Factory","outputs","isFakeMousedownFromScreenReader","buttons","HighContrastMode","NONE","BLACK_ON_WHITE","WHITE_ON_BLACK","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","testElement","backgroundColor","position","documentWindow","computedColor","replace","bodyClasses","mode","getHighContrastMode","HighContrastModeDetector_Factory","A11yModule","highContrastModeDetector","_applyBodyHighContrastModeCssClasses","ɵmod","ɵinj","A11yModule_Factory","imports","ngJitMode","declarations","exports","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","Directionality","bodyDir","dir","htmlDir","documentElement","Directionality_Factory","Dir","_dir","_isInitialized","old","normalizedValue","_rawDir","Dir_Factory","hostVars","hostBindings","Dir_HostBindings","rf","ctx","features","provide","useExisting","providers","host","BidiModule","BidiModule_Factory","DataSource","isDataSource","connect","ArrayDataSource","_data","CollectionViewer","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","size","isEmpty","selected","_selected","sort","source","added","removed","getMultipleValuesInSingleSelectionError","Array","from","SelectionChange","UniqueSelectionDispatcher","_listeners","name","listener","registered","UniqueSelectionDispatcher_Factory","TreeDataNodeFlattener","MAC_ENTER","BACKSPACE","TAB","NUM_CENTER","ENTER","SHIFT","CONTROL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","META","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","MAC_META","hasModifierKey","altKey","shiftKey","ctrlKey","metaKey","MutationObserverFactory","callback","MutationObserver","MutationObserverFactory_Factory","ContentObserver","_mutationObserverFactory","_observedElements","_","_cleanupObserver","elementOrRef","observer","stream","_observeElement","subscription","_unobserveElement","mutations","characterData","childList","subtree","count","disconnect","ContentObserver_Factory","CdkObserveContent","_disabled","_currentSubscription","_subscribe","_unsubscribe","debounce","_debounce","CdkObserveContent_Factory","ObserversModule","ObserversModule_Factory","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","top","left","_isEnabled","_canBeEnabled","_previousScrollPosition","getViewportScrollPosition","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","ScrollStrategy","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategyConfig","CloseScrollStrategy","_scrollDispatcher","_config","_scrollSubscription","_detach","disable","_overlayRef","detach","overlayRef","scrolled","threshold","_initialScrollPosition","scrollPosition","Math","abs","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","scrollContainers","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategyConfig","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","block","reposition","ScrollStrategyOptions_Factory","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","OriginConnectionPosition","OverlayConnectionPosition","ConnectionPositionPair","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","overlays","_keydownEventSubscriptions","_keydownEvents","_isAttached","OverlayKeyboardDispatcher_Factory","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER","deps","useFactory","isTestEnvironment","__karma__","jasmine","OverlayContainer","container","_containerElement","_createContainer","containerClass","oppositePlatformContainers","OverlayContainer_Factory","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_keydownEventsObservable","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","parentElement","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","apply","strategy","sizeConfig","assign","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","requestAnimationFrame","backdropToDetach","timeoutId","finishDetach","cssClasses","isAdd","cssClass","OverlaySizeConfig","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","offset","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","observers","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","pair","Point","OverlayFit","FallbackPosition","BoundingBoxRect","FlexibleFit","ConnectedPosition","destination","hasOwnProperty","input","split","units","parseFloat","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","slice","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","_appRef","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","viewportMargin","open","backdropClick","positionChange","overlayKeydown","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","_buildConfig","keydownEvents","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","p","_createOverlay","CdkConnectedOverlay_Factory","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","OverlayModule_Factory","OVERLAY_PROVIDERS","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","hasV8BreakIterator","Intl","v8BreakIterator","Platform","_platformId","EDGE","test","navigator","userAgent","chrome","CSS","ANDROID","SAFARI","Platform_Factory","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","normalizePassiveListenerOptions","RtlScrollAxisType","NORMAL","NEGATED","INVERTED","rtlScrollAxisType","supportsScrollBehavior","getRtlScrollAxisType","scrollContainer","containerStyle","overflow","content","contentStyle","scrollLeft","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","_getShadowRoot","rootNode","getRootNode","ShadowRoot","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","ComponentType","Portal","_attachedHost","ComponentPortal","component","injector","componentFactoryResolver","TemplatePortal","template","context","DomPortal","PortalOutlet","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","CdkPortalOutlet","_viewContainerRef","attached","_getRootNode","_attachedRef","ref","CdkPortalOutlet_Factory","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","VirtualScrollStrategy","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","behavior","scrollToOffset","setTotalContentSize","getDataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","renderedRange","getRenderedRange","newRange","end","viewportSize","dataLength","startBuffer","expandStart","ceil","endBuffer","expandEnd","floor","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","DEFAULT_SCROLL_TIME","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","elementScrolled","scrollableReference","auditTimeInMs","_addGlobalListener","_removeGlobalListener","ancestors","getAncestorScrollContainers","scrollingContainers","_scrollableContainsElement","scrollableElement","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_destroyed","_elementScrolled","_applyScrollToOptions","scrollTo","scrollTop","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportScrollPosition","ViewportRuler","_change","_invalidateCache","_updateViewportSize","_viewportSize","output","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_changeDetectorRef","_detachedSubject","_renderedRangeSubject","_orientation","then","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","onContentScrolled","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","onDataLengthChanged","_doChangeDetection","_calculateSpacerSize","range","onContentRendered","to","isHorizontal","orientation","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","_t","first","hostAttrs","CdkVirtualScrollViewport_HostBindings","ngContentSelectors","decls","vars","consts","CdkVirtualScrollViewport_Template","encapsulation","changeDetection","None","OnPush","getSize","rect","CdkVirtualForOf","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_onRenderedDataChange","renderedStartIndex","rangeLen","totalSize","view","j","diff","_renderedItems","_updateContext","_applyChanges","find","cdkVirtualForTrackBy","oldDs","newDs","_updateComputedContextProperties","forEachOperation","record","adjustedPreviousIndex","currentIndex","_insertViewForNewItem","$implicit","_cacheView","_detachView","move","forEachIdentityChange","_insertViewFromCache","_createEmbeddedViewAt","last","even","odd","cdkVirtualForOf","_cdkVirtualForOf","cachedView","pop","insert","call","_cdkVirtualForTrackBy","CdkVirtualForOf_Factory","cdkVirtualForTemplate","ScrollingModule","ScrollingModule_Factory","listenerOptions","AutofillMonitor","_monitoredElements","result","animationName","isAutofilled","AutofillMonitor_Factory","CdkAutofill","_autofillMonitor","cdkAutofill","CdkAutofill_Factory","CdkTextareaAutosize","_previousMinRows","_textareaElement","minRows","_cachedLineHeight","maxRows","_initialHeight","resizeToFitContent","textareaClone","cloneNode","rows","border","padding","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","_minRows","_previousValue","placeholderText","placeholder","_scrollToCaretPosition","selectionStart","selectionEnd","isStopped","setSelectionRange","_maxRows","reset","CdkTextareaAutosize_Factory","CdkTextareaAutosize_HostBindings","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","TextFieldModule","TextFieldModule_Factory","VERSION","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","coerceArray","isArray","coerceCssPixelValue","coerceElement","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_MatButtonMixinBase","MatButton","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","_getHostElement","color","focusVia","disableRipple","attributes","attribute","MatButton_Factory","MatButton_Query","ripple","MatButton_HostBindings","attrs","MatButton_Template","_isRippleDisabled","directives","MatAnchor","focusMonitor","animationMode","stopImmediatePropagation","MatAnchor_Factory","MatAnchor_HostBindings","MatAnchor_click_HostBindingHandler","$event","_haltDisabledEvents","toString","MatAnchor_Template","MatButtonModule","MatButtonModule_Factory","enterDuration","_c2","MatCheckboxDefaultOptions","MAT_CHECKBOX_DEFAULT_OPTIONS","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","clickAction","MAT_CHECKBOX_CLICK_ACTION","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","MatCheckbox","multi","TransitionCheckState","Init","Checked","Unchecked","Indeterminate","MatCheckboxChange","MatCheckboxBase","_MatCheckboxMixinBase","_clickAction","_options","ariaLabelledby","_uniqueId","labelPosition","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_indeterminate","focusOrigin","_syncIndeterminate","checked","indeterminate","newState","oldState","_getAnimationClassForCheckStateTransition","animationClass","stopPropagation","toggle","_transitionCheckState","_inputElement","animSuffix","nativeCheckbox","_required","newValue","MatCheckbox_Factory","MatCheckbox_Query","MatCheckbox_HostBindings","required","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r3","_r5","inputId","_getAriaChecked","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","MatCheckboxRequiredValidator_Factory","ɵMatCheckboxRequiredValidator_BaseFactory","_MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","MatCheckboxModule","MatCheckboxModule_Factory","MatOption_mat_pseudo_checkbox_0_Template","ctx_r0","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$1","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","GranularSanityChecks","MatCommonModule","sanityChecks","_hasDoneGlobalChecks","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","win","_isTestEnv","_checksAreEnabled","doctype","theme","computedStyle","version","full","MatCommonModule_Factory","CanDisable","mixinDisabled","base","CanColor","HasElementRef","mixinColor","defaultColor","_color","colorPalette","CanDisableRipple","mixinDisableRipple","_disableRipple","HasTabIndex","mixinTabIndex","defaultTabIndex","_tabIndex","CanUpdateErrorState","HasErrorState","mixinErrorState","errorState","stateChanges","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","isErrorState","HasInitialized","mixinInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","DateAdapter","_localeChanges","isDateInstance","isValid","invalid","locale","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","MAT_DATE_FORMATS","SUPPORTS_INTL_API","DEFAULT_MONTH_NAMES","ɵ0","DEFAULT_DATE_NAMES","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","valueFunction","valuesArray","NativeDateAdapter","matDateLocale","useUtcForDisplay","_clampDate","getFullYear","getDay","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","day","weekday","year","_createDateWithOverflow","getTime","parse","displayFormat","clone","setFullYear","toDateString","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","obj","NaN","n","str","d","UTC","getHours","getMinutes","getSeconds","getMilliseconds","format","NativeDateAdapter_Factory","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","useClass","ɵ0$1","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","HammerInput","HammerStatic","Recognizer","RecognizerStatic","HammerInstance","HammerManager","HammerOptions","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ0$2","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","_commonModule","events","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","longpress","time","recognizeWith","recognizer","constructor","inheritances","GestureConfig_Factory","MatLine","MatLine_Factory","setLines","lines","prefix","setClass","MatLineSetter","MatLineModule","MatLineModule_Factory","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","state","fadeOutRipple","RippleAnimationConfig","RippleTarget","defaultRippleAnimationConfig","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","RippleRenderer","_target","elementOrElementRef","_isPointerDown","_triggerEvents","_activeRipples","_onMousedown","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","_onTouchStart","touches","changedTouches","_onPointerUp","terminateOnPointerUp","persistent","fadeOut","containerRect","_containerRect","animationConfig","animation","centered","radius","distanceToFurthestCorner","transitionDuration","enforceStyleRecalculation","rippleRef","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","rippleEl","opacity","_triggerElement","_removeTriggerEvents","delay","getPropertyValue","distX","distY","sqrt","RippleGlobalOptions","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","globalOptions","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","fadeOutAll","setupTriggerEvents","trigger","configOrX","_trigger","MatRipple_Factory","MatRipple_HostBindings","unbounded","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","MatPseudoCheckbox_HostBindings","MatPseudoCheckbox_Template","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","_labelId","MatOptgroup_Factory","ɵMatOptgroup_BaseFactory","MatOptgroup_HostBindings","label","MatOptgroup_Template","_uniqueIdCounter","MatOptionSelectionChange","isUserInput","MatOptionParentComponent","MAT_OPTION_PARENT_COMPONENT","MatOption","_parent","group","_active","_mostRecentViewValue","onSelectionChange","_stateChanges","_emitSelectionChangeEvent","viewValue","_selectViaInteraction","multiple","MatOption_Factory","MatOption_HostBindings","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","_handleKeydown","_getTabIndex","_getAriaSelected","active","MatOption_Template","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","groups","groupCounter","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","MatOptionModule","MatOptionModule_Factory","MAT_LABEL_GLOBAL_OPTIONS","LabelOptions","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","MatDialogContainer_ng_template_0_Template","DialogPosition","MatDialogConfig","role","disableClose","ariaDescribedBy","ariaLabelledBy","autoFocus","restoreFocus","closeOnNavigation","matDialogAnimations","dialogContainer","throwMatDialogContentAlreadyAttachedError","MatDialogContainer","_elementFocusedBeforeDialogWasOpened","_state","_animationStateChanged","_savePreviouslyFocusedElement","_ariaLabelledBy","_focusTrap","toFocus","toState","_restoreFocus","MatDialogContainer_Factory","MatDialogContainer_Query","MatDialogContainer_HostBindings","MatDialogContainer_animation_dialogContainer_start_HostBindingHandler","_onAnimationStart","MatDialogContainer_animation_dialogContainer_done_HostBindingHandler","_onAnimationDone","_id","MatDialogContainer_Template","Default","animations","uniqueId","MatDialogState","OPEN","CLOSING","CLOSED","MatDialogRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","phaseName","_closeFallbackTimeout","detachments","_result","componentInstance","dialogResult","totalTime","_startExitAnimation","_getPositionStrategy","centerHorizontally","centerVertically","addPanelClass","removePanelClass","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","MatDialog","_parentDialog","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","afterAllClosed","openDialogs","_afterAllClosed","componentOrTemplateRef","_applyConfigDefaults","getDialogById","_attachDialogContainer","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","afterClosed","_removeOpenDialog","afterOpened","_closeDialogs","dialog","_getOverlayConfig","dialogConfig","global","userInjector","containerPortal","containerRef","instance","_createInjector","contentRef","previousValue","siblings","sibling","dialogs","MatDialog_Factory","dialogElementUid","MatDialogClose","_dialog","getClosestDialog","proxiedChange","MatDialogClose_Factory","MatDialogClose_HostBindings","MatDialogClose_click_HostBindingHandler","_matDialogClose","MatDialogTitle","_dialogRef","MatDialogTitle_Factory","MatDialogTitle_HostBindings","MatDialogContent","MatDialogContent_Factory","MatDialogActions","MatDialogActions_Factory","MatDialogModule","MatDialogModule_Factory","entryComponents","MatDivider","_inset","MatDivider_Factory","MatDivider_HostBindings","vertical","inset","MatDivider_Template","MatDividerModule","MatDividerModule_Factory","_c3","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r11","_control","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r15","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r14","updateOutlineGap","ctx_r5","empty","_shouldAlwaysFloat","appearance","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r7","MatFormField_div_13_Template","ctx_r8","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r17","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r9","_c4","_c5","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MatFormFieldDefaultOptions","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","controlType","_validatePlaceholders","_syncDescribedByIds","valueChanges","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","_getDisplayedMessages","error","setDescribedByIds","labelEl","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerStart","_getStartEnd","labelStart","labelWidth","child","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","contentQueries","MatFormField_ContentQueries","dirIndex","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","descendants","MatFormFieldModule","MatFormFieldModule_Factory","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","IconOptions","SvgIconConfig","svgElement","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_defaultFontSetClass","addSvgIconInNamespace","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","sanitizedLiteral","sanitize","HTML","_createSvgElementForSingleIcon","addSvgIconSetInNamespace","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","_svgElementFromString","alias","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","iconKey","_getSvgFromConfig","iconSetConfigs","_getSvgFromIconSetConfigs","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","handleError","foundIcon","_extractSvgIconFromSet","_fetchUrl","svgText","responseText","_setSvgAttributes","iconSet","iconSource","iconElement","_toSvgElement","div","innerHTML","viewBox","inProgressFetch","req","responseType","configNamespace","MatIconRegistry_Factory","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","MatIconBase","_MatIconMixinBase","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","MatIconLocation","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","funcIriPattern","MatIcon","_iconRegistry","ariaHidden","_inline","parts","svgIconChanges","svgIcon","_splitIconName","getNamedSvgIcon","_setSvgElement","_clearSvgElement","_usingFontIcon","_updateFontIconClasses","cachedElements","_elementsWithExternalReferences","newPath","_previousPath","_prependPathToReferences","styleTags","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","elem","fontSetClass","fontSet","classNameForFontAlias","getDefaultFontSetClass","_previousFontSetClass","fontIcon","_previousFontIconClass","elementsWithFuncIri","elementWithReference","inline","_fontSet","_cleanupFontValue","_fontIcon","MatIcon_Factory","MatIcon_HostBindings","MatIcon_Template","MatIconModule","MatIconModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_MatInputMixinBase","MatInput","inputValueAccessor","_uid","_isServer","_isNativeSelect","_type","_readonly","_neverEmptyInputTypes","_inputValueAccessor","_previousNativeValue","updateErrorState","_dirtyCheckNativeValue","isFocused","readonly","validity","badInput","_ariaDescribedby","_validateType","_isTextarea","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","MatInput_Factory","MatInput_HostBindings","MatInput_blur_HostBindingHandler","_focusChanged","MatInput_focus_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","MatInputModule","MatInputModule_Factory","MatProgressSpinner__svg_circle_1_Template","ctx_r33","diameter","_strokeDashOffset","_strokeCircumference","_circleStrokeWidth","_circleRadius","MatProgressSpinner__svg_circle_2_Template","ctx_r34","MatSpinner__svg_circle_1_Template","ctx_r35","MatSpinner__svg_circle_2_Template","ctx_r36","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinnerBase","_MatProgressSpinnerMixinBase","MatProgressSpinnerDefaultOptions","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","INDETERMINATE_ANIMATION_TEMPLATE","MatProgressSpinner","defaults","_diameter","_value","_fallbackAnimation","trackedDiameters","_diameters","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","_strokeWidth","PI","MatProgressSpinner_Factory","MatProgressSpinner_HostBindings","MatProgressSpinner_Template","_viewBox","WeakMap","MatSpinner","MatSpinner_Factory","MatSpinner_HostBindings","MatSpinner_Template","MatProgressSpinnerModule","MatProgressSpinnerModule_Factory","MatSelect_span_4_Template","ctx_r20","MatSelect_span_5_span_1_Template","ctx_r23","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r21","customTrigger","MatSelect_ng_template_8_Template","_r27","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","ctx_r26","_panelDoneAnimatingStream","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r28","ctx_r22","_getPanelTheme","_transformOrigin","_triggerFontSize","matSelectAnimations","transformPanelWrap","optional","transformPanel","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_parentFormField","_panelOpen","_scrollTop","_compareWith","o1","o2","_destroy","_onChange","_optionIds","_positions","_disableOptionCentering","_focused","optionSelectionChanges","option","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","panelOpen","overlayDir","_triggerRect","_initKeyManager","_resetOptions","_initializeSelection","_keyManager","withTypeAhead","_typeaheadDebounceInterval","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","_setSelectionByValue","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","previouslySelectedOption","onKeydown","selectedOption","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","_calculateOverlayOffsetX","panel","_selectValue","_sortValues","correspondingOption","withVerticalOrientation","withAllowedModifierKeys","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","_setOptionIds","wasSelected","_propagateChanges","a","b","sortComparator","valueToEmit","activeOptionIndex","labelCount","_getItemHeight","current","itemHeight","_getItemCount","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_getAriaLabel","paddingWidth","round","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","_placeholder","writeValue","selectedOptions","reverse","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","MatSelect_blur_HostBindingHandler","_getAriaLabelledby","_getAriaActiveDescendant","compareWith","MatSelect_Template","MatSelect_Template_div_click_0_listener","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r18","MatSelectModule","MatSelectModule_Factory","MatToolbarBase","_MatToolbarMixinBase","MatToolbarRow","MatToolbarRow_Factory","MatToolbar","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","COMMENT_NODE","throwToolbarMixedModesError","MatToolbar_Factory","MatToolbar_ContentQueries","MatToolbar_HostBindings","MatToolbar_Template","MatToolbarModule","MatToolbarModule_Factory","UserIdleConfig","UserIdleService","timerStart$","idleDetected$","timeout$","idleMillisec","idleSensitivityMillisec","timeout","pingMillisec","setConfig","activityEvents$","idle$","idleSubscription","arr","isIdleDetected","isInactivityTimer","setupTimer","setupPing","stopTimer","isTimeout","timer$","idle","idleSensitivity","ping","closed","customEvents","acc","ping$","UserIdleService_Factory","ngInjectableDef","UserIdleModule","ngModule","UserIdleModule_Factory","DialogComponent","router","tokenService","userIdleService","sharedInterfaceService","timeInactivity","navigate","deleteToken","stopWatching","startWatching","resetTimer","templateUrl","styleUrls","DialogModule","DecreaseMinutesPipe","minutes","seconds","UserSessionService","sessionService","getSession","user","putSession","deleteSession","SharedInterfaceService","listData","DialogClass","code","title","object"],"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","file":"default~modules-authentication-login-login-module~modules-dashboard-dashboard-module-es5.js","sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { Injectable, Inject, ɵɵdefineInjectable, ɵɵinject, QueryList, isDevMode, NgZone, Directive, ElementRef, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Platform, normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/aria-describer/aria-reference.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * IDs are deliminated by an empty space, as per the spec.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/observers';\nconst ID_DELIMINATOR = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some((/**\n     * @param {?} existingId\n     * @return {?}\n     */\n    existingId => existingId.trim() == id.trim()))) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    /** @type {?} */\n    const filteredIds = ids.filter((/**\n     * @param {?} val\n     * @return {?}\n     */\n    val => val != id.trim()));\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace deliminated) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/aria-describer/aria-describer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to register message elements and keep a count of how many registrations have\n * the same message and the reference to the message element used for the `aria-describedby`.\n * @record\n */\nfunction RegisteredMessage() { }\nif (false) {\n    /**\n     * The element containing the message.\n     * @type {?}\n     */\n    RegisteredMessage.prototype.messageElement;\n    /**\n     * The number of elements that reference this message element via `aria-describedby`.\n     * @type {?}\n     */\n    RegisteredMessage.prototype.referenceCount;\n}\n/**\n * ID used for the body container where all messages are appended.\n * @type {?}\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/**\n * Global incremental identifier for each registered message element.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Global map of all registered message elements that have been placed into the document.\n * @type {?}\n */\nconst messageRegistry = new Map();\n/**\n * Container for all registered messages.\n * @type {?}\n */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    describe(hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            this._setMessageId(message);\n            messageRegistry.set(message, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    }\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    removeDescription(hostElement, message) {\n        if (!this._isElementNode(hostElement)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            /** @type {?} */\n            const registeredMessage = messageRegistry.get(message);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(message);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _createMessageElement(message) {\n        /** @type {?} */\n        const messageElement = this._document.createElement('div');\n        this._setMessageId(messageElement);\n        messageElement.textContent = message;\n        this._createMessagesContainer();\n        (/** @type {?} */ (messagesContainer)).appendChild(messageElement);\n        messageRegistry.set(message, { messageElement, referenceCount: 0 });\n    }\n    /**\n     * Assigns a unique ID to an element, if it doesn't have one already.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setMessageId(element) {\n        if (!element.id) {\n            element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n        }\n    }\n    /**\n     * Deletes the message element from the global messages container.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _deleteMessageElement(message) {\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    }\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @private\n     * @return {?}\n     */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            /** @type {?} */\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer) {\n                (/** @type {?} */ (preExistingContainer.parentNode)).removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /**\n     * Deletes the global messages container.\n     * @private\n     * @return {?}\n     */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        /** @type {?} */\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter((/**\n         * @param {?} id\n         * @return {?}\n         */\n        id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0));\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _addMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _removeMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _isElementDescribedByMessage(element, message) {\n        /** @type {?} */\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        /** @type {?} */\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        /** @type {?} */\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /**\n     * Checks whether a node is an Element node.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = function AriaDescriber_Factory(t) { return new (t || AriaDescriber)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ AriaDescriber.ɵprov = ɵɵdefineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(ɵɵinject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AriaDescriber, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AriaDescriber.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/list-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This interface is for items that can be passed to a ListKeyManager.\n * @record\n */\nfunction ListKeyManagerOption() { }\nif (false) {\n    /**\n     * Whether the option is disabled.\n     * @type {?|undefined}\n     */\n    ListKeyManagerOption.prototype.disabled;\n    /**\n     * Gets the label for this option.\n     * @return {?}\n     */\n    ListKeyManagerOption.prototype.getLabel = function () { };\n}\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nclass ListKeyManager {\n    /**\n     * @param {?} _items\n     */\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.disabled);\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((/**\n             * @param {?} newItems\n             * @return {?}\n             */\n            (newItems) => {\n                if (this._activeItem) {\n                    /** @type {?} */\n                    const itemArray = newItems.toArray();\n                    /** @type {?} */\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {THIS}\n     */\n    skipPredicate(predicate) {\n        (/** @type {?} */ (this))._skipPredicateFn = predicate;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {THIS}\n     */\n    withWrap(shouldWrap = true) {\n        (/** @type {?} */ (this))._wrap = shouldWrap;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {THIS}\n     */\n    withVerticalOrientation(enabled = true) {\n        (/** @type {?} */ (this))._vertical = enabled;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {THIS}\n     */\n    withHorizontalOrientation(direction) {\n        (/** @type {?} */ (this))._horizontal = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} keys\n     * @return {THIS}\n     */\n    withAllowedModifierKeys(keys) {\n        (/** @type {?} */ (this))._allowedModifierKeys = keys;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {THIS}\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((/** @type {?} */ (this))._items.length && (/** @type {?} */ (this))._items.some((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        (/** @type {?} */ (this))._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        (/** @type {?} */ (this))._typeaheadSubscription = (/** @type {?} */ (this))._letterKeyStream.pipe(tap((/**\n         * @param {?} letter\n         * @return {?}\n         */\n        letter => (/** @type {?} */ (this))._pressedLetters.push(letter))), debounceTime(debounceInterval), filter((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.length > 0)), map((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.join('')))).subscribe((/**\n         * @param {?} inputString\n         * @return {?}\n         */\n        inputString => {\n            /** @type {?} */\n            const items = (/** @type {?} */ (this))._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                /** @type {?} */\n                const index = ((/** @type {?} */ (this))._activeItemIndex + i) % items.length;\n                /** @type {?} */\n                const item = items[index];\n                if (!(/** @type {?} */ (this))._skipPredicateFn(item) &&\n                    (/** @type {?} */ (item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                    (/** @type {?} */ (this)).setActiveItem(index);\n                    break;\n                }\n            }\n            (/** @type {?} */ (this))._pressedLetters = [];\n        }));\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        /** @type {?} */\n        const previousIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    onKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        /** @type {?} */\n        const isModifierAllowed = modifiers.every((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        }));\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /**\n     * Index of the currently active item.\n     * @return {?}\n     */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /**\n     * The active item.\n     * @return {?}\n     */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /**\n     * Gets whether the user is currently typing into the manager using the typeahead feature.\n     * @return {?}\n     */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    updateActiveItem(item) {\n        /** @type {?} */\n        const itemArray = this._getItemsArray();\n        /** @type {?} */\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        /** @type {?} */\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInWrapMode(delta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            /** @type {?} */\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            /** @type {?} */\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @private\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /**\n     * Returns the items as an array.\n     * @private\n     * @return {?}\n     */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._activeItemIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._activeItem;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._wrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._letterKeyStream;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._typeaheadSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._horizontal;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._allowedModifierKeys;\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._skipPredicateFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._pressedLetters;\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     * @type {?}\n     */\n    ListKeyManager.prototype.tabOut;\n    /**\n     * Stream that emits whenever the active item of the list manager changes.\n     * @type {?}\n     */\n    ListKeyManager.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._items;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/activedescendant-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n * @record\n */\nfunction Highlightable() { }\nif (false) {\n    /**\n     * Applies the styles for an active item to this item.\n     * @return {?}\n     */\n    Highlightable.prototype.setActiveStyles = function () { };\n    /**\n     * Applies the styles for an inactive item to this item.\n     * @return {?}\n     */\n    Highlightable.prototype.setInactiveStyles = function () { };\n}\n/**\n * @template T\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/focus-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself, whether or not it is currently disabled\n * and be able to supply its label.\n * @record\n */\nfunction FocusableOption() { }\nif (false) {\n    /**\n     * Focuses the `FocusableOption`.\n     * @param {?=} origin\n     * @return {?}\n     */\n    FocusableOption.prototype.focus = function (origin) { };\n}\n/**\n * @template T\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {THIS}\n     */\n    setFocusOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusKeyManager.prototype._origin;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/interactivity-checker/interactivity-checker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        /** @type {?} */\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            /** @type {?} */\n            const frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        /** @type {?} */\n        let nodeName = element.nodeName.toLowerCase();\n        /** @type {?} */\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    isFocusable(element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    }\n}\nInteractivityChecker.ɵfac = function InteractivityChecker_Factory(t) { return new (t || InteractivityChecker)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nInteractivityChecker.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ InteractivityChecker.ɵprov = ɵɵdefineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(ɵɵinject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InteractivityChecker, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    InteractivityChecker.prototype._platform;\n}\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return (/** @type {?} */ (window.frameElement));\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    /** @type {?} */\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    /** @type {?} */\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    /** @type {?} */\n    let inputType = nodeName === 'input' && ((/** @type {?} */ (element))).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * \\@breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} deferAnchors\n     */\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusLastTabbableElement());\n        this.endAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusFirstTabbableElement());\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    destroy() {\n        /** @type {?} */\n        const startAnchor = this._startAnchor;\n        /** @type {?} */\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                (/** @type {?} */ (this._startAnchor)).addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                (/** @type {?} */ (this._endAnchor)).addEventListener('focus', this.endAnchorListener);\n            }\n        }));\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._startAnchor)), this._element);\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._endAnchor)), this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusInitialElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusFirstTabbableElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusLastTabbableElement())));\n        }));\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @private\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        let markers = (/** @type {?} */ (this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`)));\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        const redirectToElement = (/** @type {?} */ (this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`)));\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if (isDevMode() && !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusFirstTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusLastTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates an anchor element.\n     * @private\n     * @return {?}\n     */\n    _createAnchor() {\n        /** @type {?} */\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @private\n     * @param {?} isEnabled Whether the focus trap is enabled.\n     * @param {?} anchor Anchor on which to toggle the tabindex.\n     * @return {?}\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @protected\n     * @param {?} enabled\n     * @return {?}\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /**\n     * Executes a function when the zone is stable.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._startAnchor;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._endAnchor;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._hasAttached;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype.startAnchorListener;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype.endAnchorListener;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype._enabled;\n    /** @type {?} */\n    FocusTrap.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._checker;\n    /** @type {?} */\n    FocusTrap.prototype._ngZone;\n    /** @type {?} */\n    FocusTrap.prototype._document;\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * \\@breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = function FocusTrapFactory_Factory(t) { return new (t || FocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ FocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._checker;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._ngZone;\n}\n/**\n * Directive for trapping focus within a region.\n */\nclass CdkTrapFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _document\n     */\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this.focusTrap.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the directive should automatially move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     * @return {?}\n     */\n    get autoCapture() { return this._autoCapture; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoCapture(value) { this._autoCapture = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._previouslyFocusedElement = (/** @type {?} */ (this._document.activeElement));\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n}\nCdkTrapFocus.ɵfac = function CdkTrapFocus_Factory(t) { return new (t || CdkTrapFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkTrapFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTrapFocus, selectors: [[\"\", \"cdkTrapFocus\", \"\"]], inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"] });\n/** @nocollapse */\nCdkTrapFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTrapFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { enabled: [{\n            type: Input,\n            args: ['cdkTrapFocus']\n        }], autoCapture: [{\n            type: Input,\n            args: ['cdkTrapFocusAutoCapture']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTrapFocus.ngAcceptInputType_enabled;\n    /** @type {?} */\n    CdkTrapFocus.ngAcceptInputType_autoCapture;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._document;\n    /**\n     * Underlying FocusTrap instance.\n     * @type {?}\n     */\n    CdkTrapFocus.prototype.focusTrap;\n    /**\n     * Previously focused element to restore focus to upon destroy when using autoCapture.\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._previouslyFocusedElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._autoCapture;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._focusTrapFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _focusTrapManager\n     * @param {?} _inertStrategy\n     * @param {?} config\n     */\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /**\n     * Whether the FocusTrap is enabled.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /**\n     * Notifies the FocusTrapManager that this FocusTrap will be destroyed.\n     * @return {?}\n     */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /**\n     * \\@docs-private Implemented as part of ManagedFocusTrap.\n     * @return {?}\n     */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /**\n     * \\@docs-private Implemented as part of ManagedFocusTrap.\n     * @return {?}\n     */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrap.prototype._focusTrapManager;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrap.prototype._inertStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/polyfill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * IE 11 compatible closest implementation that is able to start from non-Element Nodes.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction closest(element, selector) {\n    if (!(element instanceof Node)) {\n        return null;\n    }\n    /** @type {?} */\n    let curr = element;\n    while (curr != null && !(curr instanceof Element)) {\n        curr = curr.parentNode;\n    }\n    return curr && (/** @type {?} */ ((hasNativeClosest ?\n        curr.closest(selector) : polyfillClosest(curr, selector))));\n}\n/**\n * Polyfill for browsers without Element.closest.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction polyfillClosest(element, selector) {\n    /** @type {?} */\n    let curr = element;\n    while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n        curr = curr.parentNode;\n    }\n    return (/** @type {?} */ ((curr || null)));\n}\n/** @type {?} */\nconst hasNativeClosest = typeof Element != 'undefined' && !!Element.prototype.closest;\n/**\n * IE 11 compatible matches implementation.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction matches(element, selector) {\n    return element.matches ?\n        element.matches(selector) :\n        ((/** @type {?} */ (element)))['msMatchesSelector'](selector);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/event-listener-inert-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /**\n         * Focus event handler.\n         */\n        this._listener = null;\n    }\n    /**\n     * Adds a document event listener that keeps focus inside the FocusTrap.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        }\n        this._listener = (/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => this._trapFocus(focusTrap, e));\n        focusTrap._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            focusTrap._document.addEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        }));\n    }\n    /**\n     * Removes the event listener added in preventFocus.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     * @private\n     * @param {?} focusTrap\n     * @param {?} event\n     * @return {?}\n     */\n    _trapFocus(focusTrap, event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (!focusTrapRoot.contains(target) && closest(target, 'div.cdk-overlay-pane') === null) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            }));\n        }\n    }\n}\nif (false) {\n    /**\n     * Focus event handler.\n     * @type {?}\n     * @private\n     */\n    EventListenerFocusTrapInertStrategy.prototype._listener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for creating a ConfigurableFocusTrap.\n */\nclass ConfigurableFocusTrapConfig {\n    constructor() {\n        /**\n         * Whether to defer the creation of FocusTrap elements to be\n         * done manually by the user. Default is to create them\n         * automatically.\n         */\n        this.defer = false;\n    }\n}\nif (false) {\n    /**\n     * Whether to defer the creation of FocusTrap elements to be\n     * done manually by the user. Default is to create them\n     * automatically.\n     * @type {?}\n     */\n    ConfigurableFocusTrapConfig.prototype.defer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap-inert-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the inert strategy.\n * @type {?}\n */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n/**\n * A strategy that dictates how FocusTrap should prevent elements\n * outside of the FocusTrap from being focused.\n * @record\n */\nfunction FocusTrapInertStrategy() { }\nif (false) {\n    /**\n     * Makes all elements outside focusTrap unfocusable.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    FocusTrapInertStrategy.prototype.preventFocus = function (focusTrap) { };\n    /**\n     * Reverts elements made unfocusable by preventFocus to their previous state.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    FocusTrapInertStrategy.prototype.allowFocus = function (focusTrap) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A FocusTrap managed by FocusTrapManager.\n * Implemented by ConfigurableFocusTrap to avoid circular dependency.\n * @record\n */\nfunction ManagedFocusTrap() { }\nif (false) {\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype._enable = function () { };\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype._disable = function () { };\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype.focusInitialElementWhenReady = function () { };\n}\n/**\n * Injectable that ensures only the most recently enabled FocusTrap is active.\n */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter((/**\n         * @param {?} ft\n         * @return {?}\n         */\n        (ft) => ft !== focusTrap));\n        /** @type {?} */\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        /** @type {?} */\n        const stack = this._focusTrapStack;\n        /** @type {?} */\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = function FocusTrapManager_Factory(t) { return new (t || FocusTrapManager)(); };\n/** @nocollapse */ FocusTrapManager.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapManager_Factory() { return new FocusTrapManager(); }, token: FocusTrapManager, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusTrapManager, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapManager.prototype._focusTrapStack;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap-factory.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that allows easy instantiation of configurable focus traps.\n */\nclass ConfigurableFocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _focusTrapManager\n     * @param {?} _document\n     * @param {?=} _inertStrategy\n     */\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    /**\n     * @param {?} element\n     * @param {?=} config\n     * @return {?}\n     */\n    create(element, config = new ConfigurableFocusTrapConfig()) {\n        /** @type {?} */\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = new ConfigurableFocusTrapConfig();\n            configObject.defer = config;\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) { return new (t || ConfigurableFocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(FocusTrapManager), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); };\n/** @nocollapse */\nConfigurableFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: FocusTrapManager },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_TRAP_INERT_STRATEGY,] }] }\n];\n/** @nocollapse */ ConfigurableFocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function ConfigurableFocusTrapFactory_Factory() { return new ConfigurableFocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(FocusTrapManager), ɵɵinject(DOCUMENT), ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); }, token: ConfigurableFocusTrapFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ConfigurableFocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_TRAP_INERT_STRATEGY]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._inertStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._checker;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._focusTrapManager;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/live-announcer/live-announcer-tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/**\n * Object that can be used to configure the default options for the LiveAnnouncer.\n * @record\n */\nfunction LiveAnnouncerDefaultOptions() { }\nif (false) {\n    /**\n     * Default politeness for the announcements.\n     * @type {?|undefined}\n     */\n    LiveAnnouncerDefaultOptions.prototype.politeness;\n    /**\n     * Default duration for the announcement messages.\n     * @type {?|undefined}\n     */\n    LiveAnnouncerDefaultOptions.prototype.duration;\n}\n/**\n * Injection token that can be used to configure the default options for the LiveAnnouncer.\n * @type {?}\n */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/live-announcer/live-announcer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LiveAnnouncer {\n    /**\n     * @param {?} elementToken\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} _defaultOptions\n     */\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * @param {?} message\n     * @param {...?} args\n     * @return {?}\n     */\n    announce(message, ...args) {\n        /** @type {?} */\n        const defaultOptions = this._defaultOptions;\n        /** @type {?} */\n        let politeness;\n        /** @type {?} */\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout((/**\n                         * @return {?}\n                         */\n                        () => this.clear()), duration);\n                    }\n                }), 100);\n            }));\n        }));\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     * @return {?}\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = (/** @type {?} */ (null));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createLiveElement() {\n        /** @type {?} */\n        const elementClass = 'cdk-live-announcer-element';\n        /** @type {?} */\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        /** @type {?} */\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            (/** @type {?} */ (previousElements[i].parentNode)).removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = function LiveAnnouncer_Factory(t) { return new (t || LiveAnnouncer)(ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); };\n/** @nocollapse */\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ LiveAnnouncer.ɵprov = ɵɵdefineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵɵinject(NgZone), ɵɵinject(DOCUMENT), ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LiveAnnouncer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._liveElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._previousTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._defaultOptions;\n}\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _liveAnnouncer\n     * @param {?} _contentObserver\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'off';\n    }\n    /**\n     * The aria-live politeness level to use when announcing messages.\n     * @return {?}\n     */\n    get politeness() { return this._politeness; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set politeness(value) {\n        this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    /** @type {?} */\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                }));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = function CdkAriaLive_Factory(t) { return new (t || CdkAriaLive)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkAriaLive.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAriaLive, selectors: [[\"\", \"cdkAriaLive\", \"\"]], inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"] });\n/** @nocollapse */\nCdkAriaLive.ctorParameters = () => [\n    { type: ElementRef },\n    { type: LiveAnnouncer },\n    { type: ContentObserver },\n    { type: NgZone }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAriaLive, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: LiveAnnouncer }, { type: ɵngcc2.ContentObserver }, { type: ɵngcc0.NgZone }]; }, { politeness: [{\n            type: Input,\n            args: ['cdkAriaLive']\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._politeness;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._previousAnnouncedText;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._subscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._liveAnnouncer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._contentObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-monitor/focus-monitor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\n/** @type {?} */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Corresponds to the options that can be passed to the native `focus` event.\n * via https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\n * @record\n */\nfunction FocusOptions() { }\nif (false) {\n    /**\n     * Whether the browser should scroll to the element when it is focused.\n     * @type {?|undefined}\n     */\n    FocusOptions.prototype.preventScroll;\n}\n/** @enum {number} */\nconst FocusMonitorDetectionMode = {\n    /**\n     * Any mousedown, keydown, or touchstart event that happened in the previous\n     * tick or the current tick will be used to assign a focus event's origin (to\n     * either mouse, keyboard, or touch). This is the default option.\n     */\n    IMMEDIATE: 0,\n    /**\n     * A focus event's origin is always attributed to the last corresponding\n     * mousedown, keydown, or touchstart event, no matter how long ago it occured.\n     */\n    EVENTUAL: 1,\n};\n/**\n * Injectable service-level options for FocusMonitor.\n * @record\n */\nfunction FocusMonitorOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FocusMonitorOptions.prototype.detectionMode;\n}\n/**\n * InjectionToken for FocusMonitorOptions.\n * @type {?}\n */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n * @type {?}\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nclass FocusMonitor {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?} document\n     * @param {?} options\n     */\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        });\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                this._setOriginForCurrentEventQueue('mouse');\n            }\n        });\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n            // see if a focus happens.\n            if (this._touchTimeoutId != null) {\n                clearTimeout(this._touchTimeoutId);\n            }\n            // Since this listener is bound on the `document` level, any events coming from the shadow DOM\n            // will have their `target` set to the shadow root. If available, use `composedPath` to\n            // figure out the event target.\n            this._lastTouchTarget = event.composedPath ? event.composedPath()[0] : event.target;\n            this._touchTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._lastTouchTarget = null), TOUCH_BUFFER_MS);\n        });\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = (/**\n         * @return {?}\n         */\n        () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._windowFocused = false));\n        });\n        this._document = document;\n        this._detectionMode = (options === null || options === void 0 ? void 0 : options.detectionMode) || 0 /* IMMEDIATE */;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    monitor(element, checkChildren = false) {\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return of(null);\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(nativeElement)) {\n            /** @type {?} */\n            let cachedInfo = this._elementInfo.get(nativeElement);\n            (/** @type {?} */ (cachedInfo)).checkChildren = checkChildren;\n            return (/** @type {?} */ (cachedInfo)).subject.asObservable();\n        }\n        // Create monitored element info.\n        /** @type {?} */\n        let info = {\n            unlisten: (/**\n             * @return {?}\n             */\n            () => { }),\n            checkChildren: checkChildren,\n            subject: new Subject()\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._incrementMonitoredElementCount();\n        // Start listening. We need to listen in capture phase since focus events don't bubble.\n        /** @type {?} */\n        let focusListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onFocus(event, nativeElement));\n        /** @type {?} */\n        let blurListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onBlur(event, nativeElement));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.addEventListener('focus', focusListener, true);\n            nativeElement.addEventListener('blur', blurListener, true);\n        }));\n        // Create an unlisten function for later.\n        info.unlisten = (/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.removeEventListener('focus', focusListener, true);\n            nativeElement.removeEventListener('blur', blurListener, true);\n        });\n        return info.subject.asObservable();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    stopMonitoring(element) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._decrementMonitoredElementCount();\n        }\n    }\n    /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focusVia(element, origin, options) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            ((/** @type {?} */ (nativeElement))).focus(options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._elementInfo.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @private\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    _setClasses(element, origin) {\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            this._toggleClass(element, 'cdk-focused', !!origin);\n            this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n            this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n            this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n            this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n        }\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * If the detection mode is 'eventual', the origin is never cleared.\n     * @private\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._origin = origin;\n            if (this._detectionMode === 0 /* IMMEDIATE */) {\n                // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n                // tick after the interaction event fired. To ensure the focus origin is always correct,\n                // the focus origin will be determined at the beginning of the next tick.\n                this._originTimeoutId = setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._origin = null), 1);\n            }\n        }));\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @private\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        /** @type {?} */\n        let focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @private\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n            return;\n        }\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        /** @type {?} */\n        let origin = this._origin;\n        if (!origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                origin = this._lastFocusOrigin;\n            }\n            else if (this._wasCausedByTouch(event)) {\n                origin = 'touch';\n            }\n            else {\n                origin = 'program';\n            }\n        }\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    /**\n     * @private\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    _emitOrigin(subject, origin) {\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => subject.next(origin)));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _incrementMonitoredElementCount() {\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount == 1 && this._platform.isBrowser) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const document = this._getDocument();\n                /** @type {?} */\n                const window = this._getWindow();\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _decrementMonitoredElementCount() {\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            /** @type {?} */\n            const document = this._getDocument();\n            /** @type {?} */\n            const window = this._getWindow();\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n}\nFocusMonitor.ɵfac = function FocusMonitor_Factory(t) { return new (t || FocusMonitor)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); };\n/** @nocollapse */\nFocusMonitor.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_MONITOR_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ FocusMonitor.ɵprov = ɵɵdefineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8), ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); }, token: FocusMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * The focus origin that the next focus event is a result of.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._origin;\n    /**\n     * The FocusOrigin of the last focus event tracked by the FocusMonitor.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._lastFocusOrigin;\n    /**\n     * Whether the window has just been focused.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocused;\n    /**\n     * The target of the last touch event.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._lastTouchTarget;\n    /**\n     * The timeout id of the touch timeout, used to cancel timeout later.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._touchTimeoutId;\n    /**\n     * The timeout id of the window focus timeout.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocusTimeoutId;\n    /**\n     * The timeout id of the origin clearing timeout.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._originTimeoutId;\n    /**\n     * Map of elements being monitored to their info.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._elementInfo;\n    /**\n     * The number of elements currently being monitored.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._monitoredElementCount;\n    /**\n     * The specified detection mode, used for attributing the origin of a focus\n     * event.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._detectionMode;\n    /**\n     * Event listener for `keydown` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentKeydownListener;\n    /**\n     * Event listener for `mousedown` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentMousedownListener;\n    /**\n     * Event listener for `touchstart` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentTouchstartListener;\n    /**\n     * Event listener for `focus` events on the window.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocusListener;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    FocusMonitor.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._platform;\n}\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     */\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => this.cdkFocusChange.emit(origin)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._monitorSubscription.unsubscribe();\n    }\n}\nCdkMonitorFocus.ɵfac = function CdkMonitorFocus_Factory(t) { return new (t || CdkMonitorFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusMonitor)); };\nCdkMonitorFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkMonitorFocus, selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]], outputs: { cdkFocusChange: \"cdkFocusChange\" } });\n/** @nocollapse */\nCdkMonitorFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkMonitorFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusMonitor }]; }, { cdkFocusChange: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._monitorSubscription;\n    /** @type {?} */\n    CdkMonitorFocus.prototype.cdkFocusChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/fake-mousedown.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/high-contrast-mode/high-contrast-mode-detector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst HighContrastMode = {\n    NONE: 0,\n    BLACK_ON_WHITE: 1,\n    WHITE_ON_BLACK: 2,\n};\n/**\n * CSS class applied to the document body when in black-on-white high-contrast mode.\n * @type {?}\n */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/**\n * CSS class applied to the document body when in white-on-black high-contrast mode.\n * @type {?}\n */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/**\n * CSS class applied to the document body when in high-contrast mode.\n * @type {?}\n */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-constrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    /**\n     * @param {?} _platform\n     * @param {?} document\n     */\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * Gets the current high-constrast-mode for the page.\n     * @return {?}\n     */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests.\n        /** @type {?} */\n        const documentWindow = (/** @type {?} */ (this._document.defaultView));\n        /** @type {?} */\n        const computedColor = (documentWindow.getComputedStyle(testElement).backgroundColor || '').replace(/ /g, '');\n        this._document.body.removeChild(testElement);\n        switch (computedColor) {\n            case 'rgb(0,0,0)': return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)': return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /**\n     * Applies CSS classes indicating high-contrast mode to document body (browser-only).\n     * @return {?}\n     */\n    _applyBodyHighContrastModeCssClasses() {\n        if (this._platform.isBrowser && this._document.body) {\n            /** @type {?} */\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            /** @type {?} */\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = function HighContrastModeDetector_Factory(t) { return new (t || HighContrastModeDetector)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nHighContrastModeDetector.ctorParameters = () => [\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ HighContrastModeDetector.ɵprov = ɵɵdefineInjectable({ factory: function HighContrastModeDetector_Factory() { return new HighContrastModeDetector(ɵɵinject(Platform), ɵɵinject(DOCUMENT)); }, token: HighContrastModeDetector, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HighContrastModeDetector, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HighContrastModeDetector.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    HighContrastModeDetector.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/a11y-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass A11yModule {\n    /**\n     * @param {?} highContrastModeDetector\n     */\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: A11yModule });\nA11yModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function A11yModule_Factory(t) { return new (t || A11yModule)(ɵngcc0.ɵɵinject(HighContrastModeDetector)); }, imports: [[PlatformModule, ObserversModule]] });\n/** @nocollapse */\nA11yModule.ctorParameters = () => [\n    { type: HighContrastModeDetector }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(A11yModule, { declarations: function () { return [CdkAriaLive,\n        CdkTrapFocus,\n        CdkMonitorFocus]; }, imports: function () { return [PlatformModule, ObserversModule]; }, exports: function () { return [CdkAriaLive,\n        CdkTrapFocus,\n        CdkMonitorFocus]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(A11yModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule, ObserversModule],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]\n            }]\n    }], function () { return [{ type: HighContrastModeDetector }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, InteractivityChecker, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, TOUCH_BUFFER_MS, isFakeMousedownFromScreenReader, FocusTrapManager as ɵangular_material_src_cdk_a11y_a11y_a, ConfigurableFocusTrapConfig as ɵangular_material_src_cdk_a11y_a11y_b };\n\n//# sourceMappingURL=a11y.js.map","import { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/dir-document-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/directionality.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /**\n     * @param {?=} _document\n     */\n    constructor(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            const bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\n/** @nocollapse */\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/** @nocollapse */ Directionality.ɵprov = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Directionality, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DIR_DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * The current 'ltr' or 'rtl' value.\n     * @type {?}\n     */\n    Directionality.prototype.value;\n    /**\n     * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n     * @type {?}\n     */\n    Directionality.prototype.change;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/dir.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dir() { return this._dir; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dir(value) {\n        /** @type {?} */\n        const old = this._dir;\n        /** @type {?} */\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /**\n     * Current layout direction of the element.\n     * @return {?}\n     */\n    get value() { return this.dir; }\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\nDir.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Dir, [{\n        type: Directive,\n        args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir'\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output,\n            args: ['dirChange']\n        }], dir: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Normalized direction that accounts for invalid/unsupported values.\n     * @type {?}\n     * @private\n     */\n    Dir.prototype._dir;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     * @private\n     */\n    Dir.prototype._isInitialized;\n    /**\n     * Direction as passed in by the consumer.\n     * @type {?}\n     */\n    Dir.prototype._rawDir;\n    /**\n     * Event emitted when the direction changes.\n     * @type {?}\n     */\n    Dir.prototype.change;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/bidi-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BidiModule {\n}\nBidiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\nBidiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BidiModule_Factory(t) { return new (t || BidiModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n        type: NgModule,\n        args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };\n\n//# sourceMappingURL=bidi.js.map","import { isObservable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\nif (false) {\n    /**\n     * Connects a collection viewer (such as a data-table) to this data source. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?} Observable that emits a new value when the data changes.\n     */\n    DataSource.prototype.connect = function (collectionViewer) { };\n    /**\n     * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n     * to perform any clean-up or tear-down operations when a view is being destroyed.\n     *\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?}\n     */\n    DataSource.prototype.disconnect = function (collectionViewer) { };\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/array-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ArrayDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/collection-viewer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for any component that provides a view of some data collection and wants to provide\n * information regarding the view and any changes made.\n * @record\n */\nfunction CollectionViewer() { }\nif (false) {\n    /**\n     * A stream that emits whenever the `CollectionViewer` starts looking at a new portion of the\n     * data. The `start` index is inclusive, while the `end` is exclusive.\n     * @type {?}\n     */\n    CollectionViewer.prototype.viewChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/selection-model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\nif (false) {\n    /**\n     * Currently-selected values.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selection;\n    /**\n     * Keeps track of the deselected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._deselectedToEmit;\n    /**\n     * Keeps track of the selected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selectedToEmit;\n    /**\n     * Cache for the array value of the selected items.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selected;\n    /**\n     * Event emitted when the value has changed.\n     * @type {?}\n     */\n    SelectionModel.prototype.changed;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._emitChanges;\n}\n/**\n * Event emitted when the value of a MatSelectionModel has changed.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction SelectionChange() { }\nif (false) {\n    /**\n     * Model that dispatched the event.\n     * @type {?}\n     */\n    SelectionChange.prototype.source;\n    /**\n     * Options that were added to the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.added;\n    /**\n     * Options that were removed from the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.removed;\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/unique-selection-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\n/** @nocollapse */ UniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/tree-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for a class that can flatten hierarchical structured data and re-expand the flattened\n * data back into its original structure. Should be used in conjunction with the cdk-tree.\n * @record\n * @template T\n */\nfunction TreeDataNodeFlattener() { }\nif (false) {\n    /**\n     * Transforms a set of hierarchical structured data into a flattened data array.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.flattenNodes = function (structuredData) { };\n    /**\n     * Expands a flattened array of data into its hierarchical form using the provided expansion\n     * model.\n     * @param {?} nodes\n     * @param {?} expansionModel\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.expandFlattenedNodes = function (nodes, expansionModel) { };\n    /**\n     * Put node descendants of node in array.\n     * If `onlyExpandable` is true, then only process expandable descendants.\n     * @param {?} node\n     * @param {?} nodes\n     * @param {?} onlyExpandable\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.nodeDescendents = function (node, nodes, onlyExpandable) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/keycodes.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAC_ENTER = 3;\n/** @type {?} */\nconst BACKSPACE = 8;\n/** @type {?} */\nconst TAB = 9;\n/** @type {?} */\nconst NUM_CENTER = 12;\n/** @type {?} */\nconst ENTER = 13;\n/** @type {?} */\nconst SHIFT = 16;\n/** @type {?} */\nconst CONTROL = 17;\n/** @type {?} */\nconst ALT = 18;\n/** @type {?} */\nconst PAUSE = 19;\n/** @type {?} */\nconst CAPS_LOCK = 20;\n/** @type {?} */\nconst ESCAPE = 27;\n/** @type {?} */\nconst SPACE = 32;\n/** @type {?} */\nconst PAGE_UP = 33;\n/** @type {?} */\nconst PAGE_DOWN = 34;\n/** @type {?} */\nconst END = 35;\n/** @type {?} */\nconst HOME = 36;\n/** @type {?} */\nconst LEFT_ARROW = 37;\n/** @type {?} */\nconst UP_ARROW = 38;\n/** @type {?} */\nconst RIGHT_ARROW = 39;\n/** @type {?} */\nconst DOWN_ARROW = 40;\n/** @type {?} */\nconst PLUS_SIGN = 43;\n/** @type {?} */\nconst PRINT_SCREEN = 44;\n/** @type {?} */\nconst INSERT = 45;\n/** @type {?} */\nconst DELETE = 46;\n/** @type {?} */\nconst ZERO = 48;\n/** @type {?} */\nconst ONE = 49;\n/** @type {?} */\nconst TWO = 50;\n/** @type {?} */\nconst THREE = 51;\n/** @type {?} */\nconst FOUR = 52;\n/** @type {?} */\nconst FIVE = 53;\n/** @type {?} */\nconst SIX = 54;\n/** @type {?} */\nconst SEVEN = 55;\n/** @type {?} */\nconst EIGHT = 56;\n/** @type {?} */\nconst NINE = 57;\n/** @type {?} */\nconst FF_SEMICOLON = 59;\n// Firefox (Gecko) fires this for semicolon instead of 186\n/** @type {?} */\nconst FF_EQUALS = 61;\n// Firefox (Gecko) fires this for equals instead of 187\n/** @type {?} */\nconst QUESTION_MARK = 63;\n/** @type {?} */\nconst AT_SIGN = 64;\n/** @type {?} */\nconst A = 65;\n/** @type {?} */\nconst B = 66;\n/** @type {?} */\nconst C = 67;\n/** @type {?} */\nconst D = 68;\n/** @type {?} */\nconst E = 69;\n/** @type {?} */\nconst F = 70;\n/** @type {?} */\nconst G = 71;\n/** @type {?} */\nconst H = 72;\n/** @type {?} */\nconst I = 73;\n/** @type {?} */\nconst J = 74;\n/** @type {?} */\nconst K = 75;\n/** @type {?} */\nconst L = 76;\n/** @type {?} */\nconst M = 77;\n/** @type {?} */\nconst N = 78;\n/** @type {?} */\nconst O = 79;\n/** @type {?} */\nconst P = 80;\n/** @type {?} */\nconst Q = 81;\n/** @type {?} */\nconst R = 82;\n/** @type {?} */\nconst S = 83;\n/** @type {?} */\nconst T = 84;\n/** @type {?} */\nconst U = 85;\n/** @type {?} */\nconst V = 86;\n/** @type {?} */\nconst W = 87;\n/** @type {?} */\nconst X = 88;\n/** @type {?} */\nconst Y = 89;\n/** @type {?} */\nconst Z = 90;\n/** @type {?} */\nconst META = 91;\n// WIN_KEY_LEFT\n/** @type {?} */\nconst MAC_WK_CMD_LEFT = 91;\n/** @type {?} */\nconst MAC_WK_CMD_RIGHT = 93;\n/** @type {?} */\nconst CONTEXT_MENU = 93;\n/** @type {?} */\nconst NUMPAD_ZERO = 96;\n/** @type {?} */\nconst NUMPAD_ONE = 97;\n/** @type {?} */\nconst NUMPAD_TWO = 98;\n/** @type {?} */\nconst NUMPAD_THREE = 99;\n/** @type {?} */\nconst NUMPAD_FOUR = 100;\n/** @type {?} */\nconst NUMPAD_FIVE = 101;\n/** @type {?} */\nconst NUMPAD_SIX = 102;\n/** @type {?} */\nconst NUMPAD_SEVEN = 103;\n/** @type {?} */\nconst NUMPAD_EIGHT = 104;\n/** @type {?} */\nconst NUMPAD_NINE = 105;\n/** @type {?} */\nconst NUMPAD_MULTIPLY = 106;\n/** @type {?} */\nconst NUMPAD_PLUS = 107;\n/** @type {?} */\nconst NUMPAD_MINUS = 109;\n/** @type {?} */\nconst NUMPAD_PERIOD = 110;\n/** @type {?} */\nconst NUMPAD_DIVIDE = 111;\n/** @type {?} */\nconst F1 = 112;\n/** @type {?} */\nconst F2 = 113;\n/** @type {?} */\nconst F3 = 114;\n/** @type {?} */\nconst F4 = 115;\n/** @type {?} */\nconst F5 = 116;\n/** @type {?} */\nconst F6 = 117;\n/** @type {?} */\nconst F7 = 118;\n/** @type {?} */\nconst F8 = 119;\n/** @type {?} */\nconst F9 = 120;\n/** @type {?} */\nconst F10 = 121;\n/** @type {?} */\nconst F11 = 122;\n/** @type {?} */\nconst F12 = 123;\n/** @type {?} */\nconst NUM_LOCK = 144;\n/** @type {?} */\nconst SCROLL_LOCK = 145;\n/** @type {?} */\nconst FIRST_MEDIA = 166;\n/** @type {?} */\nconst FF_MINUS = 173;\n/** @type {?} */\nconst MUTE = 173;\n// Firefox (Gecko) fires 181 for MUTE\n/** @type {?} */\nconst VOLUME_DOWN = 174;\n// Firefox (Gecko) fires 182 for VOLUME_DOWN\n/** @type {?} */\nconst VOLUME_UP = 175;\n// Firefox (Gecko) fires 183 for VOLUME_UP\n/** @type {?} */\nconst FF_MUTE = 181;\n/** @type {?} */\nconst FF_VOLUME_DOWN = 182;\n/** @type {?} */\nconst LAST_MEDIA = 183;\n/** @type {?} */\nconst FF_VOLUME_UP = 183;\n/** @type {?} */\nconst SEMICOLON = 186;\n// Firefox (Gecko) fires 59 for SEMICOLON\n/** @type {?} */\nconst EQUALS = 187;\n// Firefox (Gecko) fires 61 for EQUALS\n/** @type {?} */\nconst COMMA = 188;\n/** @type {?} */\nconst DASH = 189;\n// Firefox (Gecko) fires 173 for DASH/MINUS\n/** @type {?} */\nconst SLASH = 191;\n/** @type {?} */\nconst APOSTROPHE = 192;\n/** @type {?} */\nconst TILDE = 192;\n/** @type {?} */\nconst OPEN_SQUARE_BRACKET = 219;\n/** @type {?} */\nconst BACKSLASH = 220;\n/** @type {?} */\nconst CLOSE_SQUARE_BRACKET = 221;\n/** @type {?} */\nconst SINGLE_QUOTE = 222;\n/** @type {?} */\nconst MAC_META = 224;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/modifiers.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param {?} event Event to be checked.\n * @param {...?} modifiers\n * @return {?}\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => event[modifier]));\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n\n//# sourceMappingURL=keycodes.js.map","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Injectable, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, NgZone, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/observers/observe-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MutationObserverFactory {\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = function MutationObserverFactory_Factory(t) { return new (t || MutationObserverFactory)(); };\n/** @nocollapse */ MutationObserverFactory.ɵprov = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MutationObserverFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nclass ContentObserver {\n    /**\n     * @param {?} _mutationObserverFactory\n     */\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._observedElements.forEach((/**\n         * @param {?} _\n         * @param {?} element\n         * @return {?}\n         */\n        (_, element) => this._cleanupObserver(element)));\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    observe(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const stream = this._observeElement(element);\n            /** @type {?} */\n            const subscription = stream.subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            });\n        }));\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            const stream = new Subject();\n            /** @type {?} */\n            const observer = this._mutationObserverFactory.create((/**\n             * @param {?} mutations\n             * @return {?}\n             */\n            mutations => stream.next(mutations)));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = (/** @type {?} */ (this._observedElements.get(element)));\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = function ContentObserver_Factory(t) { return new (t || ContentObserver)(ɵngcc0.ɵɵinject(MutationObserverFactory)); };\n/** @nocollapse */\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n/** @nocollapse */ ContentObserver.ɵprov = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MutationObserverFactory }]; }, null); })();\nif (false) {\n    /**\n     * Keeps track of the existing MutationObservers so they can be reused.\n     * @type {?}\n     * @private\n     */\n    ContentObserver.prototype._observedElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentObserver.prototype._mutationObserverFactory;\n}\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * @param {?} _contentObserver\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /**\n     * Debounce interval for emitting the changes.\n     * @return {?}\n     */\n    get debounce() { return this._debounce; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribe() {\n        this._unsubscribe();\n        /** @type {?} */\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.ɵfac = function CdkObserveContent_Factory(t) { return new (t || CdkObserveContent)(ɵngcc0.ɵɵdirectiveInject(ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkObserveContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkObserveContent, selectors: [[\"\", \"cdkObserveContent\", \"\"]], inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"] });\n/** @nocollapse */\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkObserveContent, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent'\n            }]\n    }], function () { return [{ type: ContentObserver }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { event: [{\n            type: Output,\n            args: ['cdkObserveContent']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkObserveContentDisabled']\n        }], debounce: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkObserveContent.ngAcceptInputType_disabled;\n    /** @type {?} */\n    CdkObserveContent.ngAcceptInputType_debounce;\n    /**\n     * Event emitted for each change in the element's content.\n     * @type {?}\n     */\n    CdkObserveContent.prototype.event;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._debounce;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._currentSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._contentObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._ngZone;\n}\nclass ObserversModule {\n}\nObserversModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ObserversModule });\nObserversModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ObserversModule_Factory(t) { return new (t || ObserversModule)(); }, providers: [MutationObserverFactory] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ObserversModule, { declarations: [CdkObserveContent], exports: [CdkObserveContent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ObserversModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/observers/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n\n//# sourceMappingURL=observers.js.map","import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, Observable, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/block-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} document\n     */\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    attach() { }\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    enable() {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            const root = (/** @type {?} */ (this._document.documentElement));\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    disable() {\n        if (this._isEnabled) {\n            /** @type {?} */\n            const html = (/** @type {?} */ (this._document.documentElement));\n            /** @type {?} */\n            const body = (/** @type {?} */ (this._document.body));\n            /** @type {?} */\n            const htmlStyle = (/** @type {?} */ (html.style));\n            /** @type {?} */\n            const bodyStyle = (/** @type {?} */ (body.style));\n            /** @type {?} */\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            /** @type {?} */\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        /** @type {?} */\n        const html = (/** @type {?} */ (this._document.documentElement));\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousHTMLStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousScrollPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._isEnabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n * @record\n */\nfunction ScrollStrategy() { }\nif (false) {\n    /**\n     * Enable this scroll strategy (called when the attached overlay is attached to a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.enable;\n    /**\n     * Disable this scroll strategy (called when the attached overlay is detached from a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.disable;\n    /**\n     * Attaches this `ScrollStrategy` to an overlay.\n     * @type {?}\n     */\n    ScrollStrategy.prototype.attach;\n    /**\n     * Detaches the scroll strategy from the current overlay.\n     * @type {?|undefined}\n     */\n    ScrollStrategy.prototype.detach;\n}\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/close-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the CloseScrollStrategy.\n * @record\n */\nfunction CloseScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Amount of pixels the user has to scroll before the overlay is closed.\n     * @type {?|undefined}\n     */\n    CloseScrollStrategyConfig.prototype.threshold;\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = (/**\n         * @return {?}\n         */\n        () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this._overlayRef.detach()));\n            }\n        });\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > (/** @type {?} */ ((/** @type {?} */ (this._config)).threshold))) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            }));\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._initialScrollPosition;\n    /**\n     * Detaches the overlay ref and disables the scroll strategy.\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._detach;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/noop-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Scroll strategy that doesn't do anything.\n */\nclass NoopScrollStrategy {\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    enable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    disable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    attach() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/scroll-clip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} containerBounds\n     * @return {?}\n     */\n    containerBounds => {\n        /** @type {?} */\n        const outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        const outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        const outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    }));\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} scrollContainerRect\n     * @return {?}\n     */\n    scrollContainerRect => {\n        /** @type {?} */\n        const clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        const clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/reposition-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the RepositionScrollStrategy.\n * @record\n */\nfunction RepositionScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Time in milliseconds to throttle the scroll events.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.scrollThrottle;\n    /**\n     * Whether to close the overlay once the user has scrolled away completely.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.autoClose;\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    /** @type {?} */\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    /** @type {?} */\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._overlayRef.detach()));\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?} document\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = (/**\n         * @return {?}\n         */\n        () => new NoopScrollStrategy());\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config));\n        /**\n         * Block scrolling.\n         */\n        this.block = (/**\n         * @return {?}\n         */\n        () => new BlockScrollStrategy(this._viewportRuler, this._document));\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config));\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._document;\n    /**\n     * Do nothing on scroll.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.noop;\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.close;\n    /**\n     * Block scrolling.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.block;\n    /**\n     * Update the overlay's position on scroll.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.reposition;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nclass OverlayConfig {\n    /**\n     * @param {?=} config\n     */\n    constructor(config) {\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            /** @type {?} */\n            const configKeys = (/** @type {?} */ (Object.keys(config)));\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = (/** @type {?} */ (config[key]));\n                }\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Strategy with which to position the overlay.\n     * @type {?}\n     */\n    OverlayConfig.prototype.positionStrategy;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    OverlayConfig.prototype.scrollStrategy;\n    /**\n     * Custom class to add to the overlay pane.\n     * @type {?}\n     */\n    OverlayConfig.prototype.panelClass;\n    /**\n     * Whether the overlay has a backdrop.\n     * @type {?}\n     */\n    OverlayConfig.prototype.hasBackdrop;\n    /**\n     * Custom class to add to the backdrop\n     * @type {?}\n     */\n    OverlayConfig.prototype.backdropClass;\n    /**\n     * The width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.width;\n    /**\n     * The height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.height;\n    /**\n     * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minWidth;\n    /**\n     * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minHeight;\n    /**\n     * The max-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxWidth;\n    /**\n     * The max-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     * @type {?}\n     */\n    OverlayConfig.prototype.direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    OverlayConfig.prototype.disposeOnNavigation;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A connection point on the origin element.\n * @record\n */\nfunction OriginConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originX;\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originY;\n}\n/**\n * A connection point on the overlay element.\n * @record\n */\nfunction OverlayConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayX;\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayY;\n}\n/**\n * The points of the origin element and the overlay element to connect.\n */\nclass ConnectionPositionPair {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @param {?=} panelClass\n     */\n    constructor(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\nif (false) {\n    /**\n     * X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originX;\n    /**\n     * Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originY;\n    /**\n     * X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayX;\n    /**\n     * Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayY;\n    /**\n     * Offset along the X axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetX;\n    /**\n     * Offset along the Y axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetY;\n    /**\n     * Class(es) to be applied to the panel while this position is active.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.panelClass;\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nclass ScrollingVisibility {\n}\nif (false) {\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginOutsideView;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayOutsideView;\n}\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nclass ConnectedOverlayPositionChange {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    constructor(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/** @nocollapse */\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * The position used as a result of this change.\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.connectionPair;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.scrollableViewProperties;\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/keyboard/overlay-keyboard-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEventSubscriptions > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        });\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._detach();\n    }\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    }\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    remove(overlayRef) {\n        /** @type {?} */\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    }\n    /**\n     * Detaches the global keyboard event listener.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Currently attached overlays in the order they were attached.\n     * @type {?}\n     */\n    OverlayKeyboardDispatcher.prototype._attachedOverlays;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._isAttached;\n    /**\n     * Keyboard event listener that will be attached to the body.\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._keydownListener;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        (/** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n * @type {?}\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(((/** @type {?} */ (window))).__karma__ || ((/** @type {?} */ (window))).jasmine);\n/**\n * Container inside which all overlays will render.\n */\nclass OverlayContainer {\n    /**\n     * @param {?} document\n     * @param {?=} _platform\n     */\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        // @breaking-change 10.0.0 Remove null check for `_platform`.\n        /** @type {?} */\n        const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n        /** @type {?} */\n        const containerClass = 'cdk-overlay-container';\n        if (isBrowser || isTestEnvironment) {\n            /** @type {?} */\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                (/** @type {?} */ (oppositePlatformContainers[i].parentNode)).removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        /** @type {?} */\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ OverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._containerElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._document;\n    /**\n     * @deprecated `platform` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._platform;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    /**\n     * @param {?} _portalOutlet\n     * @param {?} _host\n     * @param {?} _pane\n     * @param {?} _config\n     * @param {?} _ngZone\n     * @param {?} _keyboardDispatcher\n     * @param {?} _document\n     * @param {?=} _location\n     */\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._backdropClick.next(event));\n        this._keydownEventsObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._keydownEvents.subscribe(observer);\n            this._keydownEventSubscriptions++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._keydownEventSubscriptions--;\n            });\n        }));\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        /**\n         * Amount of subscriptions to the keydown events.\n         */\n        this._keydownEventSubscriptions = 0;\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /**\n     * The overlay's HTML element\n     * @return {?}\n     */\n    get overlayElement() {\n        return this._pane;\n    }\n    /**\n     * The overlay's backdrop HTML element.\n     * @return {?}\n     */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     * @return {?}\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    attach(portal) {\n        /** @type {?} */\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }));\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe((/**\n             * @return {?}\n             */\n            () => this.dispose()));\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        /** @type {?} */\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        /** @type {?} */\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = (/** @type {?} */ (null));\n        }\n        this._previousHostParent = this._pane = (/** @type {?} */ (null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._keydownEventsObservable;\n    }\n    /**\n     * Gets the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * Switches to a new position strategy and updates the overlay position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    getDirection() {\n        /** @type {?} */\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /**\n     * Switches to a new scroll strategy.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /**\n     * Updates the text direction of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @private\n     * @return {?}\n     */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        /** @type {?} */\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @private\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /**\n     * Attaches a backdrop for this overlay.\n     * @private\n     * @return {?}\n     */\n    _attachBackdrop() {\n        /** @type {?} */\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        (/** @type {?} */ (this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                }));\n            }));\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @private\n     * @return {?}\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            (/** @type {?} */ (this._host.parentNode)).appendChild(this._host);\n        }\n    }\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    detachBackdrop() {\n        /** @type {?} */\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        /** @type {?} */\n        let timeoutId;\n        /** @type {?} */\n        let finishDetach = (/**\n         * @return {?}\n         */\n        () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses((/** @type {?} */ (backdropToDetach)), this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        });\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (backdropToDetach)).addEventListener('transitionend', finishDetach);\n        }));\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(finishDetach, 500)));\n    }\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @private\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _toggleClasses(element, cssClasses, isAdd) {\n        /** @type {?} */\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach((/**\n         * @param {?} cssClass\n         * @return {?}\n         */\n        cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        }));\n    }\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @private\n     * @return {?}\n     */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            /** @type {?} */\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            }));\n        }));\n    }\n    /**\n     * Disposes of a scroll strategy.\n     * @private\n     * @return {?}\n     */\n    _disposeScrollStrategy() {\n        /** @type {?} */\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClick;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._attachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._detachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._positionStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._scrollStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._locationChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClickHandler;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._previousHostParent;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keydownEventsObservable;\n    /**\n     * Stream of keydown events dispatched to this overlay.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEvents;\n    /**\n     * Amount of subscriptions to the keydown events.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEventSubscriptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._portalOutlet;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._host;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._pane;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._location;\n}\n/**\n * Size properties for an overlay.\n * @record\n */\nfunction OverlaySizeConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.width;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.height;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minHeight;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/flexible-connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/**\n * Class to be added to the overlay bounding box.\n * @type {?}\n */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /**\n     * @param {?} connectedTo\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this._scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        }));\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        const originRect = this._originRect;\n        /** @type {?} */\n        const overlayRect = this._overlayRect;\n        /** @type {?} */\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        /** @type {?} */\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        /** @type {?} */\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            /** @type {?} */\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            /** @type {?} */\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            /** @type {?} */\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            let bestFit = null;\n            /** @type {?} */\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                /** @type {?} */\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition((/** @type {?} */ (bestFit)).position, (/** @type {?} */ (bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, (/** @type {?} */ ({\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            })));\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} scrollables\n     * @return {THIS}\n     */\n    withScrollableContainers(scrollables) {\n        (/** @type {?} */ (this))._scrollables = scrollables;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Adds new preferred positions.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions List of positions options for this overlay.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf((/** @type {?} */ ((/** @type {?} */ (this))._lastPosition))) === -1) {\n            (/** @type {?} */ (this))._lastPosition = null;\n        }\n        (/** @type {?} */ (this))._validatePositions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {THIS}\n     */\n    withViewportMargin(margin) {\n        (/** @type {?} */ (this))._viewportMargin = margin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} flexibleDimensions\n     * @return {THIS}\n     */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        (/** @type {?} */ (this))._hasFlexibleDimensions = flexibleDimensions;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} growAfterOpen\n     * @return {THIS}\n     */\n    withGrowAfterOpen(growAfterOpen = true) {\n        (/** @type {?} */ (this))._growAfterOpen = growAfterOpen;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} canPush\n     * @return {THIS}\n     */\n    withPush(canPush = true) {\n        (/** @type {?} */ (this))._canPush = canPush;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked = true) {\n        (/** @type {?} */ (this))._positionLocked = isLocked;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetX(offset) {\n        (/** @type {?} */ (this))._offsetX = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetY(offset) {\n        (/** @type {?} */ (this))._offsetY = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {THIS}\n     */\n    withTransformOriginOn(selector) {\n        (/** @type {?} */ (this))._transformOriginSelector = selector;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @private\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOriginPoint(originRect, pos) {\n        /** @type {?} */\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @private\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        /** @type {?} */\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @private\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        /** @type {?} */\n        let leftOverflow = 0 - x;\n        /** @type {?} */\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        let topOverflow = 0 - y;\n        /** @type {?} */\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        /** @type {?} */\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @private\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            const availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            const availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            /** @type {?} */\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            /** @type {?} */\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @private\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        /** @type {?} */\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        /** @type {?} */\n        let pushX = 0;\n        /** @type {?} */\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @private\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            /** @type {?} */\n            const scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        const elements = (/** @type {?} */ (this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        let xOrigin;\n        /** @type {?} */\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @private\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        let height;\n        /** @type {?} */\n        let top;\n        /** @type {?} */\n        let bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            /** @type {?} */\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        /** @type {?} */\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        /** @type {?} */\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        let width;\n        /** @type {?} */\n        let left;\n        /** @type {?} */\n        let right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            /** @type {?} */\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: (/** @type {?} */ (top)), left: (/** @type {?} */ (left)), bottom: (/** @type {?} */ (bottom)), right: (/** @type {?} */ (right)), width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @private\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    _setBoundingBoxStyles(origin, position) {\n        /** @type {?} */\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, styles);\n    }\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetBoundingBoxStyles() {\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, (/** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        })));\n    }\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, (/** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        })));\n    }\n    /**\n     * Sets positioning styles to the overlay element.\n     * @private\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    _setOverlayElementStyles(originPoint, position) {\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        /** @type {?} */\n        const hasExactPosition = this._hasExactPosition();\n        /** @type {?} */\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            /** @type {?} */\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        /** @type {?} */\n        let transformString = '';\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ top: '', bottom: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            /** @type {?} */\n            const documentHeight = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ left: '', right: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        /** @type {?} */\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            const documentWidth = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @private\n     * @return {?}\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        /** @type {?} */\n        const originBounds = this._getOriginRect();\n        /** @type {?} */\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        /** @type {?} */\n        const scrollContainerBounds = this._scrollables.map((/**\n         * @param {?} scrollable\n         * @return {?}\n         */\n        scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        }));\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from its length.\n     * @private\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((/**\n         * @param {?} currentValue\n         * @param {?} currentOverflow\n         * @return {?}\n         */\n        (currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }), length);\n    }\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @private\n     * @return {?}\n     */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        /** @type {?} */\n        const width = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n        /** @type {?} */\n        const height = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n        /** @type {?} */\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @private\n     * @return {?}\n     */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @private\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /**\n     * Validates that the current position match the expected values.\n     * @private\n     * @return {?}\n     */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach((/**\n         * @param {?} pair\n         * @return {?}\n         */\n        pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        }));\n    }\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @private\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            }));\n        }\n    }\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                this._pane.classList.remove(cssClass);\n            }));\n            this._appliedPanelClasses = [];\n        }\n    }\n    /**\n     * Returns the ClientRect of the current origin.\n     * @private\n     * @return {?}\n     */\n    _getOriginRect() {\n        /** @type {?} */\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        /** @type {?} */\n        const width = origin.width || 0;\n        /** @type {?} */\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * Whether we're performing the very first positioning of the overlay.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isInitialRender;\n    /**\n     * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastBoundingBoxSize;\n    /**\n     * Whether the overlay was pushed in a previous positioning.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isPushed;\n    /**\n     * Whether the overlay can be pushed on-screen on the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._canPush;\n    /**\n     * Whether the overlay can grow via flexible width/height after the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._growAfterOpen;\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._hasFlexibleDimensions;\n    /**\n     * Whether the overlay position is locked.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionLocked;\n    /**\n     * Cached origin dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._originRect;\n    /**\n     * Cached overlay dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRect;\n    /**\n     * Cached viewport dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRect;\n    /**\n     * Amount of space that must be maintained between the overlay and the edge of the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportMargin;\n    /**\n     * The Scrollable containers used to check scrollable view properties on position change.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._scrollables;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._preferredPositions;\n    /**\n     * The origin element against which the overlay will be positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._origin;\n    /**\n     * The overlay pane element.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._pane;\n    /**\n     * Whether the strategy has been disposed of already.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._boundingBox;\n    /**\n     * The last position to have been calculated as the best fit position.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastPosition;\n    /**\n     * Subject that emits whenever the position changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionChanges;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._resizeSubscription;\n    /**\n     * Default offset for the overlay along the x axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetX;\n    /**\n     * Default offset for the overlay along the y axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetY;\n    /**\n     * Selector to be used when finding the elements on which to set the transform origin.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._transformOriginSelector;\n    /**\n     * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._appliedPanelClasses;\n    /**\n     * Amount by which the overlay was pushed in each axis during the last time it was positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._previousPushAmount;\n    /**\n     * Observable sequence of position changes.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.positionChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayContainer;\n}\n/**\n * A simple (x, y) coordinate.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Record of measurements for how an overlay (at a given position) fits into the viewport.\n * @record\n */\nfunction OverlayFit() { }\nif (false) {\n    /**\n     * Whether the overlay fits completely in the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.isCompletelyWithinViewport;\n    /**\n     * Whether the overlay fits in the viewport on the y-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportVertically;\n    /**\n     * Whether the overlay fits in the viewport on the x-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportHorizontally;\n    /**\n     * The total visible area (in px^2) of the overlay inside the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.visibleArea;\n}\n/**\n * Record of the measurments determining whether an overlay will fit in a specific position.\n * @record\n */\nfunction FallbackPosition() { }\nif (false) {\n    /** @type {?} */\n    FallbackPosition.prototype.position;\n    /** @type {?} */\n    FallbackPosition.prototype.originPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayFit;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayRect;\n}\n/**\n * Position and size of the overlay sizing wrapper for a specific position.\n * @record\n */\nfunction BoundingBoxRect() { }\nif (false) {\n    /** @type {?} */\n    BoundingBoxRect.prototype.top;\n    /** @type {?} */\n    BoundingBoxRect.prototype.left;\n    /** @type {?} */\n    BoundingBoxRect.prototype.bottom;\n    /** @type {?} */\n    BoundingBoxRect.prototype.right;\n    /** @type {?} */\n    BoundingBoxRect.prototype.height;\n    /** @type {?} */\n    BoundingBoxRect.prototype.width;\n}\n/**\n * Record of measures determining how well a given position will fit with flexible dimensions.\n * @record\n */\nfunction FlexibleFit() { }\nif (false) {\n    /** @type {?} */\n    FlexibleFit.prototype.position;\n    /** @type {?} */\n    FlexibleFit.prototype.origin;\n    /** @type {?} */\n    FlexibleFit.prototype.overlayRect;\n    /** @type {?} */\n    FlexibleFit.prototype.boundingBoxRect;\n}\n/**\n * A connected position as specified by the user.\n * @record\n */\nfunction ConnectedPosition() { }\nif (false) {\n    /** @type {?} */\n    ConnectedPosition.prototype.originX;\n    /** @type {?} */\n    ConnectedPosition.prototype.originY;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayX;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.weight;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetX;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.panelClass;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n * @param {?} input\n * @return {?}\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    /**\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?} connectedTo\n     * @param {?} viewportRuler\n     * @param {?} document\n     * @param {?} platform\n     * @param {?} overlayContainer\n     */\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Emits an event when the connection point changes.\n     * @return {?}\n     */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {THIS}\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        (/** @type {?} */ (this))._preferredPositions.push(position);\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} dir New layout direction.\n     * @return {THIS}\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.setDirection(dir);\n        }\n        else {\n            (/** @type {?} */ (this))._direction = dir;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withOffsetX(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetX(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withOffsetY(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetY(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked) {\n        (/** @type {?} */ (this))._positionStrategy.withLockedPosition(isLocked);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions.slice();\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin element.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._positionStrategy.setOrigin(origin);\n        return (/** @type {?} */ (this));\n    }\n}\nif (false) {\n    /**\n     * Reference to the underlying position strategy to which all the API calls are proxied.\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._positionStrategy;\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._direction;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._preferredPositions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/global-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be added to the overlay pane wrapper.\n * @type {?}\n */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        /** @type {?} */\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New top offset.\n     * @return {THIS}\n     */\n    top(value = '') {\n        (/** @type {?} */ (this))._bottomOffset = '';\n        (/** @type {?} */ (this))._topOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New left offset.\n     * @return {THIS}\n     */\n    left(value = '') {\n        (/** @type {?} */ (this))._rightOffset = '';\n        (/** @type {?} */ (this))._leftOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New bottom offset.\n     * @return {THIS}\n     */\n    bottom(value = '') {\n        (/** @type {?} */ (this))._topOffset = '';\n        (/** @type {?} */ (this))._bottomOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New right offset.\n     * @return {THIS}\n     */\n    right(value = '') {\n        (/** @type {?} */ (this))._leftOffset = '';\n        (/** @type {?} */ (this))._rightOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New width for the overlay\n     * @return {THIS}\n     */\n    width(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ width: value });\n        }\n        else {\n            (/** @type {?} */ (this))._width = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New height for the overlay\n     * @return {THIS}\n     */\n    height(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ height: value });\n        }\n        else {\n            (/** @type {?} */ (this))._height = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {THIS}\n     */\n    centerHorizontally(offset = '') {\n        (/** @type {?} */ (this)).left(offset);\n        (/** @type {?} */ (this))._justifyContent = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {THIS}\n     */\n    centerVertically(offset = '') {\n        (/** @type {?} */ (this)).top(offset);\n        (/** @type {?} */ (this))._alignItems = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        /** @type {?} */\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        /** @type {?} */\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * \\@docs-private\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parent = this._overlayRef.hostElement;\n        /** @type {?} */\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._cssPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._topOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._bottomOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._leftOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._rightOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._alignItems;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._justifyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._width;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._height;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._isDisposed;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/overlay-position-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nclass OverlayPositionBuilder {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} origin Origin relative to which to position the overlay.\n     * @return {?}\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\n/** @nocollapse */\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/** @nocollapse */ OverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._overlayContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Next overlay unique ID.\n * @type {?}\n */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    /**\n     * @param {?} scrollStrategies\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _keyboardDispatcher\n     * @param {?} _injector\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _directionality\n     * @param {?=} _location\n     */\n    constructor(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    create(config) {\n        /** @type {?} */\n        const host = this._createHostElement();\n        /** @type {?} */\n        const pane = this._createPaneElement(host);\n        /** @type {?} */\n        const portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @private\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    _createPaneElement(host) {\n        /** @type {?} */\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @private\n     * @return {?} Newly-create host element.\n     */\n    _createHostElement() {\n        /** @type {?} */\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @private\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\n/** @nocollapse */\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._appRef;\n    /**\n     * Scrolling strategies that can be used when creating an overlay.\n     * @type {?}\n     */\n    Overlay.prototype.scrollStrategies;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._overlayContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._positionBuilder;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._directionality;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._location;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n * @type {?}\n */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @param {?=} config\n     * @return {?}\n     */\n    (config) => overlay.scrollStrategies.reposition(config));\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\n/** @nocollapse */\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    CdkOverlayOrigin.prototype.elementRef;\n}\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} scrollStrategyFactory\n     * @param {?} _dir\n     */\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the x-axis\n     * @return {?}\n     */\n    get offsetX() { return this._offsetX; }\n    /**\n     * @param {?} offsetX\n     * @return {?}\n     */\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the y-axis\n     * @return {?}\n     */\n    get offsetY() { return this._offsetY; }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * Whether or not the overlay should attach a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /**\n     * Whether or not the overlay should be locked when scrolling.\n     * @return {?}\n     */\n    get lockPosition() { return this._lockPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @return {?}\n     */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n     * @return {?}\n     */\n    get growAfterOpen() { return this._growAfterOpen; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @return {?}\n     */\n    get push() { return this._push; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /**\n     * The associated overlay reference.\n     * @return {?}\n     */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /**\n     * The element's layout direction.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /**\n     * Creates an overlay\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        }));\n    }\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @private\n     * @return {?}\n     */\n    _buildConfig() {\n        /** @type {?} */\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /**\n     * Updates the state of a position strategy, based on the values of the directive inputs.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _updatePositionStrategy(positionStrategy) {\n        /** @type {?} */\n        const positions = this.positions.map((/**\n         * @param {?} currentPosition\n         * @return {?}\n         */\n        currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        })));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @private\n     * @return {?}\n     */\n    _createPositionStrategy() {\n        /** @type {?} */\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => this.positionChange.emit(p)));\n        return strategy;\n    }\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.backdropClick.emit(event);\n            }));\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_lockPosition;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_flexibleDimensions;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_growAfterOpen;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._templatePortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._lockPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._growAfterOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._flexibleDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._backdropSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetX;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetY;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._scrollStrategyFactory;\n    /**\n     * Origin for the connected overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.origin;\n    /**\n     * Registered connected position pairs.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionStrategy;\n    /**\n     * The width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.width;\n    /**\n     * The height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.height;\n    /**\n     * The min width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minWidth;\n    /**\n     * The min height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minHeight;\n    /**\n     * The custom class to be set on the backdrop element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClass;\n    /**\n     * The custom class to add to the overlay pane element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.panelClass;\n    /**\n     * Margin between the overlay and the viewport edges.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.viewportMargin;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.scrollStrategy;\n    /**\n     * Whether the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.open;\n    /**\n     * CSS selector which to set the transform origin.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.transformOriginSelector;\n    /**\n     * Event emitted when the backdrop is clicked.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClick;\n    /**\n     * Event emitted when the position has changed.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionChange;\n    /**\n     * Event emitted when the overlay has been attached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.attach;\n    /**\n     * Event emitted when the overlay has been detached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.detach;\n    /**\n     * Emits when there are keyboard events that are targeted at the overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.overlayKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._dir;\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule],\n        ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin,\n        ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/fullscreen-overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    /**\n     * @param {?} _document\n     * @param {?=} platform\n     */\n    constructor(_document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform) {\n        super(_document, platform);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener((/**\n         * @return {?}\n         */\n        () => this._adjustParentForFullscreenChange()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        const fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _addFullscreenChangeListener(fn) {\n        /** @type {?} */\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            /** @type {?} */\n            const _document = (/** @type {?} */ (this._document));\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    getFullscreenElement() {\n        /** @type {?} */\n        const _document = (/** @type {?} */ (this._document));\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ FullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenEventName;\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenListener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_a, OVERLAY_CONTAINER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_c, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_e, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_f, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_g };\n\n//# sourceMappingURL=overlay.js.map","import { Injectable, Optional, Inject, PLATFORM_ID, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/platform.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change 8.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /**\n         * Whether the current browser is Firefox.\n         */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /**\n         * Whether the current browser is Safari.\n         */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID, 8)); };\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n/** @nocollapse */ Platform.ɵprov = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Whether the Angular application is being rendered in the browser.\n     * @type {?}\n     */\n    Platform.prototype.isBrowser;\n    /**\n     * Whether the current browser is Microsoft Edge.\n     * @type {?}\n     */\n    Platform.prototype.EDGE;\n    /**\n     * Whether the current rendering engine is Microsoft Trident.\n     * @type {?}\n     */\n    Platform.prototype.TRIDENT;\n    /**\n     * Whether the current rendering engine is Blink.\n     * @type {?}\n     */\n    Platform.prototype.BLINK;\n    /**\n     * Whether the current rendering engine is WebKit.\n     * @type {?}\n     */\n    Platform.prototype.WEBKIT;\n    /**\n     * Whether the current platform is Apple iOS.\n     * @type {?}\n     */\n    Platform.prototype.IOS;\n    /**\n     * Whether the current browser is Firefox.\n     * @type {?}\n     */\n    Platform.prototype.FIREFOX;\n    /**\n     * Whether the current platform is Android.\n     * @type {?}\n     */\n    Platform.prototype.ANDROID;\n    /**\n     * Whether the current browser is Safari.\n     * @type {?}\n     */\n    Platform.prototype.SAFARI;\n    /**\n     * @type {?}\n     * @private\n     */\n    Platform.prototype._platformId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/platform-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PlatformModule_Factory(t) { return new (t || PlatformModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/input-types.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nlet supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter((/**\n     * @param {?} value\n     * @return {?}\n     */\n    value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    })));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/passive-listeners.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: (/**\n                 * @return {?}\n                 */\n                () => supportsPassiveEvents = true)\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/scrolling.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        const scrollContainer = document.createElement('div');\n        /** @type {?} */\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        const content = document.createElement('div');\n        /** @type {?} */\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/shadow-dom.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nlet shadowDomIsSupported;\n/**\n * Checks whether the user's browser support Shadow DOM.\n * @return {?}\n */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        /** @type {?} */\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (((/** @type {?} */ (head))).createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/**\n * Gets the shadow root of an element, if supported and the element is inside the Shadow DOM.\n * @param {?} element\n * @return {?}\n */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        /** @type {?} */\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        if (rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n\n//# sourceMappingURL=platform.js.map","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that can be used to generically type a class.\n * @record\n * @template T\n */\nfunction ComponentType() { }\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nclass Portal {\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (/** @type {?} */ (host.attach(this)));\n    }\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    detach() {\n        /** @type {?} */\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /**\n     * Whether this portal is attached to a host.\n     * @return {?}\n     */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Portal.prototype._attachedHost;\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nclass ComponentPortal extends Portal {\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     * @param {?=} componentFactoryResolver\n     */\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\nif (false) {\n    /**\n     * The type of the component that will be instantiated for attachment.\n     * @type {?}\n     */\n    ComponentPortal.prototype.component;\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     * @type {?}\n     */\n    ComponentPortal.prototype.viewContainerRef;\n    /**\n     * [Optional] Injector used for the instantiation of the component.\n     * @type {?}\n     */\n    ComponentPortal.prototype.injector;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * Defaults to using the resolver from the outlet that the portal is attached to.\n     * @type {?}\n     */\n    ComponentPortal.prototype.componentFactoryResolver;\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nclass TemplatePortal extends Portal {\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     * @param {?=} context\n     */\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\nif (false) {\n    /**\n     * The embedded template that will be used to instantiate an embedded View in the host.\n     * @type {?}\n     */\n    TemplatePortal.prototype.templateRef;\n    /**\n     * Reference to the ViewContainer into which the template will be stamped out.\n     * @type {?}\n     */\n    TemplatePortal.prototype.viewContainerRef;\n    /**\n     * Contextual data to be passed in to the embedded view.\n     * @type {?}\n     */\n    TemplatePortal.prototype.context;\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n * @template T\n */\nclass DomPortal extends Portal {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\nif (false) {\n    /**\n     * DOM node hosting the portal's content.\n     * @type {?}\n     */\n    DomPortal.prototype.element;\n}\n/**\n * A `PortalOutlet` is an space that can contain a single `Portal`.\n * @record\n */\nfunction PortalOutlet() { }\nif (false) {\n    /**\n     * Attaches a portal to this outlet.\n     * @param {?} portal\n     * @return {?}\n     */\n    PortalOutlet.prototype.attach = function (portal) { };\n    /**\n     * Detaches the currently attached portal from this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.detach = function () { };\n    /**\n     * Performs cleanup before the outlet is destroyed.\n     * @return {?}\n     */\n    PortalOutlet.prototype.dispose = function () { };\n    /**\n     * Whether there is currently a portal attached to this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.hasAttached = function () { };\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nclass BasePortalOutlet {\n    constructor() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * The portal currently attached to the host.\n     * @type {?}\n     * @protected\n     */\n    BasePortalOutlet.prototype._attachedPortal;\n    /**\n     * A function that will permanently dispose this host.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._disposeFn;\n    /**\n     * Whether this host has already been permanently disposed.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._isDisposed;\n    /** @type {?} */\n    BasePortalOutlet.prototype.attachDomPortal;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachComponentPortal = function (portal) { };\n    /**\n     * @abstract\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachTemplatePortal = function (portal) { };\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * \\@breaking-change 9.0.0\n * @abstract\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/dom-portal-outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} outletElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     * @param {?=} _document\n     */\n    constructor(outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => componentRef.destroy()));\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            }));\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        /** @type {?} */\n        let viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach((/**\n         * @param {?} rootNode\n         * @return {?}\n         */\n        rootNode => this.outletElement.appendChild(rootNode)));\n        this.setDisposeFn(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        })));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @private\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _getComponentRootNode(componentRef) {\n        return (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView))).rootNodes[0]));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._document;\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.attachDomPortal;\n    /**\n     * Element into which the content is projected.\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.outletElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._defaultInjector;\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * \\@breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     */\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        this._isInitialized = false;\n        /**\n         * Emits when a portal is attached to the outlet.\n         */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                if (anchorNode.parentNode) {\n                    (/** @type {?} */ (anchorNode.parentNode)).replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Portal associated with the Portal outlet.\n     * @return {?}\n     */\n    get portal() {\n        return this._attachedPortal;\n    }\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /**\n     * Component or view reference that is attached to the portal.\n     * @return {?}\n     */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        /** @type {?} */\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(((/** @type {?} */ (ref.hostView))).rootNodes[0]);\n        }\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => ref.destroy()));\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => this._viewContainerRef.clear()));\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Gets the root node of the portal outlet.\n     * @private\n     * @return {?}\n     */\n    _getRootNode() {\n        /** @type {?} */\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (/** @type {?} */ ((nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : (/** @type {?} */ (nativeElement.parentNode)))));\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkPortalOutlet.ngAcceptInputType_portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._document;\n    /**\n     * Whether the portal component is initialized.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._isInitialized;\n    /**\n     * Reference to the currently-attached component/view ref.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._attachedRef;\n    /**\n     * Emits when a portal is attached to the outlet.\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attached;\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._viewContainerRef;\n}\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective], exports: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-injector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nclass PortalInjector {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _customTokens\n     */\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        /** @type {?} */\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._parentInjector;\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._customTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, merge, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n/**\n * A strategy that dictates which items should be rendered in the viewport.\n * @record\n */\nfunction VirtualScrollStrategy() { }\nif (false) {\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    VirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.attach = function (viewport) { };\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.detach = function () { };\n    /**\n     * Called when the viewport is scrolled (debounced using requestAnimationFrame).\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentScrolled = function () { };\n    /**\n     * Called when the length of the data changes.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onDataLengthChanged = function () { };\n    /**\n     * Called when the range of items rendered in the DOM has changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentRendered = function () { };\n    /**\n     * Called when the offset of the rendered items changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onRenderedOffsetChanged = function () { };\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.scrollToIndex = function (index, behavior) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/fixed-size-virtual-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._scrolledIndexChange;\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @type {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * The attached viewport.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._viewport;\n    /**\n     * The size of the items in the virtually scrolling list.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._itemSize;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._minBufferPx;\n    /**\n     * The number of buffer items to render beyond the edge of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._maxBufferPx;\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(( /**\n                         * @return {?}\n                         */() => CdkFixedSizeVirtualScroll))]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(( /**\n                                 * @return {?}\n                                 */() => CdkFixedSizeVirtualScroll))]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_maxBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._maxBufferPx;\n    /**\n     * The scroll strategy used by this directive.\n     * @type {?}\n     */\n    CdkFixedSizeVirtualScroll.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scroll-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    ScrollDispatcher.prototype._document;\n    /**\n     * Subject for notifying that a registered scrollable reference element has been scrolled.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolled;\n    /**\n     * Keeps track of the global `scroll` and `resize` subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype._globalSubscription;\n    /**\n     * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolledCount;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype.scrollContainers;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrollable.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._elementScrolled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.scrollDispatcher;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.ngZone;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/viewport-ruler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Object that holds the scroll position of the viewport in each direction.\n * @record\n */\nfunction ViewportScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ViewportScrollPosition.prototype.top;\n    /** @type {?} */\n    ViewportScrollPosition.prototype.left;\n}\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     * @param {?=} document\n     */\n    constructor(_platform, ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._platform = _platform;\n        this._document = document;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const window = this._getWindow();\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const document = this._getDocument();\n        /** @type {?} */\n        const window = this._getWindow();\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        /** @type {?} */\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone), ɵɵinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._viewportSize;\n    /**\n     * Stream of viewport change events.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._change;\n    /**\n     * Subscription to streams that invalidate the cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._invalidateCache;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    ViewportRuler.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-viewport.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     * @param {?=} viewportRuler\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n    /**\n     * @deprecated `viewportRuler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        /**\n         * Subscription to changes in the viewport size.\n         */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n        if (viewportRuler) {\n            this._viewportChanges = viewportRuler.change().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.checkViewportSize();\n            }));\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler, 8)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the viewport is detached from a CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._detachedSubject;\n    /**\n     * Emits when the rendered range changes.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRangeSubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._orientation;\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrolledIndexChange;\n    /**\n     * The element that wraps the rendered content.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._contentWrapper;\n    /**\n     * A stream that emits whenever the rendered range changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.renderedRangeStream;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._totalContentSize;\n    /**\n     * A string representing the `style.width` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentWidth;\n    /**\n     * A string representing the `style.height` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentHeight;\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentTransform;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRange;\n    /**\n     * The length of the data bound to this viewport (in number of items).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._dataLength;\n    /**\n     * The size of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportSize;\n    /**\n     * the currently attached CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._forOf;\n    /**\n     * The last rendered content offset that was set.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffset;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffsetNeedsRewrite;\n    /**\n     * Whether there is a pending change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._isChangeDetectionPending;\n    /**\n     * A list of functions to run after the next change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._runAfterChangeDetection;\n    /**\n     * Subscription to changes in the viewport size.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportChanges;\n    /** @type {?} */\n    CdkVirtualScrollViewport.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-for-of.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n            // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n            cdkVirtualForOf: (/** @type {?} */ (this._cdkVirtualForOf)),\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the rendered view of the data changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.viewChange;\n    /**\n     * Subject that emits when a new DataSource instance is given.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._dataSourceChanges;\n    /** @type {?} */\n    CdkVirtualForOf.prototype._cdkVirtualForOf;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._cdkVirtualForTrackBy;\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.cdkVirtualForTemplateCacheSize;\n    /**\n     * Emits whenever the data in the current DataSource changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.dataStream;\n    /**\n     * The differ used to calculate changes to the data.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differ;\n    /**\n     * The most recent data emitted from the DataSource.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._data;\n    /**\n     * The currently rendered items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedItems;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedRange;\n    /**\n     * The template cache used to hold on ot template instancess that have been stamped out, but don't\n     * currently need to be rendered. These instances will be reused in the future rather than\n     * stamping out brand new ones.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._templateCache;\n    /**\n     * Whether the rendered data should be updated during the next ngDoCheck cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._needsUpdate;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._destroyed;\n    /**\n     * The view container to add items to.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewContainerRef;\n    /**\n     * The template to use when stamping out new items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._template;\n    /**\n     * The set of available differs.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differs;\n    /**\n     * The virtual scrolling viewport that these items are being rendered in.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewport;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrolling-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[BidiModule, PlatformModule],\n        BidiModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll,\n        CdkScrollable,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule, PlatformModule]; }, exports: function () { return [BidiModule,\n        CdkFixedSizeVirtualScroll,\n        CdkScrollable,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PlatformModule],\n                exports: [\n                    BidiModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?=} document\n     */\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        /** @type {?} */\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    CdkTextareaAutosize.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('9.2.0');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n//# sourceMappingURL=cdk.js.map\n","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty };\n//# sourceMappingURL=coercion.js.map\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n * @type {?}\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/**\n * \\@docs-private\n */\nclass MatButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatButtonBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the button is round.\n         */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                ((/** @type {?} */ (this._getHostElement()))).classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        this._focusMonitor.monitor(this._elementRef, true);\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    _hasHostAttributes(...attributes) {\n        return attributes.some((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => this._getHostElement().hasAttribute(attribute)));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 3, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the button is round.\n     * @type {?}\n     */\n    MatButton.prototype.isRoundButton;\n    /**\n     * Whether the button is icon button.\n     * @type {?}\n     */\n    MatButton.prototype.isIconButton;\n    /**\n     * Reference to the MatRipple instance of the button.\n     * @type {?}\n     */\n    MatButton.prototype.ripple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButton.prototype._focusMonitor;\n    /** @type {?} */\n    MatButton.prototype._animationMode;\n}\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    /**\n     * @param {?} focusMonitor\n     * @param {?} elementRef\n     * @param {?} animationMode\n     */\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tabindex of the button.\n     * @type {?}\n     */\n    MatAnchor.prototype.tabIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); }, imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton,\n        MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton,\n        MatAnchor,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-checkbox` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatCheckboxDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.color;\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.clickAction;\n}\n/**\n * Injection token to be used to override the default options for `mat-checkbox`.\n * @type {?}\n */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for checkbox components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckbox)),\n    multi: true\n};\n/** @enum {number} */\nconst TransitionCheckState = {\n    /** The initial state of the component before any user interaction. */\n    Init: 0,\n    /** The state representing the component when it's becoming checked. */\n    Checked: 1,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked: 2,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate: 3,\n};\n/**\n * Change event object emitted by MatCheckbox.\n */\nclass MatCheckboxChange {\n}\nif (false) {\n    /**\n     * The source MatCheckbox of the event.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.source;\n    /**\n     * The new `checked` value of the checkbox.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/**\n * \\@docs-private\n */\nclass MatCheckboxBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCheckboxBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusMonitor\n     * @param {?} _ngZone\n     * @param {?} tabIndex\n     * @param {?} _clickAction\n     * @param {?=} _animationMode\n     * @param {?=} _options\n     */\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _clickAction, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._clickAction = _clickAction;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /**\n         * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the checkbox. Defaults to 'after'\n         */\n        this.labelPosition = 'after';\n        /**\n         * Name value will be applied to the input element if present\n         */\n        this.name = null;\n        /**\n         * Event emitted when the checkbox's `checked` value changes.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the checkbox's `indeterminate` value changes.\n         */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * \\@docs-private\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || {};\n        if (this._options.color) {\n            this.color = this._options.color;\n        }\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._focusMonitor.monitor(elementRef, true).subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._onTouched();\n                    _changeDetectorRef.markForCheck();\n                }));\n            }\n        }));\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n        this._clickAction = this._clickAction || this._options.clickAction;\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Whether the checkbox is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() { }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     * @return {?}\n     */\n    get indeterminate() { return this._indeterminate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set indeterminate(value) {\n        /** @type {?} */\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @return {?}\n     */\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    /**\n     * @private\n     * @param {?} newState\n     * @return {?}\n     */\n    _transitionCheckState(newState) {\n        /** @type {?} */\n        let oldState = this._currentCheckState;\n        /** @type {?} */\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            /** @type {?} */\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    element.classList.remove(animationClass);\n                }), 1000);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                }));\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /**\n     * Focuses the checkbox.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'keyboard', options) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    /**\n     * @private\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        /** @type {?} */\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _syncIndeterminate(value) {\n        /** @type {?} */\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 19, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r3 = ɵngcc0.ɵɵreference(1);\n        const _r5 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r5.textContent || !_r5.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r3)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_required;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_indeterminate;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabelledby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._uniqueId;\n    /**\n     * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatCheckbox.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._required;\n    /**\n     * Whether the label should appear after or before the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatCheckbox.prototype.labelPosition;\n    /**\n     * Name value will be applied to the input element if present\n     * @type {?}\n     */\n    MatCheckbox.prototype.name;\n    /**\n     * Event emitted when the checkbox's `checked` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.change;\n    /**\n     * Event emitted when the checkbox's `indeterminate` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.indeterminateChange;\n    /**\n     * The value attribute of the native input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.value;\n    /**\n     * The native `<input type=\"checkbox\">` element\n     * @type {?}\n     */\n    MatCheckbox.prototype._inputElement;\n    /**\n     * Reference to the ripple instance of the checkbox.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ripple;\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatCheckbox.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentAnimationClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentCheckState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._controlValueAccessorChangeFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._checked;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._indeterminate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._ngZone;\n    /**\n     * @deprecated `_clickAction` parameter to be removed, use\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._clickAction;\n    /** @type {?} */\n    MatCheckbox.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckboxRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based checkbox implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ],\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule,\n        _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox,\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Material.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c2 = [\"*\"];\nconst VERSION = new Version('9.2.0');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/animation/animation.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\nif (false) {\n    /** @type {?} */\n    AnimationCurves.STANDARD_CURVE;\n    /** @type {?} */\n    AnimationCurves.DECELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.ACCELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.SHARP_CURVE;\n}\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\nif (false) {\n    /** @type {?} */\n    AnimationDurations.COMPLEX;\n    /** @type {?} */\n    AnimationDurations.ENTERING;\n    /** @type {?} */\n    AnimationDurations.EXITING;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/common-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n/** @type {?} */\nconst VERSION$1 = new Version('9.2.0');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Object that can be used to configure the sanity checks granularly.\n * @record\n */\nfunction GranularSanityChecks() { }\nif (false) {\n    /** @type {?} */\n    GranularSanityChecks.prototype.doctype;\n    /** @type {?} */\n    GranularSanityChecks.prototype.theme;\n    /** @type {?} */\n    GranularSanityChecks.prototype.version;\n    /**\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    GranularSanityChecks.prototype.hammer;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} highContrastModeDetector\n     * @param {?} sanityChecks\n     * @param {?=} document\n     */\n    constructor(highContrastModeDetector, sanityChecks, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        this._document = document;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        // Note that `_sanityChecks` is typed to `any`, because AoT\n        // throws an error if we use the `SanityChecks` type directly.\n        this._sanityChecks = sanityChecks;\n        if (!this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        /** @type {?} */\n        const doc = this._document || document;\n        return typeof doc === 'object' && doc ? doc : null;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        /** @type {?} */\n        const win = (doc === null || doc === void 0 ? void 0 : doc.defaultView) || window;\n        return typeof win === 'object' && win ? win : null;\n    }\n    /**\n     * Whether any sanity checks are enabled.\n     * @private\n     * @return {?}\n     */\n    _checksAreEnabled() {\n        return isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = (/** @type {?} */ (this._getWindow()));\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        /** @type {?} */\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || ((/** @type {?} */ (this._sanityChecks))).doctype);\n        /** @type {?} */\n        const document = this._getDocument();\n        if (isEnabled && document && !document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        /** @type {?} */\n        const isDisabled = !this._checksAreEnabled() ||\n            (this._sanityChecks === false || !((/** @type {?} */ (this._sanityChecks))).theme);\n        /** @type {?} */\n        const document = this._getDocument();\n        if (isDisabled || !document || !document.body ||\n            typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether the material version matches the cdk version\n     * @private\n     * @return {?}\n     */\n    _checkCdkVersionMatch() {\n        /** @type {?} */\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || ((/** @type {?} */ (this._sanityChecks))).version);\n        if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n            console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n}\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8)); }, imports: [[BidiModule],\n        BidiModule] });\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: HighContrastModeDetector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: ɵngcc1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._hasDoneGlobalChecks;\n    /**\n     * Configured sanity checks.\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._sanityChecks;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    MatCommonModule.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/disabled.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanDisable() { }\nif (false) {\n    /**\n     * Whether the component is disabled.\n     * @type {?}\n     */\n    CanDisable.prototype.disabled;\n}\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/color.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanColor() { }\nif (false) {\n    /**\n     * Theme color palette for the component.\n     * @type {?}\n     */\n    CanColor.prototype.color;\n}\n/**\n * \\@docs-private\n * @record\n */\nfunction HasElementRef() { }\nif (false) {\n    /** @type {?} */\n    HasElementRef.prototype._elementRef;\n}\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/disable-ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanDisableRipple() { }\nif (false) {\n    /**\n     * Whether ripples are disabled.\n     * @type {?}\n     */\n    CanDisableRipple.prototype.disableRipple;\n}\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/tabindex.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction HasTabIndex() { }\nif (false) {\n    /**\n     * Tabindex of the component.\n     * @type {?}\n     */\n    HasTabIndex.prototype.tabIndex;\n}\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/error-state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanUpdateErrorState() { }\nif (false) {\n    /** @type {?} */\n    CanUpdateErrorState.prototype.stateChanges;\n    /** @type {?} */\n    CanUpdateErrorState.prototype.errorState;\n    /** @type {?} */\n    CanUpdateErrorState.prototype.errorStateMatcher;\n    /**\n     * @return {?}\n     */\n    CanUpdateErrorState.prototype.updateErrorState = function () { };\n}\n/**\n * \\@docs-private\n * @record\n */\nfunction HasErrorState() { }\nif (false) {\n    /** @type {?} */\n    HasErrorState.prototype._parentFormGroup;\n    /** @type {?} */\n    HasErrorState.prototype._parentForm;\n    /** @type {?} */\n    HasErrorState.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    HasErrorState.prototype.ngControl;\n}\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/initialized.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * \\@docs-private\n * @record\n */\nfunction HasInitialized() { }\nif (false) {\n    /**\n     * Stream that emits once during the directive/component's ngOnInit.\n     * @type {?}\n     */\n    HasInitialized.prototype.initialized;\n    /**\n     * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\n     * the directive has been initialized.\n     * \\@docs-private\n     * @type {?}\n     */\n    HasInitialized.prototype._markInitialized;\n}\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable((/**\n             * @param {?} subscriber\n             * @return {?}\n             */\n            subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    (/** @type {?} */ (this._pendingSubscribers)).push(subscriber);\n                }\n            }));\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            (/** @type {?} */ (this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\nif (false) {\n    /**\n     * The locale to use for all dates.\n     * @type {?}\n     * @protected\n     */\n    DateAdapter.prototype.locale;\n    /**\n     * @type {?}\n     * @protected\n     */\n    DateAdapter.prototype._localeChanges;\n    /**\n     * Gets the year component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the year from.\n     * @return {?} The year component.\n     */\n    DateAdapter.prototype.getYear = function (date) { };\n    /**\n     * Gets the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the month from.\n     * @return {?} The month component (0-indexed, 0 = January).\n     */\n    DateAdapter.prototype.getMonth = function (date) { };\n    /**\n     * Gets the date of the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the date of the month from.\n     * @return {?} The month component (1-indexed, 1 = first of month).\n     */\n    DateAdapter.prototype.getDate = function (date) { };\n    /**\n     * Gets the day of the week component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the day of the week from.\n     * @return {?} The month component (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getDayOfWeek = function (date) { };\n    /**\n     * Gets a list of names for the months.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n     * @return {?} An ordered list of all month names, starting with January.\n     */\n    DateAdapter.prototype.getMonthNames = function (style) { };\n    /**\n     * Gets a list of names for the dates of the month.\n     * @abstract\n     * @return {?} An ordered list of all date of the month names, starting with '1'.\n     */\n    DateAdapter.prototype.getDateNames = function () { };\n    /**\n     * Gets a list of names for the days of the week.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n     * @return {?} An ordered list of all weekday names, starting with Sunday.\n     */\n    DateAdapter.prototype.getDayOfWeekNames = function (style) { };\n    /**\n     * Gets the name for the year of the given date.\n     * @abstract\n     * @param {?} date The date to get the year name for.\n     * @return {?} The name of the given year (e.g. '2017').\n     */\n    DateAdapter.prototype.getYearName = function (date) { };\n    /**\n     * Gets the first day of the week.\n     * @abstract\n     * @return {?} The first day of the week (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getFirstDayOfWeek = function () { };\n    /**\n     * Gets the number of days in the month of the given date.\n     * @abstract\n     * @param {?} date The date whose month should be checked.\n     * @return {?} The number of days in the month of the given date.\n     */\n    DateAdapter.prototype.getNumDaysInMonth = function (date) { };\n    /**\n     * Clones the given date.\n     * @abstract\n     * @param {?} date The date to clone\n     * @return {?} A new date equal to the given date.\n     */\n    DateAdapter.prototype.clone = function (date) { };\n    /**\n     * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n     * month and date.\n     * @abstract\n     * @param {?} year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n     * @param {?} month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n     * @param {?} date The date of month of the date. Must be an integer 1 - length of the given month.\n     * @return {?} The new date, or null if invalid.\n     */\n    DateAdapter.prototype.createDate = function (year, month, date) { };\n    /**\n     * Gets today's date.\n     * @abstract\n     * @return {?} Today's date.\n     */\n    DateAdapter.prototype.today = function () { };\n    /**\n     * Parses a date from a user-provided value.\n     * @abstract\n     * @param {?} value The value to parse.\n     * @param {?} parseFormat The expected format of the value being parsed\n     *     (type is implementation-dependent).\n     * @return {?} The parsed date.\n     */\n    DateAdapter.prototype.parse = function (value, parseFormat) { };\n    /**\n     * Formats a date as a string according to the given format.\n     * @abstract\n     * @param {?} date The value to format.\n     * @param {?} displayFormat The format to use to display the date as a string.\n     * @return {?} The formatted date string.\n     */\n    DateAdapter.prototype.format = function (date, displayFormat) { };\n    /**\n     * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n     * calendar for each year and then finding the closest date in the new month. For example when\n     * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add years to.\n     * @param {?} years The number of years to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of years added.\n     */\n    DateAdapter.prototype.addCalendarYears = function (date, years) { };\n    /**\n     * Adds the given number of months to the date. Months are counted as if flipping a page on the\n     * calendar for each month and then finding the closest date in the new month. For example when\n     * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add months to.\n     * @param {?} months The number of months to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of months added.\n     */\n    DateAdapter.prototype.addCalendarMonths = function (date, months) { };\n    /**\n     * Adds the given number of days to the date. Days are counted as if moving one cell on the\n     * calendar for each day.\n     * @abstract\n     * @param {?} date The date to add days to.\n     * @param {?} days The number of days to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of days added.\n     */\n    DateAdapter.prototype.addCalendarDays = function (date, days) { };\n    /**\n     * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n     * This method is used to generate date strings that are compatible with native HTML attributes\n     * such as the `min` or `max` attribute of an `<input>`.\n     * @abstract\n     * @param {?} date The date to get the ISO date string for.\n     * @return {?} The ISO date string date string.\n     */\n    DateAdapter.prototype.toIso8601 = function (date) { };\n    /**\n     * Checks whether the given object is considered a date instance by this DateAdapter.\n     * @abstract\n     * @param {?} obj The object to check\n     * @return {?} Whether the object is a date instance.\n     */\n    DateAdapter.prototype.isDateInstance = function (obj) { };\n    /**\n     * Checks whether the given date is valid.\n     * @abstract\n     * @param {?} date The date to check.\n     * @return {?} Whether the date is valid.\n     */\n    DateAdapter.prototype.isValid = function (date) { };\n    /**\n     * Gets date instance that is not valid.\n     * @abstract\n     * @return {?} An invalid date.\n     */\n    DateAdapter.prototype.invalid = function () { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/native-date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = /**\n * @param {?} i\n * @return {?}\n */\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, (ɵ0));\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors.\n     * @type {?}\n     * @private\n     */\n    NativeDateAdapter.prototype._clampDate;\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from its utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     * @type {?}\n     */\n    NativeDateAdapter.prototype.useUtcForDisplay;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/native-date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); }, providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/error/error-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\n/** @nocollapse */ ErrorStateMatcher.ɵprov = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/gestures/gesture-annotations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Stripped-down HammerJS annotations to be used within Material, which are necessary,\n * because HammerJS is an optional dependency. For the full annotations see:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/hammerjs/index.d.ts\n */\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerInput() { }\nif (false) {\n    /** @type {?} */\n    HammerInput.prototype.preventDefault;\n    /** @type {?} */\n    HammerInput.prototype.deltaX;\n    /** @type {?} */\n    HammerInput.prototype.deltaY;\n    /** @type {?} */\n    HammerInput.prototype.center;\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerStatic() { }\nif (false) {\n    /** @type {?} */\n    HammerStatic.prototype.Pan;\n    /** @type {?} */\n    HammerStatic.prototype.Swipe;\n    /** @type {?} */\n    HammerStatic.prototype.Press;\n    /* Skipping unhandled member: new(element: HTMLElement | SVGElement, options?: any): HammerManager;*/\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction Recognizer() { }\nif (false) {\n    /* Skipping unhandled member: new(options?: any): Recognizer;*/\n    /**\n     * @param {?} otherRecognizer\n     * @return {?}\n     */\n    Recognizer.prototype.recognizeWith = function (otherRecognizer) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction RecognizerStatic() { }\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerInstance() { }\nif (false) {\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    HammerInstance.prototype.on = function (eventName, callback) { };\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    HammerInstance.prototype.off = function (eventName, callback) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerManager() { }\nif (false) {\n    /**\n     * @param {?} recogniser\n     * @return {?}\n     */\n    HammerManager.prototype.add = function (recogniser) { };\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    HammerManager.prototype.set = function (options) { };\n    /**\n     * @param {?} event\n     * @param {?} data\n     * @return {?}\n     */\n    HammerManager.prototype.emit = function (event, data) { };\n    /**\n     * @param {?} events\n     * @param {?=} handler\n     * @return {?}\n     */\n    HammerManager.prototype.off = function (events, handler) { };\n    /**\n     * @param {?} events\n     * @param {?} handler\n     * @return {?}\n     */\n    HammerManager.prototype.on = function (events, handler) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    HammerOptions.prototype.cssProps;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.domEvents;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.enable;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.preset;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.touchAction;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.recognizers;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.inputClass;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.inputTarget;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/gestures/gesture-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = /**\n * @return {?}\n */\n() => { }, ɵ1 = /**\n * @return {?}\n */\n() => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n    on: (ɵ0$2),\n    off: (ɵ1),\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} _commonModule\n     */\n    constructor(_hammerOptions, _commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? ((/** @type {?} */ (window))).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (/** @type {?} */ (mc));\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new ((/** @type {?} */ (base.constructor)))(options);\n        inheritances.push(base);\n        inheritances.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => recognizer.recognizeWith(item)));\n        return recognizer;\n    }\n}\nGestureConfig.ɵfac = function GestureConfig_Factory(t) { return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8)); };\nGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GestureConfig, factory: GestureConfig.ɵfac });\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_HAMMER_OPTIONS]\n            }] }, { type: MatCommonModule, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * List of new event names to add to the gesture support list\n     * @type {?}\n     */\n    GestureConfig.prototype.events;\n    /**\n     * @type {?}\n     * @private\n     */\n    GestureConfig.prototype._hammerOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/line/line.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @param {?=} prefix\n * @return {?}\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    }));\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatLineModule_Factory(t) { return new (t || MatLineModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine,\n        MatCommonModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = 3 /* HIDDEN */;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\nif (false) {\n    /**\n     * Current state of the ripple.\n     * @type {?}\n     */\n    RippleRef.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRef.prototype._renderer;\n    /**\n     * Reference to the ripple HTML element.\n     * @type {?}\n     */\n    RippleRef.prototype.element;\n    /**\n     * Ripple configuration used for the ripple.\n     * @type {?}\n     */\n    RippleRef.prototype.config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple-renderer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n * @record\n */\nfunction RippleAnimationConfig() { }\nif (false) {\n    /**\n     * Duration in milliseconds for the enter animation (expansion from point of contact).\n     * @type {?|undefined}\n     */\n    RippleAnimationConfig.prototype.enterDuration;\n    /**\n     * Duration in milliseconds for the exit animation (fade-out).\n     * @type {?|undefined}\n     */\n    RippleAnimationConfig.prototype.exitDuration;\n}\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * \\@docs-private\n * @record\n */\nfunction RippleTarget() { }\nif (false) {\n    /**\n     * Configuration for ripples that are launched on pointer down.\n     * @type {?}\n     */\n    RippleTarget.prototype.rippleConfig;\n    /**\n     * Whether ripples on pointer down should be disabled.\n     * @type {?}\n     */\n    RippleTarget.prototype.rippleDisabled;\n}\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementOrElementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this._onMousedown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Screen readers will fire fake mouse events for space/enter. Skip launching a\n            // ripple in this case for consistency with the non-screen-reader experience.\n            /** @type {?} */\n            const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n            /** @type {?} */\n            const isSyntheticEvent = this._lastTouchStartEvent &&\n                Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n                this._isPointerDown = true;\n                this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this._onTouchStart = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (!this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                this._lastTouchStartEvent = Date.now();\n                this._isPointerDown = true;\n                // Use `changedTouches` so we skip any touches where the user put\n                // their finger down, but used another finger to tap the element again.\n                /** @type {?} */\n                const touches = event.changedTouches;\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this._onPointerUp = (/**\n         * @return {?}\n         */\n        () => {\n            if (!this._isPointerDown) {\n                return;\n            }\n            this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            this._activeRipples.forEach((/**\n             * @param {?} ripple\n             * @return {?}\n             */\n            ripple => {\n                // By default, only ripples that are completely visible will fade out on pointer release.\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                /** @type {?} */\n                const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                    ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            }));\n        });\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents\n                .set('mousedown', this._onMousedown)\n                .set('mouseup', this._onPointerUp)\n                .set('mouseleave', this._onPointerUp)\n                .set('touchstart', this._onTouchStart)\n                .set('touchend', this._onPointerUp)\n                .set('touchcancel', this._onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }), duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            rippleRef.state = 3 /* HIDDEN */;\n            (/** @type {?} */ (rippleEl.parentNode)).removeChild(rippleEl);\n        }), animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => ripple.fadeOut()));\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} elementOrElementRef\n     * @return {?}\n     */\n    setupTriggerEvents(elementOrElementRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                element.addEventListener(type, fn, passiveEventOptions);\n            }));\n        }));\n        this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(fn, delay)));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                (/** @type {?} */ (this._triggerElement)).removeEventListener(type, fn, passiveEventOptions);\n            }));\n        }\n    }\n}\nif (false) {\n    /**\n     * Element where the ripples are being added to.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._containerElement;\n    /**\n     * Element which triggers the ripple elements on mouse events.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._triggerElement;\n    /**\n     * Whether the pointer is currently down or not.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._isPointerDown;\n    /**\n     * Events to be registered on the trigger element.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._triggerEvents;\n    /**\n     * Set of currently active ripple references.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._activeRipples;\n    /**\n     * Latest non-persistent ripple that was triggered.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._mostRecentTransientRipple;\n    /**\n     * Time in milliseconds when the last touchstart event happened.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._lastTouchStartEvent;\n    /**\n     * Cached dimensions of the ripple container. Set when the first\n     * ripple is shown and cleared once no more ripples are visible.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._containerRect;\n    /**\n     * Function being called whenever the trigger is being pressed using mouse.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._onMousedown;\n    /**\n     * Function being called whenever the trigger is being pressed using touch.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._onTouchStart;\n    /**\n     * Function being called whenever the trigger is being released.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._onPointerUp;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._target;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._ngZone;\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configurable options for `matRipple`.\n * @record\n */\nfunction RippleGlobalOptions() { }\nif (false) {\n    /**\n     * Whether ripples should be disabled. Ripples can be still launched manually by using\n     * the `launch()` method. Therefore focus indicators will still show up.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.disabled;\n    /**\n     * Configuration for the animation duration of the ripples. There are two phases with different\n     * durations for the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.animation;\n    /**\n     * Whether ripples should start fading out immediately after the mouse or touch is released. By\n     * default, ripples will wait for the enter animation to complete and for mouse or touch release.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.terminateOnPointerUp;\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} globalOptions\n     * @param {?=} animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign({}, this._globalOptions.animation), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\nif (false) {\n    /**\n     * Custom color for all ripples.\n     * @type {?}\n     */\n    MatRipple.prototype.color;\n    /**\n     * Whether the ripples should be visible outside the component's bounds.\n     * @type {?}\n     */\n    MatRipple.prototype.unbounded;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     * @type {?}\n     */\n    MatRipple.prototype.centered;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     * @type {?}\n     */\n    MatRipple.prototype.radius;\n    /**\n     * Configuration for the ripple animation. Allows modifying the enter and exit animation\n     * duration of the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     * @type {?}\n     */\n    MatRipple.prototype.animation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._trigger;\n    /**\n     * Renderer for the ripple DOM manipulations.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._rippleRenderer;\n    /**\n     * Options that are set globally for all ripples.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._globalOptions;\n    /**\n     * Whether ripple directive is initialized and the input bindings are set.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._isInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); }, imports: [[MatCommonModule, PlatformModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule,\n        PlatformModule]; }, exports: function () { return [MatRipple,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/selection/pseudo-checkbox/pseudo-checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Display state of the checkbox.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.state;\n    /**\n     * Whether the checkbox is disabled.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.disabled;\n    /** @type {?} */\n    MatPseudoCheckbox.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/selection/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/optgroup.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) { return ɵMatOptgroup_BaseFactory(t || MatOptgroup); };\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", label: \"label\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\nconst ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></label>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId'\n                },\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n            }]\n    }], null, { label: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatOptgroup.ngAcceptInputType_disabled;\n    /**\n     * Label for the option group.\n     * @type {?}\n     */\n    MatOptgroup.prototype.label;\n    /**\n     * Unique id for the underlying label.\n     * @type {?}\n     */\n    MatOptgroup.prototype._labelId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/option.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the option that emitted the event.\n     * @type {?}\n     */\n    MatOptionSelectionChange.prototype.source;\n    /**\n     * Whether the change in the option's value was a result of a user action.\n     * @type {?}\n     */\n    MatOptionSelectionChange.prototype.isUserInput;\n}\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * \\@docs-private\n * @record\n */\nfunction MatOptionParentComponent() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.disableRipple;\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.multiple;\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @param {?=} _origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8)); };\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, exportAs: [\"matOption\"], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, directives: [ɵngcc3.NgIf, MatRipple,\n        MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option mat-focus-indicator'\n                },\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }] }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatOption.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._active;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._mostRecentViewValue;\n    /**\n     * The form value of the option.\n     * @type {?}\n     */\n    MatOption.prototype.value;\n    /**\n     * The unique ID of the option.\n     * @type {?}\n     */\n    MatOption.prototype.id;\n    /**\n     * Event emitted when the option is selected or deselected.\n     * @type {?}\n     */\n    MatOption.prototype.onSelectionChange;\n    /**\n     * Emits when the state of the option changes and any parents have to be notified.\n     * @type {?}\n     */\n    MatOption.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._parent;\n    /** @type {?} */\n    MatOption.prototype.group;\n}\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); }, imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption,\n        MatOptgroup]; }, imports: function () { return [MatRippleModule,\n        CommonModule,\n        MatPseudoCheckboxModule]; }, exports: function () { return [MatOption,\n        MatOptgroup]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/label/label-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\n *     `\\@angular/material/form-field` instead.\n * \\@breaking-change 11.0.0\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n/**\n * Configurable options for floating labels.\n * @deprecated Use `MatFormFieldDefaultOptions` from `\\@angular/material/form-field` instead.\n * \\@breaking-change 11.0.0\n * @record\n */\nfunction LabelOptions() { }\nif (false) {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     * @type {?|undefined}\n     */\n    LabelOptions.prototype.float;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/month-constants.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, GestureConfig, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, MAT_HAMMER_OPTIONS, MAT_LABEL_GLOBAL_OPTIONS, MAT_NATIVE_DATE_FORMATS, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RippleRef, RippleRenderer, SEP, ShowOnDirtyErrorStateMatcher, VERSION, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };\n\n//# sourceMappingURL=core.js.map","import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Possible overrides for a dialog's position.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatDialogContainer_ng_template_0_Template(rf, ctx) { }\nfunction DialogPosition() { }\nif (false) {\n    /**\n     * Override for the dialog's top position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.top;\n    /**\n     * Override for the dialog's bottom position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.bottom;\n    /**\n     * Override for the dialog's left position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.left;\n    /**\n     * Override for the dialog's right position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.right;\n}\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n * @template D\n */\nclass MatDialogConfig {\n    constructor() {\n        /**\n         * The ARIA role of the dialog element.\n         */\n        this.role = 'dialog';\n        /**\n         * Custom class for the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the dialog has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Custom class for the backdrop.\n         */\n        this.backdropClass = '';\n        /**\n         * Whether the user can use escape or clicking on the backdrop to close the modal.\n         */\n        this.disableClose = false;\n        /**\n         * Width of the dialog.\n         */\n        this.width = '';\n        /**\n         * Height of the dialog.\n         */\n        this.height = '';\n        /**\n         * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n         */\n        this.maxWidth = '80vw';\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * ID of the element that describes the dialog.\n         */\n        this.ariaDescribedBy = null;\n        /**\n         * ID of the element that labels the dialog.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Aria label to assign to the dialog element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the dialog should focus the first focusable element on open.\n         */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\nif (false) {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.viewContainerRef;\n    /**\n     * ID for the dialog. If omitted, a unique one will be generated.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.id;\n    /**\n     * The ARIA role of the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.role;\n    /**\n     * Custom class for the overlay pane.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.panelClass;\n    /**\n     * Whether the dialog has a backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.hasBackdrop;\n    /**\n     * Custom class for the backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.backdropClass;\n    /**\n     * Whether the user can use escape or clicking on the backdrop to close the modal.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.disableClose;\n    /**\n     * Width of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.width;\n    /**\n     * Height of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.height;\n    /**\n     * Min-width of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minWidth;\n    /**\n     * Min-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minHeight;\n    /**\n     * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxWidth;\n    /**\n     * Max-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxHeight;\n    /**\n     * Position overrides.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.position;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.data;\n    /**\n     * Layout direction for the dialog's content.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.direction;\n    /**\n     * ID of the element that describes the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaDescribedBy;\n    /**\n     * ID of the element that labels the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabelledBy;\n    /**\n     * Aria label to assign to the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabel;\n    /**\n     * Whether the dialog should focus the first focusable element on open.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.autoFocus;\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.restoreFocus;\n    /**\n     * Scroll strategy to be used for the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.scrollStrategy;\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    MatDialogConfig.prototype.closeOnNavigation;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.componentFactoryResolver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatDialog.\n * \\@docs-private\n * @type {?}\n */\nconst matDialogAnimations = {\n    /**\n     * Animation that is applied on the dialog container by defalt.\n     */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nclass MatDialogContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _changeDetectorRef\n     * @param {?} _document\n     * @param {?} _config\n     */\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, _config) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        /**\n         * Element that was focused before the dialog was opened. Save this to restore upon close.\n         */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * State of the dialog animation.\n         */\n        this._state = 'enter';\n        /**\n         * Emits when an animation state changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            if (this._portalOutlet.hasAttached()) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @template C\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(element);\n        }\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            if (activeElement !== element && !element.contains(activeElement)) {\n                element.focus();\n            }\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the dialog opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        /** @type {?} */\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            /** @type {?} */\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Saves a reference to the element that was focused before the dialog was opened.\n     * @private\n     * @return {?}\n     */\n    _savePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = (/** @type {?} */ (this._document.activeElement));\n            // Note that there is no focus method when rendering on the server.\n            if (this._elementRef.nativeElement.focus) {\n                // Move focus onto the dialog immediately in order to prevent the user from accidentally\n                // opening multiple dialogs at the same time. Needs to be async, because the element\n                // may not be focusable immediately.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._elementRef.nativeElement.focus()));\n            }\n        }\n    }\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this._restoreFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Callback, invoked when an animation on the host starts.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Starts the dialog exit animation.\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = function MatDialogContainer_Factory(t) { return new (t || MatDialogContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDialogConfig)); };\nMatDialogContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDialogContainer, selectors: [[\"mat-dialog-container\"]], viewQuery: function MatDialogContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\", 1, \"mat-dialog-container\"], hostVars: 6, hostBindings: function MatDialogContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@dialogContainer.start\", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@dialogContainer.done\", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx._id)(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@dialogContainer\", ctx._state);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatDialogContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matDialogAnimations.dialogContainer] } });\n/** @nocollapse */\nMatDialogContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig }\n];\nMatDialogContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[attr.id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDialogConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._document;\n    /**\n     * The portal outlet inside of this container into which the dialog content will be loaded.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._portalOutlet;\n    /**\n     * The class that traps and manages focus within the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrap;\n    /**\n     * Element that was focused before the dialog was opened. Save this to restore upon close.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementFocusedBeforeDialogWasOpened;\n    /**\n     * State of the dialog animation.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._state;\n    /**\n     * Emits when an animation state changes.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._animationStateChanged;\n    /**\n     * ID of the element that should be considered as the dialog's label.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._ariaLabelledBy;\n    /**\n     * ID for the container DOM element.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._id;\n    /**\n     * Attaches a DOM portal to the dialog container.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDialogContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._changeDetectorRef;\n    /**\n     * The dialog configuration.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\n/** @type {?} */\nlet uniqueId = 0;\n/** @enum {number} */\nconst MatDialogState = {\n    OPEN: 0, CLOSING: 1, CLOSED: 2,\n};\n/**\n * Reference to a dialog opened via the MatDialog service.\n * @template T, R\n */\nclass MatDialogRef {\n    /**\n     * @param {?} _overlayRef\n     * @param {?} _containerInstance\n     * @param {?=} id\n     */\n    constructor(_overlayRef, _containerInstance, id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /**\n         * Whether the user is allowed to close the dialog.\n         */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /**\n         * Subject for notifying the user that the dialog has finished opening.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has finished closing.\n         */\n        this._afterClosed = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has started closing.\n         */\n        this._beforeClosed = new Subject();\n        /**\n         * Current state of the dialog.\n         */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'enter')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }));\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'exit')), take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.detachments().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = (/** @type {?} */ (null));\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.keydownEvents()\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.preventDefault();\n            this.close();\n        }));\n    }\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'start')), take(1))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._state = 2 /* CLOSED */;\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.dispose();\n            }), event.totalTime + 100);\n        }));\n        this._containerInstance._startExitAnimation();\n        this._state = 1 /* CLOSING */;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @return {?}\n     */\n    beforeClosed() {\n        return this._beforeClosed.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} position New dialog position.\n     * @return {THIS}\n     */\n    updatePosition(position) {\n        /** @type {?} */\n        let strategy = (/** @type {?} */ (this))._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {THIS}\n     */\n    updateSize(width = '', height = '') {\n        (/** @type {?} */ (this))._getPositionStrategy().width(width).height(height);\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    addPanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.addPanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    removePanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.removePanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the current state of the dialog's lifecycle.\n     * @return {?}\n     */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @private\n     * @return {?}\n     */\n    _getPositionStrategy() {\n        return (/** @type {?} */ (this._overlayRef.getConfig().positionStrategy));\n    }\n}\nif (false) {\n    /**\n     * The instance of component opened into the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.componentInstance;\n    /**\n     * Whether the user is allowed to close the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.disableClose;\n    /**\n     * Subject for notifying the user that the dialog has finished opening.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterOpened;\n    /**\n     * Subject for notifying the user that the dialog has finished closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterClosed;\n    /**\n     * Subject for notifying the user that the dialog has started closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._beforeClosed;\n    /**\n     * Result to be passed to afterClosed.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._result;\n    /**\n     * Handle to the timeout that's running as a fallback in case the exit animation doesn't fire.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._closeFallbackTimeout;\n    /**\n     * Current state of the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._state;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._overlayRef;\n    /** @type {?} */\n    MatDialogRef.prototype._containerInstance;\n    /** @type {?} */\n    MatDialogRef.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a dialog.\n * @type {?}\n */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/**\n * Injection token that can be used to specify default dialog options.\n * @type {?}\n */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _location\n     * @param {?} _defaultOptions\n     * @param {?} scrollStrategy\n     * @param {?} _parentDialog\n     * @param {?} _overlayContainer\n     */\n    constructor(_overlay, _injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    _location, _defaultOptions, scrollStrategy, _parentDialog, _overlayContainer) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => this.openDialogs.length ?\n            this._afterAllClosed :\n            this._afterAllClosed.pipe(startWith(undefined))))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Keeps track of the currently-open dialogs.\n     * @return {?}\n     */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /**\n     * Stream that emits when a dialog has been opened.\n     * @return {?}\n     */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    /**\n     * @return {?}\n     */\n    get _afterAllClosed() {\n        /** @type {?} */\n        const parent = this._parentDialog;\n        return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n    }\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        /** @type {?} */\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this._removeOpenDialog(dialogRef)));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param {?} id ID to use when looking up the dialog.\n     * @return {?}\n     */\n    getDialogById(id) {\n        return this.openDialogs.find((/**\n         * @param {?} dialog\n         * @return {?}\n         */\n        dialog => dialog.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @private\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @private\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        /** @type {?} */\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches an MatDialogContainer to a dialog's already-created overlay.\n     * @private\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }]\n        });\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatDialogContainer, config.viewContainerRef, injector, config.componentFactoryResolver);\n        /** @type {?} */\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created MatDialogContainer.\n     * @private\n     * @template T, R\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MatDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        /** @type {?} */\n        const dialogRef = new MatDialogRef(overlayRef, dialogContainer, config.id);\n        // When the dialog backdrop is clicked, we want to close it.\n        if (config.hasBackdrop) {\n            overlayRef.backdropClick().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (!dialogRef.disableClose) {\n                    dialogRef.close();\n                }\n            }));\n        }\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, (/** @type {?} */ (null)), (/** @type {?} */ ({ $implicit: config.data, dialogRef }))));\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            /** @type {?} */\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @private\n     * @template T\n     * @param {?} config Config object that is used to construct the dialog.\n     * @param {?} dialogRef Reference to the dialog.\n     * @param {?} dialogContainer\n     * @return {?} The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n        // content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n        // added to the injection tokens.\n        /** @type {?} */\n        const providers = [\n            { provide: MatDialogContainer, useValue: dialogContainer },\n            { provide: MAT_DIALOG_DATA, useValue: config.data },\n            { provide: MatDialogRef, useValue: dialogRef }\n        ];\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @private\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    _removeOpenDialog(dialogRef) {\n        /** @type {?} */\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((/**\n                 * @param {?} previousValue\n                 * @param {?} element\n                 * @return {?}\n                 */\n                (previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                }));\n                this._ariaHiddenElements.clear();\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     * @private\n     * @return {?}\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        /** @type {?} */\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            /** @type {?} */\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                /** @type {?} */\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /**\n     * Closes all of the dialogs in an array.\n     * @private\n     * @param {?} dialogs\n     * @return {?}\n     */\n    _closeDialogs(dialogs) {\n        /** @type {?} */\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\nMatDialog.ɵfac = function MatDialog_Factory(t) { return new (t || MatDialog)(ɵngcc0.ɵɵinject(ɵngcc3.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), ɵngcc0.ɵɵinject(MatDialog, 12), ɵngcc0.ɵɵinject(ɵngcc3.OverlayContainer)); };\nMatDialog.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDialog, factory: MatDialog.ɵfac });\n/** @nocollapse */\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialog, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatDialogConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DIALOG_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_SCROLL_STRATEGY]\n            }] }, { type: MatDialog, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc3.OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._openDialogsAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterAllClosedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterOpenedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._ariaHiddenElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._scrollStrategy;\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     * @type {?}\n     */\n    MatDialog.prototype.afterAllClosed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._defaultOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._parentDialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlayContainer;\n}\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @param {?=} defaultOptions Default options provided.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-content-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique IDs for dialog elements.\n * @type {?}\n */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    /**\n     * @param {?} dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /**\n         * Default to \"button\" to prevents accidental form submits.\n         */\n        this.type = 'button';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n}\nMatDialogClose.ɵfac = function MatDialogClose_Factory(t) { return new (t || MatDialogClose)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogClose.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogClose, selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]], hostVars: 2, hostBindings: function MatDialogClose_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler() { return ctx.dialogRef.close(ctx.dialogResult); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n    } }, inputs: { type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, exportAs: [\"matDialogClose\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogClose, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': 'dialogRef.close(dialogResult)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { type: [{\n            type: Input\n        }], dialogResult: [{\n            type: Input,\n            args: ['mat-dialog-close']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _matDialogClose: [{\n            type: Input,\n            args: ['matDialogClose']\n        }] }); })();\nif (false) {\n    /**\n     * Screenreader label for the button.\n     * @type {?}\n     */\n    MatDialogClose.prototype.ariaLabel;\n    /**\n     * Default to \"button\" to prevents accidental form submits.\n     * @type {?}\n     */\n    MatDialogClose.prototype.type;\n    /**\n     * Dialog close input.\n     * @type {?}\n     */\n    MatDialogClose.prototype.dialogResult;\n    /** @type {?} */\n    MatDialogClose.prototype._matDialogClose;\n    /** @type {?} */\n    MatDialogClose.prototype.dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._dialog;\n}\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    /**\n     * @param {?} _dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(_dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            }));\n        }\n    }\n}\nMatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) { return new (t || MatDialogTitle)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogTitle, selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]], hostAttrs: [1, \"mat-dialog-title\"], hostVars: 1, hostBindings: function MatDialogTitle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, exportAs: [\"matDialogTitle\"] });\n/** @nocollapse */\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogTitle, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDialogTitle.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialog;\n}\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = function MatDialogContent_Factory(t) { return new (t || MatDialogContent)(); };\nMatDialogContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogContent, selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]], hostAttrs: [1, \"mat-dialog-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContent, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            }]\n    }], null, null); })();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = function MatDialogActions_Factory(t) { return new (t || MatDialogActions)(); };\nMatDialogActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogActions, selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]], hostAttrs: [1, \"mat-dialog-actions\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogActions, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            }]\n    }], null, null); })();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param {?} element Element relative to which to look for a dialog.\n * @param {?} openDialogs References to the currently-open dialogs.\n * @return {?}\n */\nfunction getClosestDialog(element, openDialogs) {\n    /** @type {?} */\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find((/**\n     * @param {?} dialog\n     * @return {?}\n     */\n    dialog => dialog.id === (/** @type {?} */ (parent)).id)) : null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDialogModule });\nMatDialogModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDialogModule_Factory(t) { return new (t || MatDialogModule)(); }, providers: [\n        MatDialog,\n        MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[\n            OverlayModule,\n            PortalModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDialogModule, { declarations: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n\n//# sourceMappingURL=dialog.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r11._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r5._control.empty && !ctx_r5._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r5._control.empty && !ctx_r5._shouldAlwaysFloat)(\"mat-accent\", ctx_r5.color == \"accent\")(\"mat-warn\", ctx_r5.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r5.appearance != \"outline\")(\"id\", ctx_r5._labelId)(\"ngSwitch\", ctx_r5._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r5._control.id)(\"aria-owns\", ctx_r5._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.hideRequiredMarker && ctx_r5._control.required && !ctx_r5._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r7.color == \"accent\")(\"mat-warn\", ctx_r7.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r17._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r17.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r9._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n * @type {?}\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { SecurityContext, Injectable, Optional, Inject, ErrorHandler, ɵɵdefineInjectable, ɵɵinject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { of, throwError, forkJoin } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/common/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * \\@docs-private\n * @param {?} literal HTML that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Options that can be used to configure how an icon or the icons in an icon set are presented.\n * @record\n */\nfunction IconOptions() { }\nif (false) {\n    /**\n     * View box to set on the icon.\n     * @type {?|undefined}\n     */\n    IconOptions.prototype.viewBox;\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nclass SvgIconConfig {\n    /**\n     * @param {?} data\n     * @param {?=} options\n     */\n    constructor(data, options) {\n        this.options = options;\n        // Note that we can't use `instanceof SVGElement` here,\n        // because it'll break during server-side rendering.\n        if (!!((/** @type {?} */ (data))).nodeName) {\n            this.svgElement = (/** @type {?} */ (data));\n        }\n        else {\n            this.url = (/** @type {?} */ (data));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    SvgIconConfig.prototype.url;\n    /** @type {?} */\n    SvgIconConfig.prototype.svgElement;\n    /** @type {?} */\n    SvgIconConfig.prototype.options;\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    /**\n     * @param {?} _httpClient\n     * @param {?} _sanitizer\n     * @param {?} document\n     * @param {?=} _errorHandler\n     */\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /**\n         * Cache for icons loaded by direct URLs.\n         */\n        this._cachedIconsByUrl = new Map();\n        /**\n         * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n         */\n        this._inProgressUrlFetches = new Map();\n        /**\n         * Map from font identifiers to their CSS class names. Used for icon fonts.\n         */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIcon(iconName, url, options) {\n        return (/** @type {?} */ (this)).addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._createSvgElementForSingleIcon(sanitizedLiteral, options);\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSet(url, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._svgElementFromString(sanitizedLiteral);\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {THIS}\n     */\n    registerFontClassAlias(alias, className = alias) {\n        (/** @type {?} */ (this))._fontCssClassesByAlias.set(alias, className);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} className\n     * @return {THIS}\n     */\n    setDefaultFontSetClass(className) {\n        (/** @type {?} */ (this))._defaultFontSetClass = className;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    getSvgIconFromUrl(safeUrl) {\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        /** @type {?} */\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => this._cachedIconsByUrl.set((/** @type {?} */ (url)), svg))), map((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => cloneSvg(svg))));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        /** @type {?} */\n        const key = iconKey(namespace, name);\n        /** @type {?} */\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        /** @type {?} */\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => config.svgElement = svg)), map((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => cloneSvg(svg))));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @private\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        /** @type {?} */\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        /** @type {?} */\n        const iconSetFetchRequests = iconSetConfigs\n            .filter((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => !iconSetConfig.svgElement))\n            .map((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((/**\n             * @param {?} err\n             * @return {?}\n             */\n            (err) => {\n                /** @type {?} */\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                /** @type {?} */\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                // @breaking-change 9.0.0 _errorHandler parameter to be made required\n                if (this._errorHandler) {\n                    this._errorHandler.handleError(new Error(errorMessage));\n                }\n                else {\n                    console.error(errorMessage);\n                }\n                return of(null);\n            })));\n        }));\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        })));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            const config = iconSetConfigs[i];\n            if (config.svgElement) {\n                /** @type {?} */\n                const foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchUrl(config.url)\n            .pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => this._createSvgElementForSingleIcon(svgText, config.options))));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconSetFromConfig(config) {\n        // If the SVG for this icon set has already been parsed, do nothing.\n        if (config.svgElement) {\n            return of(config.svgElement);\n        }\n        return this._fetchUrl(config.url).pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => {\n            // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n            // only needs to occur if the cache is yet unset.\n            if (!config.svgElement) {\n                config.svgElement = this._svgElementFromString(svgText);\n            }\n            return config.svgElement;\n        })));\n    }\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @private\n     * @param {?} responseText\n     * @param {?=} options\n     * @return {?}\n     */\n    _createSvgElementForSingleIcon(responseText, options) {\n        /** @type {?} */\n        const svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg, options);\n        return svg;\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @param {?=} options\n     * @return {?}\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        /** @type {?} */\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        /** @type {?} */\n        const iconElement = (/** @type {?} */ (iconSource.cloneNode(true)));\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes((/** @type {?} */ (iconElement)), options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    _svgElementFromString(str) {\n        /** @type {?} */\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        /** @type {?} */\n        const svg = (/** @type {?} */ (div.querySelector('svg')));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _toSvgElement(element) {\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        /** @type {?} */\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @private\n     * @param {?} svg\n     * @param {?=} options\n     * @return {?}\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @private\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    _fetchUrl(safeUrl) {\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        /** @type {?} */\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        /** @type {?} */\n        const req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize((/**\n         * @return {?}\n         */\n        () => this._inProgressUrlFetches.delete(url))), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        (/** @type {?} */ (this))._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        /** @type {?} */\n        const configNamespace = (/** @type {?} */ (this))._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            (/** @type {?} */ (this))._iconSetConfigs.set(namespace, [config]);\n        }\n        return (/** @type {?} */ (this));\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler, 8)); };\n/** @nocollapse */\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\n/** @nocollapse */ MatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler, 8)); }, token: MatIconRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._document;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._svgIconConfigs;\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._iconSetConfigs;\n    /**\n     * Cache for icons loaded by direct URLs.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._cachedIconsByUrl;\n    /**\n     * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._inProgressUrlFetches;\n    /**\n     * Map from font identifiers to their CSS class names. Used for icon fonts.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._fontCssClassesByAlias;\n    /**\n     * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n     * The default 'material-icons' value assumes that the material icon font has been loaded as\n     * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._defaultFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._httpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._sanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._errorHandler;\n}\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @param {?=} document\n * @param {?=} errorHandler\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, document, errorHandler) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        [new Optional(), ErrorHandler],\n        [new Optional(), (/** @type {?} */ (DOCUMENT))],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (/** @type {?} */ (svg.cloneNode(true)));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatIcon.\n/**\n * \\@docs-private\n */\nclass MatIconBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatIconBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/**\n * Stubbed out location for `MatIcon`.\n * \\@docs-private\n * @record\n */\nfunction MatIconLocation() { }\nif (false) {\n    /** @type {?} */\n    MatIconLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * SVG attributes that accept a FuncIRI (e.g. `url(<something>)`).\n * @type {?}\n */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = /**\n * @param {?} attr\n * @return {?}\n */\nattr => `[${attr}]`;\n/**\n * Selector that can be used to find all elements that are using a `FuncIRI`.\n * @type {?}\n */\nconst funcIriAttributeSelector = funcIriAttributes.map((ɵ0)).join(', ');\n/**\n * Regex that can be used to extract the id out of a FuncIRI.\n * @type {?}\n */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _iconRegistry\n     * @param {?} ariaHidden\n     * @param {?=} _location\n     * @param {?=} _errorHandler\n     */\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     * @return {?}\n     */\n    get inline() {\n        return this._inline;\n    }\n    /**\n     * @param {?} inline\n     * @return {?}\n     */\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /**\n     * Font set that the icon is a part of.\n     * @return {?}\n     */\n    get fontSet() { return this._fontSet; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontSet(value) {\n        this._fontSet = this._cleanupFontValue(value);\n    }\n    /**\n     * Name of an icon within a font set.\n     * @return {?}\n     */\n    get fontIcon() { return this._fontIcon; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontIcon(value) {\n        this._fontIcon = this._cleanupFontValue(value);\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @private\n     * @param {?} iconName\n     * @return {?}\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        /** @type {?} */\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return (/** @type {?} */ (parts));\n            default: throw Error(`Invalid icon name: \"${iconName}\"`);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        /** @type {?} */\n        const svgIconChanges = changes['svgIcon'];\n        if (svgIconChanges) {\n            if (this.svgIcon) {\n                const [namespace, iconName] = this._splitIconName(this.svgIcon);\n                this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(take(1))\n                    .subscribe((/**\n                 * @param {?} svg\n                 * @return {?}\n                 */\n                svg => this._setSvgElement(svg)), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    /** @type {?} */\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    // @breaking-change 9.0.0 _errorHandler parameter to be made required.\n                    if (this._errorHandler) {\n                        this._errorHandler.handleError(new Error(errorMessage));\n                    }\n                    else {\n                        console.error(errorMessage);\n                    }\n                }));\n            }\n            else if (svgIconChanges.previousValue) {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        /** @type {?} */\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && this._location && cachedElements.size) {\n            /** @type {?} */\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    /**\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        /** @type {?} */\n        const styleTags = (/** @type {?} */ (svg.querySelectorAll('style')));\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        if (this._location) {\n            /** @type {?} */\n            const path = this._location.getPathname();\n            this._previousPath = path;\n            this._cacheChildrenWithExternalReferences(svg);\n            this._prependPathToReferences(path);\n        }\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _clearSvgElement() {\n        /** @type {?} */\n        const layoutElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            /** @type {?} */\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        /** @type {?} */\n        const elem = this._elementRef.nativeElement;\n        /** @type {?} */\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     * @private\n     * @param {?} path\n     * @return {?}\n     */\n    _prependPathToReferences(path) {\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((/**\n             * @param {?} attrs\n             * @param {?} element\n             * @return {?}\n             */\n            (attrs, element) => {\n                attrs.forEach((/**\n                 * @param {?} attr\n                 * @return {?}\n                 */\n                attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                }));\n            }));\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        /** @type {?} */\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach((/**\n             * @param {?} attr\n             * @return {?}\n             */\n            attr => {\n                /** @type {?} */\n                const elementWithReference = elementsWithFuncIri[i];\n                /** @type {?} */\n                const value = elementWithReference.getAttribute(attr);\n                /** @type {?} */\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    /** @type {?} */\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    (/** @type {?} */ (attributes)).push({ name: attr, value: match[1] });\n                }\n            }));\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler, 8)); };\nMatIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 4, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", fontSet: \"fontSet\", fontIcon: \"fontIcon\", svgIcon: \"svgIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, { inline: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatIcon.ngAcceptInputType_inline;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._inline;\n    /**\n     * Name of the icon in the SVG icon set.\n     * @type {?}\n     */\n    MatIcon.prototype.svgIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontSet;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontIconClass;\n    /**\n     * Keeps track of the current page path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousPath;\n    /**\n     * Keeps track of the elements and attributes that we've prefixed with the current path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._elementsWithExternalReferences;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._iconRegistry;\n    /**\n     * @deprecated `location` parameter to be made required.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._location;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._errorHandler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatIconModule {\n}\nMatIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatIconModule_Factory(t) { return new (t || MatIconModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n\n//# sourceMappingURL=icon.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    _isTextarea() {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()',\n                    '(blur)': '_focusChanged(false)',\n                    '(focus)': '_focusChanged(true)',\n                    '(input)': '_onInput()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base reference size of the spinner.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r33 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r33.diameter)(\"stroke-dashoffset\", ctx_r33._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r33._strokeCircumference, \"px\")(\"stroke-width\", ctx_r33._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r33._circleRadius);\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r34 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r34._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r34._strokeCircumference, \"px\")(\"stroke-width\", ctx_r34._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r34._circleRadius);\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r35 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r35.diameter)(\"stroke-dashoffset\", ctx_r35._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r35._strokeCircumference, \"px\")(\"stroke-width\", ctx_r35._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r35._circleRadius);\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r36 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r36._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r36._strokeCircumference, \"px\")(\"stroke-width\", ctx_r36._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r36._circleRadius);\n} }\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * \\@docs-private\n * @type {?}\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/**\n * \\@docs-private\n */\nclass MatProgressSpinnerBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressSpinnerBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/**\n * Default `mat-progress-spinner` options that can be overridden.\n * @record\n */\nfunction MatProgressSpinnerDefaultOptions() { }\nif (false) {\n    /**\n     * Diameter of the spinner.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.diameter;\n    /**\n     * Width of the spinner's stroke.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.strokeWidth;\n    /**\n     * Whether the animations should be force to be enabled, ignoring if the current environment is\n     * using NoopAnimationsModule.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype._forceAnimations;\n}\n/**\n * Injection token to be used to override the default options for `mat-progress-spinner`.\n * @type {?}\n */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\n/** @type {?} */\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} platform\n     * @param {?} _document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /**\n         * Mode of the progress circle\n         */\n        this.mode = 'determinate';\n        /** @type {?} */\n        const trackedDiameters = MatProgressSpinner._diameters;\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /**\n     * The diameter of the progress spinner (will set width and height of svg).\n     * @return {?}\n     */\n    get diameter() { return this._diameter; }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /**\n     * Stroke width of the progress spinner.\n     * @return {?}\n     */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /**\n     * Value of the progress circle.\n     * @return {?}\n     */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        /** @type {?} */\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /**\n     * The radius of the spinner, adjusted for stroke width.\n     * @return {?}\n     */\n    get _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /**\n     * The view box of the spinner's svg element.\n     * @return {?}\n     */\n    get _viewBox() {\n        /** @type {?} */\n        const viewBox = this._circleRadius * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /**\n     * The stroke circumference of the svg circle.\n     * @return {?}\n     */\n    get _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius;\n    }\n    /**\n     * The dash offset of the svg circle.\n     * @return {?}\n     */\n    get _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._strokeCircumference * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._strokeCircumference * 0.2;\n        }\n        return null;\n    }\n    /**\n     * Stroke width of the circle in percent.\n     * @return {?}\n     */\n    get _circleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /**\n     * Dynamically generates a style tag containing the correct animation for this diameter.\n     * @private\n     * @return {?}\n     */\n    _attachStyleNode() {\n        /** @type {?} */\n        const styleRoot = this._styleRoot;\n        /** @type {?} */\n        const currentDiameter = this._diameter;\n        /** @type {?} */\n        const diameters = MatProgressSpinner._diameters;\n        /** @type {?} */\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            /** @type {?} */\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', currentDiameter + '');\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /**\n     * Generates animation styles adjusted for the spinner's diameter.\n     * @private\n     * @return {?}\n     */\n    _getAnimationText() {\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this.diameter}`);\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\n/** @nocollapse */\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n     * We need to keep track of which elements the diameters were attached to, because for\n     * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n     * than the document head.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner._diameters;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_diameter;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_strokeWidth;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._diameter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._strokeWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._fallbackAnimation;\n    /**\n     * Element to which we should add the generated style tags for the indeterminate animation.\n     * For most elements this is the document, but for the ones in the Shadow DOM we need to\n     * use the shadow root.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._styleRoot;\n    /**\n     * Whether the _mat-animation-noopable class should be applied, disabling animations.\n     * @type {?}\n     */\n    MatProgressSpinner.prototype._noopAnimations;\n    /**\n     * Mode of the progress circle\n     * @type {?}\n     */\n    MatProgressSpinner.prototype.mode;\n    /** @type {?} */\n    MatProgressSpinner.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._document;\n}\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    /**\n     * @param {?} elementRef\n     * @param {?} platform\n     * @param {?} document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner,\n        MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner,\n        MatSpinner,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r20 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r20.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r23.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r21 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r21.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r27 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); const ctx_r26 = ɵngcc0.ɵɵnextContext(); return ctx_r26._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); const ctx_r28 = ɵngcc0.ɵɵnextContext(); return ctx_r28._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r22 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r22._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r22._transformOrigin)(\"font-size\", ctx_r22._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r22.panelClass)(\"@transformPanel\", ctx_r22.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r18 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r18)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { Directive, isDevMode, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatToolbar.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatToolbarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._checkToolbarMixedModes()));\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @private\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        /** @type {?} */\n        const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !(node.classList && node.classList.contains('mat-toolbar-row'))))\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)))\n            .some((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !!(node.textContent && node.textContent.trim())));\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow, { descendants: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._document;\n    /**\n     * Reference to all toolbar row elements that have been projected.\n     * @type {?}\n     */\n    MatToolbar.prototype._toolbarRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._platform;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar,\n        MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar,\n        MatToolbarRow,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n//# sourceMappingURL=toolbar.js.map","import { Injectable, NgZone, Optional, NgModule, defineInjectable, inject } from '@angular/core';\nimport { from, fromEvent, interval, merge, of, Subject, timer } from 'rxjs';\nimport { bufferTime, distinctUntilChanged, filter, finalize, map, scan, switchMap, take, takeUntil, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass UserIdleConfig {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * User's idle service.\n */\nclass UserIdleService {\n    /**\n     * @param {?} config\n     * @param {?} _ngZone\n     */\n    constructor(config, _ngZone) {\n        this._ngZone = _ngZone;\n        this.timerStart$ = new Subject();\n        this.idleDetected$ = new Subject();\n        this.timeout$ = new Subject();\n        /**\n         * Idle value in milliseconds.\n         * Default equals to 10 minutes.\n         */\n        this.idleMillisec = 600 * 1000;\n        /**\n         * Idle buffer wait time milliseconds to collect user action\n         * Default equals to 1 Sec.\n         */\n        this.idleSensitivityMillisec = 1000;\n        /**\n         * Timeout value in seconds.\n         * Default equals to 5 minutes.\n         */\n        this.timeout = 300;\n        /**\n         * Ping value in milliseconds.\n         * Default equals to 2 minutes.\n         */\n        this.pingMillisec = 120 * 1000;\n        if (config) {\n            this.setConfig(config);\n        }\n    }\n    /**\n     * Start watching for user idle and setup timer and ping.\n     * @return {?}\n     */\n    startWatching() {\n        if (!this.activityEvents$) {\n            this.activityEvents$ = merge(fromEvent(window, 'mousemove'), fromEvent(window, 'resize'), fromEvent(document, 'keydown'));\n        }\n        this.idle$ = from(this.activityEvents$);\n        if (this.idleSubscription) {\n            this.idleSubscription.unsubscribe();\n        }\n        // If any of user events is not active for idle-seconds when start timer.\n        this.idleSubscription = this.idle$\n            .pipe(bufferTime(this.idleSensitivityMillisec), // Starting point of detecting of user's inactivity\n        filter(arr => !arr.length && !this.isIdleDetected && !this.isInactivityTimer), tap(() => {\n            this.isIdleDetected = true;\n            this.idleDetected$.next(true);\n        }), switchMap(() => this._ngZone.runOutsideAngular(() => interval(1000).pipe(takeUntil(merge(this.activityEvents$, timer(this.idleMillisec).pipe(tap(() => {\n            this.isInactivityTimer = true;\n            this.timerStart$.next(true);\n        })))), finalize(() => {\n            this.isIdleDetected = false;\n            this.idleDetected$.next(false);\n        })))))\n            .subscribe();\n        this.setupTimer(this.timeout);\n        this.setupPing(this.pingMillisec);\n    }\n    /**\n     * @return {?}\n     */\n    stopWatching() {\n        this.stopTimer();\n        if (this.idleSubscription) {\n            this.idleSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    stopTimer() {\n        this.isInactivityTimer = false;\n        this.timerStart$.next(false);\n    }\n    /**\n     * @return {?}\n     */\n    resetTimer() {\n        this.stopTimer();\n        this.isTimeout = false;\n    }\n    /**\n     * Return observable for timer's countdown number that emits after idle.\n     * @return {?}\n     */\n    onTimerStart() {\n        return this.timerStart$.pipe(distinctUntilChanged(), switchMap(start => (start ? this.timer$ : of(null))));\n    }\n    /**\n     * Return observable for idle status changed\n     * @return {?}\n     */\n    onIdleStatusChanged() {\n        return this.idleDetected$.asObservable();\n    }\n    /**\n     * Return observable for timeout is fired.\n     * @return {?}\n     */\n    onTimeout() {\n        return this.timeout$.pipe(filter(timeout => !!timeout), tap(() => (this.isTimeout = true)), map(() => true));\n    }\n    /**\n     * @return {?}\n     */\n    getConfigValue() {\n        return {\n            idle: this.idleMillisec,\n            idleSensitivity: this.idleSensitivityMillisec,\n            timeout: this.timeout,\n            ping: this.pingMillisec\n        };\n    }\n    /**\n     * Set config values.\n     * @param {?} config\n     * @return {?}\n     */\n    setConfigValues(config) {\n        if (this.idleSubscription && !this.idleSubscription.closed) {\n            console.error('Call stopWatching() before set config values');\n            return;\n        }\n        this.setConfig(config);\n    }\n    /**\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    setConfig(config) {\n        if (config.idle) {\n            this.idleMillisec = config.idle * 1000;\n        }\n        if (config.ping) {\n            this.pingMillisec = config.ping * 1000;\n        }\n        if (config.idleSensitivity) {\n            this.idleSensitivityMillisec = config.idleSensitivity * 1000;\n        }\n        if (config.timeout) {\n            this.timeout = config.timeout;\n        }\n    }\n    /**\n     * Set custom activity events\n     *\n     * @param {?} customEvents Example: merge(\n     *   fromEvent(window, 'mousemove'),\n     *   fromEvent(window, 'resize'),\n     *   fromEvent(document, 'keydown'),\n     *   fromEvent(document, 'touchstart'),\n     *   fromEvent(document, 'touchend')\n     * )\n     * @return {?}\n     */\n    setCustomActivityEvents(customEvents) {\n        if (this.idleSubscription && !this.idleSubscription.closed) {\n            console.error('Call stopWatching() before set custom activity events');\n            return;\n        }\n        this.activityEvents$ = customEvents;\n    }\n    /**\n     * Setup timer.\n     *\n     * Counts every seconds and return n+1 and fire timeout for last count.\n     * @protected\n     * @param {?} timeout Timeout in seconds.\n     * @return {?}\n     */\n    setupTimer(timeout) {\n        this._ngZone.runOutsideAngular(() => {\n            this.timer$ = interval(1000).pipe(take(timeout), map(() => 1), scan((acc, n) => acc + n), tap(count => {\n                if (count === timeout) {\n                    this.timeout$.next(true);\n                }\n            }));\n        });\n    }\n    /**\n     * Setup ping.\n     *\n     * Pings every ping-seconds only if is not timeout.\n     * @protected\n     * @param {?} pingMillisec\n     * @return {?}\n     */\n    setupPing(pingMillisec) {\n        this.ping$ = interval(pingMillisec).pipe(filter(() => !this.isTimeout));\n    }\n}\nUserIdleService.ɵfac = function UserIdleService_Factory(t) { return new (t || UserIdleService)(ɵngcc0.ɵɵinject(UserIdleConfig, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nUserIdleService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: UserIdleService, factory: UserIdleService.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nUserIdleService.ctorParameters = () => [\n    { type: UserIdleConfig, decorators: [{ type: Optional }] },\n    { type: NgZone }\n];\n/** @nocollapse */ UserIdleService.ngInjectableDef = defineInjectable({ factory: function UserIdleService_Factory() { return new UserIdleService(inject(UserIdleConfig, 8), inject(NgZone)); }, token: UserIdleService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UserIdleService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: UserIdleConfig, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass UserIdleModule {\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    static forRoot(config) {\n        return {\n            ngModule: UserIdleModule,\n            providers: [\n                { provide: UserIdleConfig, useValue: config }\n            ]\n        };\n    }\n}\nUserIdleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: UserIdleModule });\nUserIdleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function UserIdleModule_Factory(t) { return new (t || UserIdleModule)(); }, imports: [[]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UserIdleModule, [{\n        type: NgModule,\n        args: [{\n                imports: []\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { UserIdleService, UserIdleConfig, UserIdleModule };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","<!-- Error close 0-->\n<ng-container *ngIf=\"data.type === 0\">\n  <div class=\"animated fadeIn fast\">\n    <div class=\"mat-dialog-p-t-tp\">\n      <mat-toolbar color=\"warn\" class=\"mat-dialog-c-t-c\">\n        <mat-icon class=\"mat-dialog-p-i-tp\">warning</mat-icon>\n      </mat-toolbar>\n    </div>\n    <div class=\"mat-mb-20 mat-mt-30\"></div>\n    <br>\n    <div class=\"mat-ml-30 mat-mr-30\">\n      <br>\n      <br>\n      <h2 class=\"mat-ma\">{{data.title}}</h2>\n      <h3 class=\"c-CoolGrey11 mat-mb-0 mat-mt-0\">{{data.message}}</h3>\n    </div>\n    <br>\n    <button mat-raised-button color=\"warn\" class=\"mat-float-shadow\" (click)=\"onClose()\">\n      <span>Aceptar</span>\n    </button>\n    <br>\n    <br>\n    <div class=\"mat-dialog-p-t-bt\">\n      <mat-toolbar color=\"warn\" class=\"mat-dialog-c-div-c\"></mat-toolbar>\n    </div>\n  </div>\n</ng-container>\n<!-- Ok close 1-->\n<ng-container *ngIf=\"data.type === 1\">\n  <div class=\"animated fadeIn fast\">\n    <div class=\"mat-dialog-p-t-tp\">\n      <mat-toolbar class=\"mat-dialog-c-t-c-s bg-green c-white\">\n        <mat-icon class=\"mat-dialog-p-i-tp-s\">check_circle</mat-icon>\n      </mat-toolbar>\n    </div>\n    <div class=\"mat-mb-20 mat-mt-30\"></div>\n    <br>\n    <div class=\"mat-ml-30 mat-mr-30\">\n      <br>\n      <br>\n      <h2 class=\"mat-ma\">{{data.title}}</h2>\n      <h3 class=\"c-CoolGrey11 mat-mb-0 mat-mt-0\">{{data.message}}</h3>\n    </div>\n    <br>\n    <button mat-raised-button class=\"mat-float-shadow bg-green c-white\" (click)=\"onClose()\">\n      <span>Aceptar</span>\n    </button>\n    <br>\n    <br>\n    <div class=\"mat-dialog-p-t-bt\">\n      <mat-toolbar class=\"mat-dialog-c-div-c-s bg-green c-white\"></mat-toolbar>\n    </div>\n  </div>\n</ng-container>\n<!-- Ok redirect to SignIn 2-->\n<ng-container *ngIf=\"data.type === 2\">\n  <div class=\"animated fadeIn fast\">\n    <div class=\"mat-dialog-p-t-tp\">\n      <mat-toolbar class=\"mat-dialog-c-t-c-s bg-green c-white\">\n        <mat-icon class=\"mat-dialog-p-i-tp-s\">check_circle</mat-icon>\n      </mat-toolbar>\n    </div>\n    <div class=\"mat-mb-20 mat-mt-30\"></div>\n    <br>\n    <div class=\"mat-ml-30 mat-mr-30\">\n      <br>\n      <br>\n      <h2 class=\"mat-ma\">{{data.title}}</h2>\n      <h3 class=\"c-CoolGrey11 mat-mb-0 mat-mt-0\">{{data.message}}</h3>\n    </div>\n    <br>\n    <button mat-raised-button class=\"mat-float-shadow bg-green c-white\" (click)=\"onClick()\">\n      <span>Aceptar</span>\n    </button>\n    <br>\n    <br>\n    <div class=\"mat-dialog-p-t-bt\">\n      <mat-toolbar class=\"mat-dialog-c-div-c-s bg-green c-white\"></mat-toolbar>\n    </div>\n  </div>\n</ng-container>\n<!-- Ok add span redirect to SingIn 3-->\n<ng-container *ngIf=\"data.type === 3\">\n  <div class=\"animated fadeIn fast\">\n    <div class=\"mat-dialog-p-t-tp\">\n      <mat-toolbar class=\"mat-dialog-c-t-c-s bg-green c-white\">\n        <mat-icon class=\"mat-dialog-p-i-tp-s\">check_circle</mat-icon>\n      </mat-toolbar>\n    </div>\n    <div class=\"mat-mb-20 mat-mt-30\"></div>\n    <br>\n    <div class=\"mat-ml-30 mat-mr-30\">\n      <br>\n      <br>\n      <h2 class=\"mat-ma\">{{data.title}}</h2>\n      <h3 class=\"c-CoolGrey11 mat-mb-0 mat-mt-0\">{{data.message}}</h3>\n      <span class=\"mat-ma\">Ir a C3-Requerimientos</span>\n    </div>\n    <br>\n    <button mat-raised-button class=\"mat-float-shadow bg-green c-white\" (click)=\"onClick()\">\n      <span>Aceptar</span>\n    </button>\n    <br>\n    <br>\n    <div class=\"mat-dialog-p-t-bt\">\n      <mat-toolbar class=\"mat-dialog-c-div-c-s bg-green c-white\"></mat-toolbar>\n    </div>\n  </div>\n</ng-container>\n<!-- Error redirect SignIn 4-->\n<ng-container *ngIf=\"data.type === 4\">\n  <div class=\"animated fadeIn fast\">\n    <div class=\"mat-dialog-p-t-tp\">\n      <mat-toolbar color=\"warn\" class=\"mat-dialog-c-t-c\">\n        <mat-icon class=\"mat-dialog-p-i-tp\">warning</mat-icon>\n      </mat-toolbar>\n    </div>\n    <div class=\"mat-mb-20 mat-mt-30\"></div>\n    <br>\n    <div class=\"mat-ml-30 mat-mr-30\">\n      <br>\n      <br>\n      <h2 class=\"mat-ma\">{{data.title}}</h2>\n      <h3 class=\"c-CoolGrey11 mat-mb-0 mat-mt-0\">{{data.message}}</h3>\n    </div>\n    <br>\n    <button mat-raised-button color=\"warn\" class=\"mat-float-shadow\" (click)=\"onClick()\">\n      <span>Aceptar</span>\n    </button>\n    <br>\n    <br>\n    <div class=\"mat-dialog-p-t-bt\">\n      <mat-toolbar color=\"warn\" class=\"mat-dialog-c-div-c\"></mat-toolbar>\n    </div>\n  </div>\n</ng-container>\n<!-- Session Expiration 5-->\n<ng-container *ngIf=\"data.type === 5\">\n  <mat-toolbar color=\"warn\">\n    <h2 class=\"mat-ma\">{{data.message}}</h2>\n  </mat-toolbar>\n  <div>\n    <div class=\"mat-mf-57 mat-d-flex\">\n      <mat-icon class=\"mat-fs-50 mat-ma\">history</mat-icon>\n      <h3 class=\"mat-ma mat-pl-10 mat-pt-25\">&nbsp;&nbsp;Tu sesion en línea terminará en:</h3>\n    </div>\n    <div>\n      <h1>{{time | decreaseMinutes : 2}}</h1>\n    </div>\n    <br>\n    <div>\n      <span>Por favor\n        <strong>click</strong> en\n        <strong>'Continuar'</strong> para seguir trabajando.\n      </span>\n    </div>\n    <br>\n    <div>\n      <span>o\n        <strong>click</strong> en\n        <strong>'Salir'</strong> para finalizar tu sesión ahora\n      </span>\n    </div>\n    <br>\n    <mat-divider class=\"mat-p-initial\"></mat-divider>\n    <br>\n    <br>\n    <div class=\"mat-d-flex mat-jc-center mat-pb-16\">\n      <button mat-raised-button class=\"bg-green c-white mat-mr-15 mat-float-shadow mat-width-sm\"\n        [disabled]=\"time === 120\" (click)=\"singIn()\">\n        <mat-icon>check_circle</mat-icon>\n        <span>&nbsp;&nbsp;Continuar</span>\n      </button>\n      <button mat-raised-button color=\"warn\" class=\"mat-float-shadow mat-width-sm\" (click)=\"logout()\">\n        <mat-icon>exit_to_app</mat-icon>\n        <span>&nbsp;&nbsp;Salir</span>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<!-- Ok 2 button redirect to SignIn 7-->\n<ng-container *ngIf=\"data.type === 7\">\n  <div class=\"animated fadeIn fast\">\n    <div class=\"mat-dialog-p-t-tp\">\n      <mat-toolbar class=\"mat-dialog-c-t-c-s bg-green c-white\">\n        <mat-icon class=\"mat-dialog-p-i-tp-s\">check_circle</mat-icon>\n      </mat-toolbar>\n    </div>\n    <div class=\"mat-mb-20 mat-mt-30\"></div>\n    <br>\n    <div class=\"mat-ml-30 mat-mr-30\">\n      <br>\n      <br>\n      <h2 class=\"mat-ma\">{{data.title}}</h2>\n      <h3 class=\"c-CoolGrey11 mat-mb-0 mat-mt-0\">{{data.message}}</h3>\n    </div>\n    <br>\n    <button mat-raised-button class=\"mat-float-shadow bg-green c-white\" [mat-dialog-close]=\"data.object\"\n      (click)=\"onClick()\">\n      <span>Aceptar</span>\n    </button>\n    <button mat-raised-button color=\"warn\" class=\"mat-float-shadow\" (click)=\"onClose()\">\n      <span>Cancelar</span>\n    </button>\n    <br>\n    <br>\n    <div class=\"mat-dialog-p-t-bt\">\n      <mat-toolbar class=\"mat-dialog-c-div-c-s bg-green c-white\"></mat-toolbar>\n    </div>\n  </div>\n</ng-container>\n<!-- Ok 2 button onClose 8-->\n<ng-container *ngIf=\"data.type === 8\">\n  <div class=\"animated fadeIn fast\">\n    <div class=\"mat-dialog-p-t-tp\">\n      <mat-toolbar class=\"mat-dialog-c-t-c-s bg-green c-white\">\n        <mat-icon class=\"mat-dialog-p-i-tp-s\">check_circle</mat-icon>\n      </mat-toolbar>\n    </div>\n    <div class=\"mat-mb-20 mat-mt-30\"></div>\n    <br>\n    <div class=\"mat-ml-30 mat-mr-30\">\n      <br>\n      <br>\n      <h2 class=\"mat-ma\">{{data.title}}</h2>\n      <h3 class=\"c-CoolGrey11 mat-mb-0 mat-mt-0\">{{data.message}}</h3>\n    </div>\n    <br>\n    <button mat-raised-button class=\"mat-float-shadow bg-green c-white\" [mat-dialog-close]=\"data.object\">\n      <span>Aceptar</span>\n    </button>\n    <button mat-raised-button color=\"warn\" class=\"mat-float-shadow mat-ml-20\" (click)=\"onClose()\">\n      <span>Cancelar</span>\n    </button>\n    <br>\n    <br>\n    <div class=\"mat-dialog-p-t-bt\">\n      <mat-toolbar class=\"mat-dialog-c-div-c-s bg-green c-white\"></mat-toolbar>\n    </div>\n  </div>\n</ng-container>\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DialogData } from '../../../interfaces/utils/dialog-data';\nimport { TokenService } from '../../../services/authentication/token/token.service';\nimport { UserIdleService } from 'angular-user-idle';\nimport { SharedInterfaceService } from '../../../services/utils/shared/shared-interface.service';\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\n\nexport class DialogComponent implements OnInit {\n  public time: number;\n\n  constructor(\n    private router: Router,\n    private tokenService: TokenService,\n    private userIdleService: UserIdleService,\n    private sharedInterfaceService: SharedInterfaceService,\n    public dialogRef: MatDialogRef<DialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n  }\n\n  async ngOnInit() {\n    if (this.data.type === 5)\n      this.sharedInterfaceService.timeInactivity.subscribe((data) => this.time = data);\n  }\n\n  onClick() {\n    this.dialogRef.close();\n    this.router.navigate([this.data.url]);\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  onCloseAdmin() {\n    this.data.message = 'accept';\n    this.dialogRef.close();\n  }\n\n  /** Session Expired*/\n  logout() {\n    this.dialogRef.close();\n    this.tokenService.deleteToken();\n    this.router.navigate([this.data.url]);\n  }\n\n  singIn() {\n    if (this.time < 120) {\n      this.userIdleService.stopTimer();\n      this.userIdleService.stopWatching();\n      this.userIdleService.startWatching();\n      this.userIdleService.resetTimer();\n      this.dialogRef.close();\n    }\n  }\n\n}\n","import { MatSelectModule } from '@angular/material/select';\n/** Module */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n/** Material */\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\n/** Component */\nimport {DialogComponent} from 'src/app/components/shared/dialog/dialog.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {RouterModule} from '@angular/router';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {DecreaseMinutesPipe} from '../../../pipes/time/decrease-minutes/decrease-minutes.pipe';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatInputModule} from '@angular/material/input';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSpinner, MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [DialogComponent, DecreaseMinutesPipe],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    /* -Material- */\n    MatDialogModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule\n  ],\n  entryComponents: [DialogComponent]\n})\nexport class DialogModule {\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'decreaseMinutes'\n})\nexport class DecreaseMinutesPipe implements PipeTransform {\n\n  transform(value: number, min: number): string {\n    const val = (min * 60) - value;\n    const minutes: number = Math.floor(val / 60);\n    const seconds: number = val - minutes * 60;\n    return (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n  }\n\n}\n","import {Injectable} from '@angular/core';\n/** Service */\nimport {SessionService} from '../session/session.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserSessionService {\n\n  constructor(private sessionService: SessionService) {\n  }\n\n  getUser(): any {\n    return this.sessionService.getSession('auth_user');\n  }\n\n  putUser(user: string) {\n    this.sessionService.putSession('auth_user', user);\n  }\n\n  deleteUser() {\n    this.sessionService.deleteSession('auth_user');\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedInterfaceService {\n\n  public data: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  public listData: BehaviorSubject<any>[] = [];\n  public timeInactivity: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n\n  putData(data: any) {\n    this.data.next(data);\n  }\n\n  putListData(data: any) {\n    const item =  new BehaviorSubject<any>(null);\n    item.next(data);\n    this.listData.push(item);\n  }\n\n  putTimeInactivity(time: number) {\n    this.timeInactivity.next(time);\n  }\n}\n","import {DialogData} from '../interfaces/utils/dialog-data';\r\n\r\nexport class DialogClass implements DialogData {\r\n  constructor(\r\n    public code: number = 0, public message: string = '', public title: string = 'Error', public type: number = 0, public url: string = '/signIn', public object: any = {} as any) {\r\n  }\r\n}\r\n"]}