{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/guards/auth/auth.guard.ts","./src/app/interceptors/auth-interceptor.ts","./src/app/services/authentication/login/auth.service.ts","./src/app/services/authentication/session/session.service.ts","./src/app/services/authentication/token/token.service.ts","./src/app/services/http-helper/http-helper.service.ts","./src/app/services/utils/cipher/cipher.service.ts","./src/environments/environment.ts","./src/main.ts","crypto (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<router-outlet></router-outlet>\n","// --------- Modules --------- //\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AuthInterceptor } from './interceptors/auth-interceptor';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// --------- Routing --------- //\nimport { AppRoutingModule } from './app.routing';\n// --------- Components ---------//\nimport { AppComponent } from './app.component';\n// --------- Service --------- //\nimport { AuthService } from './services/authentication/login/auth.service';\n\nexport function jwtTokenGetter() {\n  return localStorage.getItem('token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: jwtTokenGetter,\n      }\n    })\n  ],\n  providers: [AuthService, { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from './guards/auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'signIn',\n    loadChildren: () =>\n      import('./modules/authentication/login/login.module').then(\n        m => m.LoginModule\n      )\n  },\n  {\n    path: '',\n    canLoad: [AuthGuard],\n    loadChildren: () =>\n      import('./modules/dashboard/dashboard.module').then(\n        m => m.DashboardModule\n      )\n  },\n  {path: '', redirectTo: '/signIn', pathMatch: 'full'},\n  {path: '**', redirectTo: 'home'}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import {Injectable} from '@angular/core';\r\nimport {CanLoad, Route, Router, UrlSegment} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {TokenService} from 'src/app/services/authentication/token/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanLoad {\r\n  constructor(\r\n    public token: TokenService,\r\n    public router: Router\r\n  ) {\r\n  }\r\n\r\n  canLoad(route: Route, segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (!this.token.getToken()) {\r\n      this.router.navigate(['signIn']);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {TokenService} from '../services/authentication/token/token.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(\n    private tokenService: TokenService\n  ) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = this.tokenService.getToken();\n    if (token != null) {\n      req = req.clone({\n        setHeaders: {\n          Accept: '*/*',\n          Authorization: token,\n        },\n      });\n    } else {\n      req = req.clone({\n        setHeaders: {\n          Accept: '*/*'\n        },\n      });\n    }\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\n/** Service */\nimport { HttpHelperService } from '../../http-helper/http-helper.service';\n/** Environment */\nimport { environment } from '../../../../environments/environment';\n/** Interfaces */\nimport { Authenticate } from '../../../interfaces/auth';\n\n@Injectable()\nexport class AuthService {\n\n  private BASE_URL = environment.baseUrl + 'sign-in/';\n\n  constructor(private httpHelperService: HttpHelperService) {\n  }\n\n  login(user: Authenticate): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!user.user) {\n        return reject('El nombre de usuario es requerido.');\n      } else if (!user.pass) {\n        return reject('La contraseña es requerida.');\n      }\n\n      if (user.user === 'mtec' && user.pass === 'Mt3c2020')\n        resolve(true);\n      else reject(false)\n\n      //this.httpHelperService.postRequest(\n      //  this.BASE_URL,\n      //  user,\n      //  resolve,\n      //  reject\n      //);\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\n/** Service */\nimport {CipherService} from '../../utils/cipher/cipher.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n\n  constructor(private cipher: CipherService) {\n  }\n\n  putSession(key: string, value: string) {\n    const valCipher = this.cipher.cipher(value);\n    localStorage.setItem(key, valCipher);\n  }\n\n  getSession(key: string): any {\n    const cipher = localStorage.getItem(key);\n    return this.cipher.deCipher(cipher);\n  }\n\n  deleteSession(key: string) {\n    localStorage.removeItem(key);\n  }\n\n}\n","import {Injectable} from '@angular/core';\n/** Auth0 */\nimport {JwtHelperService} from '@auth0/angular-jwt';\n/** Service */\nimport {SessionService} from '../session/session.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor(public jwtHelper: JwtHelperService, private sessionService: SessionService) {\n  }\n\n  isTokenExpired(): boolean {\n    const token = this.sessionService.getSession('token');\n    if (token && token !== 'Bearer token') {\n      return !this.jwtHelper.isTokenExpired(token.toString().substring(7));\n    }\n    return false;\n  }\n\n  putToken(token: string) {\n    this.sessionService.putSession('token', token);\n  }\n\n  getToken(): string {\n    return this.sessionService.getSession('token');\n  }\n\n  deleteToken() {\n    this.sessionService.deleteSession('token');\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpHelperService {\r\n  private headers: any;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  // Return the header object\r\n  private static getOptionsHeaders() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n  }\r\n\r\n  // Handle an http error\r\n  private static handleError(err: any, reject: any) {\r\n    const status = err.status;\r\n    if (status === 0)\r\n      return reject({code: status, message: 'Connection Refused'});\r\n    else if (status === 500)\r\n      return reject({\r\n        code: status,\r\n        message: err.error.message != null ? err.error.message : 'Se presentó un error realizando la petición'\r\n      });\r\n    else\r\n      return reject({code: status, message: err.error.message});\r\n  }\r\n\r\n  // Makes and solves a GET request\r\n  getRequest(\r\n    endpoint: string,\r\n    resolve: any,\r\n    reject: any,\r\n    parameters?: any,\r\n  ) {\r\n    this.headers = HttpHelperService.getOptionsHeaders();\r\n    this.http.get(endpoint, parameters === undefined ? this.headers : {headers: this.headers, params: parameters}).subscribe(\r\n      (res: any) => {\r\n        resolve(res.data);\r\n      },\r\n      err => {\r\n        return HttpHelperService.handleError(err, reject);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Makes and solves a POST request\r\n  postRequest(\r\n    endpoint: string,\r\n    requestBody: any,\r\n    resolve: any,\r\n    reject: any,\r\n  ) {\r\n    this.http.post(endpoint, requestBody).subscribe(\r\n      (res: any) => {\r\n        if (res.headers) resolve(res);\r\n        else resolve(res.data);\r\n      },\r\n      err => {\r\n        return HttpHelperService.handleError(err, reject);\r\n      }\r\n    );\r\n  }\r\n\r\n  putRequest(\r\n    endpoint: string,\r\n    requestBody: any,\r\n    resolve: any,\r\n    reject: any,\r\n  ) {\r\n    this.http.put(endpoint, requestBody).subscribe(\r\n      (res: any) => {\r\n        if (res.headers) resolve(res);\r\n        else resolve(res.data);\r\n      },\r\n      err => {\r\n        return HttpHelperService.handleError(err, reject);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteRequest(\r\n    endpoint: string,\r\n    resolve: any,\r\n    reject: any,\r\n    parameters?: any,\r\n  ) {\r\n    this.headers = HttpHelperService.getOptionsHeaders();\r\n    this.http.delete(endpoint, parameters === undefined ? this.headers : {headers: this.headers, params: parameters}).subscribe(\r\n      (data: any) => {\r\n        resolve(data);\r\n      },\r\n      err => {\r\n        return HttpHelperService.handleError(err, reject);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport * as crypto from 'crypto-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CipherService {\n\n  private req = 'MTec';\n\n  constructor() {\n  }\n\n  cipher(data: string) {\n    const encrypt = crypto.AES.encrypt(JSON.stringify(data), this.req);\n    return encrypt.toString();\n  }\n\n  deCipher(data: string) {\n    if (data != null) {\n      const bytes = crypto.AES.decrypt(data, this.req);\n      return JSON.parse(bytes.toString(crypto.enc.Utf8));\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'local'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}