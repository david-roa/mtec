{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/guards/auth/auth.guard.ts","webpack:///src/app/interceptors/auth-interceptor.ts","webpack:///src/app/services/authentication/login/auth.service.ts","webpack:///src/app/services/authentication/session/session.service.ts","webpack:///src/app/services/authentication/token/token.service.ts","webpack:///src/app/services/http-helper/http-helper.service.ts","webpack:///src/app/services/utils/cipher/cipher.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///crypto (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","jwtTokenGetter","localStorage","getItem","AppModule","provide","useClass","multi","forRoot","config","tokenGetter","declarations","imports","providers","bootstrap","routes","path","loadChildren","m","LoginModule","canLoad","DashboardModule","redirectTo","pathMatch","AppRoutingModule","useHash","AuthGuard","token","router","route","segments","getToken","navigate","providedIn","AuthInterceptor","tokenService","next","clone","setHeaders","Accept","Authorization","handle","AuthService","httpHelperService","BASE_URL","baseUrl","user","reject","pass","SessionService","cipher","key","value","valCipher","setItem","deCipher","removeItem","TokenService","jwtHelper","sessionService","getSession","isTokenExpired","toString","substring","putSession","deleteSession","HttpHelperService","http","endpoint","parameters","headers","getOptionsHeaders","get","undefined","params","subscribe","res","data","err","handleError","requestBody","post","put","status","message","error","CipherService","encrypt","JSON","stringify","bytes","decrypt","parse","Utf8","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<router-outlet></router-outlet>\n","// --------- Modules --------- //\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AuthInterceptor } from './interceptors/auth-interceptor';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// --------- Routing --------- //\nimport { AppRoutingModule } from './app.routing';\n// --------- Components ---------//\nimport { AppComponent } from './app.component';\n// --------- Service --------- //\nimport { AuthService } from './services/authentication/login/auth.service';\n\nexport function jwtTokenGetter() {\n  return localStorage.getItem('token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: jwtTokenGetter,\n      }\n    })\n  ],\n  providers: [AuthService, { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from './guards/auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'signIn',\n    loadChildren: () =>\n      import('./modules/authentication/login/login.module').then(\n        m => m.LoginModule\n      )\n  },\n  {\n    path: '',\n    canLoad: [AuthGuard],\n    loadChildren: () =>\n      import('./modules/dashboard/dashboard.module').then(\n        m => m.DashboardModule\n      )\n  },\n  {path: '', redirectTo: '/signIn', pathMatch: 'full'},\n  {path: '**', redirectTo: 'home'}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import {Injectable} from '@angular/core';\r\nimport {CanLoad, Route, Router, UrlSegment} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {TokenService} from 'src/app/services/authentication/token/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanLoad {\r\n  constructor(\r\n    public token: TokenService,\r\n    public router: Router\r\n  ) {\r\n  }\r\n\r\n  canLoad(route: Route, segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (!this.token.getToken()) {\r\n      this.router.navigate(['signIn']);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {TokenService} from '../services/authentication/token/token.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(\n    private tokenService: TokenService\n  ) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = this.tokenService.getToken();\n    if (token != null) {\n      req = req.clone({\n        setHeaders: {\n          Accept: '*/*',\n          Authorization: token,\n        },\n      });\n    } else {\n      req = req.clone({\n        setHeaders: {\n          Accept: '*/*'\n        },\n      });\n    }\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\n/** Service */\nimport { HttpHelperService } from '../../http-helper/http-helper.service';\n/** Environment */\nimport { environment } from '../../../../environments/environment';\n/** Interfaces */\nimport { Authenticate } from '../../../interfaces/auth';\n\n@Injectable()\nexport class AuthService {\n\n  private BASE_URL = environment.baseUrl + 'sign-in/';\n\n  constructor(private httpHelperService: HttpHelperService) {\n  }\n\n  login(user: Authenticate): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!user.user) {\n        return reject('El nombre de usuario es requerido.');\n      } else if (!user.pass) {\n        return reject('La contraseña es requerida.');\n      }\n\n      if (user.user === 'mtec' && user.pass === 'Mt3c2020')\n        resolve(true);\n      else reject(false)\n\n      //this.httpHelperService.postRequest(\n      //  this.BASE_URL,\n      //  user,\n      //  resolve,\n      //  reject\n      //);\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\n/** Service */\nimport {CipherService} from '../../utils/cipher/cipher.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n\n  constructor(private cipher: CipherService) {\n  }\n\n  putSession(key: string, value: string) {\n    const valCipher = this.cipher.cipher(value);\n    localStorage.setItem(key, valCipher);\n  }\n\n  getSession(key: string): any {\n    const cipher = localStorage.getItem(key);\n    return this.cipher.deCipher(cipher);\n  }\n\n  deleteSession(key: string) {\n    localStorage.removeItem(key);\n  }\n\n}\n","import {Injectable} from '@angular/core';\n/** Auth0 */\nimport {JwtHelperService} from '@auth0/angular-jwt';\n/** Service */\nimport {SessionService} from '../session/session.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor(public jwtHelper: JwtHelperService, private sessionService: SessionService) {\n  }\n\n  isTokenExpired(): boolean {\n    const token = this.sessionService.getSession('token');\n    if (token && token !== 'Bearer token') {\n      return !this.jwtHelper.isTokenExpired(token.toString().substring(7));\n    }\n    return false;\n  }\n\n  putToken(token: string) {\n    this.sessionService.putSession('token', token);\n  }\n\n  getToken(): string {\n    return this.sessionService.getSession('token');\n  }\n\n  deleteToken() {\n    this.sessionService.deleteSession('token');\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpHelperService {\r\n  private headers: any;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  // Return the header object\r\n  private static getOptionsHeaders() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n  }\r\n\r\n  // Handle an http error\r\n  private static handleError(err: any, reject: any) {\r\n    const status = err.status;\r\n    if (status === 0)\r\n      return reject({code: status, message: 'Connection Refused'});\r\n    else if (status === 500)\r\n      return reject({\r\n        code: status,\r\n        message: err.error.message != null ? err.error.message : 'Se presentó un error realizando la petición'\r\n      });\r\n    else\r\n      return reject({code: status, message: err.error.message});\r\n  }\r\n\r\n  // Makes and solves a GET request\r\n  getRequest(\r\n    endpoint: string,\r\n    resolve: any,\r\n    reject: any,\r\n    parameters?: any,\r\n  ) {\r\n    this.headers = HttpHelperService.getOptionsHeaders();\r\n    this.http.get(endpoint, parameters === undefined ? this.headers : {headers: this.headers, params: parameters}).subscribe(\r\n      (res: any) => {\r\n        resolve(res.data);\r\n      },\r\n      err => {\r\n        return HttpHelperService.handleError(err, reject);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Makes and solves a POST request\r\n  postRequest(\r\n    endpoint: string,\r\n    requestBody: any,\r\n    resolve: any,\r\n    reject: any,\r\n  ) {\r\n    this.http.post(endpoint, requestBody).subscribe(\r\n      (res: any) => {\r\n        if (res.headers) resolve(res);\r\n        else resolve(res.data);\r\n      },\r\n      err => {\r\n        return HttpHelperService.handleError(err, reject);\r\n      }\r\n    );\r\n  }\r\n\r\n  putRequest(\r\n    endpoint: string,\r\n    requestBody: any,\r\n    resolve: any,\r\n    reject: any,\r\n  ) {\r\n    this.http.put(endpoint, requestBody).subscribe(\r\n      (res: any) => {\r\n        if (res.headers) resolve(res);\r\n        else resolve(res.data);\r\n      },\r\n      err => {\r\n        return HttpHelperService.handleError(err, reject);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteRequest(\r\n    endpoint: string,\r\n    resolve: any,\r\n    reject: any,\r\n    parameters?: any,\r\n  ) {\r\n    this.headers = HttpHelperService.getOptionsHeaders();\r\n    this.http.delete(endpoint, parameters === undefined ? this.headers : {headers: this.headers, params: parameters}).subscribe(\r\n      (data: any) => {\r\n        resolve(data);\r\n      },\r\n      err => {\r\n        return HttpHelperService.handleError(err, reject);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport * as crypto from 'crypto-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CipherService {\n\n  private req = 'MTec';\n\n  constructor() {\n  }\n\n  cipher(data: string) {\n    const encrypt = crypto.AES.encrypt(JSON.stringify(data), this.req);\n    return encrypt.toString();\n  }\n\n  deCipher(data: string) {\n    if (data != null) {\n      const bytes = crypto.AES.decrypt(data, this.req);\n      return JSON.parse(bytes.toString(crypto.enc.Utf8));\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'local'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}